{"version":3,"sources":["components/pages/Welcome.js","components/utils/useRecorder.js","components/pages/Recorder.js","components/pages/Player.js","components/utils/processAudio.js","components/pages/SoundChart.js","components/pages/ProductionTask.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","button","bottom","right","grid","direction","withRouter","props","classes","className","Paper","Grid","Typography","variant","component","gutterBottom","Container","to","style","textDecoration","Button","options","audioBitsPerSecond","AudioContext","FileReader","a","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","useState","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","rawData","setRawData","useEffect","start","stop","handleData","e","ctx","reader","readAsArrayBuffer","data","onloadend","console","log","decodeAudioData","result","then","decodedData","view","getChannelData","URL","createObjectURL","addEventListener","removeEventListener","requestRecorder","error","Recorder","startRecording","stopRecording","sets","id","ref","forwardedRef","src","controls","onClick","disabled","Player","url","marginRight","axios","defaults","xsrfCookieName","xsrfHeaderName","processAudioData","method","headers","transformRequest","JSON","stringify","transformResponse","parse","response","Chart","register","registerables","getPitchScatterData","processedData","i","length","NaN","newPitchChart","element","getContext","type","datasets","label","borderWidth","backgroundColor","scales","y","x","chart","marginBottom","setProcessedData","setChartA","chartB","setChartB","responseDataRef","useRef","questionDataRef","current","item","newCanvas","container_id","destroy","document","getElementById","remove","createElement","setAttribute","append","resetCanvas","pitchData","App","exact","path","Welcome","Unit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.adfb5b34.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\nconst createTrial = (props) => {\n  // When the user selects Enter, experiement begins. \n  // 1. Trial is created\n  // 2. Responses are intialized\n  \n}\n\nconst Welcome = (props) => {\n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n            </Grid>\n            <Container className={classes.container}>\n              <NavLink className={classes.button} to='/2' style={{ textDecoration: 'none' }} key= ''>\n                <Button variant=\"outlined\">Enter</Button>\n              </NavLink>\n            </Container>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n    }\n    }; \n\n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","\nimport { useState, useRef, useEffect } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"../utils/useRecorder\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\nexport default Recorder;","import React from 'react'\n\nconst Player = (url) => {\n    return (\n        <div className=\"Player\" style={{marginRight: \"100px\"}}>\n            <audio\n                controls\n                src={url}/>\n        </div>\n    )\n}\n\nexport default Player\n","import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            console.log(\"hello from transform\")\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            console.log(\"hello from response\")\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const processAudioData2 = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\nChart.register(...registerables);\n\nconst skipped = (ctx, value) => ctx.p0.skip || ctx.p1.skip ? value : undefined;\nconst down = (ctx, value) => ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;\n\nexport const getPitchScatterData = (processedData) => {\n    \n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport const resetCanvas = (id, container_id, chart) => {\n    chart.destroy()\n    document.getElementById(id).remove()\n    const newCanvas = document.createElement('canvas')\n    newCanvas.setAttribute('id', id)\n    document.getElementById(container_id).append(newCanvas)\n    return newCanvas\n}\n\nexport const newPitchChart = ( element, data ) => {\n    let ctx = element.getContext('2d')\n    \n    let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                }]\n            },\n            options: {\n                scales: {\n                    y: { },\n                    x: { }\n                }\n            }\n        });\n    return myChart\n}\n\nexport const updateChart = (chart, data) => {\n    const processedData = getPitchScatterData(data)\n    chart.data.datasets.data = data\n    chart.update()\n}\n\nexport default newPitchChart\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js'\nimport Player from './Player.js';\nimport axios from 'axios';\nimport { processAudioData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/submitResponse.js'\nimport { getPitchScatterData, resetCanvas, newPitchChart, newCanvas } from './SoundChart.js';\nimport { getCSRF } from '../utils/csrfHelper'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst ProdTask = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [taskData, setTaskData] = useState()\n\n    let [chartA, setChartA] = useState()\n    let [chartB, setChartB] = useState()\n\n    let responseDataRef = useRef(null);\n    let questionDataRef = useRef(null);\n    \n    let handleAudioChange = (data) => {\n        let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(data).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n         })\n    }\n\n    let nextTask = () => {\n\n        let response = { 'taskData': taskData, 'responseData': processedData }\n        submitResponse()\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) { \n            console.log(\"No changes recorded\") \n        } else {\n        console.log(\"Processed data changed:\", processedData)}\n        },[processedData]);\n\n    useEffect(() => {\n        setChartA(newPitchChart(questionDataRef.current, []))\n        setChartB(newPitchChart(responseDataRef.current, []))\n    },[]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                            <canvas id=\"question-data\" ref={questionDataRef}></canvas>\n                        </Paper>\n                        <Player url={\"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"}></Player>\n                    </Grid>\n                    <Grid item>\n                        <Paper id=\"response-data-container\" className={classes.chart}>\n                            <canvas id=\"response-data\" ref={responseDataRef}></canvas>\n                        </Paper>\n                        <Recorder sets={handleAudioChange} />\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={nextTask}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProdTask)\n","import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport Unit from './components/pages/ProductionTask'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route path=\"/2\" component={Unit} />\n          </Switch>\n        </MemoryRouter>\n        \n      </div>\n    );\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}