{"version":3,"sources":["components/utils/responseHelper.js","components/elements/AudioCharts.js","components/utils/useRecorder.js","components/elements/Recorder.js","components/pages/Welcome.js","components/elements/Player.js","components/elements/WordList.js","components/pages/Instructions.js","components/utils/remainingAttempts.js","components/pages/PerceptionDiscriminationTemplate.js","components/utils/processAudio.js","components/pages/ProductionControlledTemplate.js","components/pages/ProductionGuidedTemplate.js","components/pages/PerceptionIdentificationTonesTemplate.js","components/pages/PerceptionIdentificationProminenceTemplate.js","components/pages/End.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","getResponses","data","a","method","url","params","response","console","log","submitResponse","Chart","register","registerables","PitchChart","props","chartRef","useRef","useEffect","ctx","current","getContext","type","datasets","label","borderWidth","backgroundColor","options","scales","y","x","id","ref","audioBitsPerSecond","AudioContext","FileReader","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","useState","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","rawData","setRawData","start","stop","handleData","e","reader","readAsArrayBuffer","onloadend","decodeAudioData","result","then","decodedData","view","getChannelData","URL","createObjectURL","addEventListener","removeEventListener","requestRecorder","error","Recorder","startRecording","stopRecording","sets","className","forwardedRef","Grid","container","src","controls","Button","onClick","disabled","useStyles","makeStyles","theme","content","justifyContent","display","paper","padding","spacing","minWidth","minHeight","elevation","position","withRouter","newUser","setNewUser","code","setCode","sentenceData","history","useHistory","nextTask","push","classes","undefined","Paper","direction","alignItems","item","xs","Fade","in","Typography","variant","component","gutterBottom","Stack","TextField","autoFocus","margin","value","onChange","target","message","res","createTrial","Player","Item","styled","typography","body2","textAlign","color","palette","text","secondary","WordList","callback","wordList","setWordList","correct","incorrect","force","word","setWord","newList","concat","toLowerCase","v4","map","IconButton","aria-label","size","filter","handleRemove","Icon","height","Instructions","open","setOpen","Backdrop","sx","zIndex","drawer","childRef","remainingAttempts","num","showCorrect","showIncorrect","trial","setTrial","polite","setPolite","prominent","setProminent","sentenceA","setA","sentenceB","setB","instructionRef","getResponse","sentence","textContent","instructions","trial_id","response_id","instructions_short","alignContent","style","marginRight","marginLeft","filepath","ToggleButtonGroup","orientation","exclusive","event","nextView","ToggleButton","fullWidth","Box","width","Collapse","Alert","action","mb","severity","trial_target","request","eval","evaluate","alignSelf","task_id","processAudioData","headers","transformRequest","JSON","stringify","transformResponse","parse","getPitchScatterData","processedData","i","length","NaN","grid","button","bottom","right","chart","marginBottom","setProcessedData","isLoading","toggleLoading","nextTrial","pitch","CircularProgress","pitchData","handleAudioChange","setValue","attempts","setAttempts","submitted","isSubmitted","alert","m","noValidate","autoComplete","multiline","maxRows","currentTarget","userResponse","nextTaskId","nextType","nextTrialId","nextResponseId","Submit","evaluateTone","showForcedForward","words","setWords","Evaluate","Set","forEach","add","prominent_words","split","has","b","Next","flexDirection","App","exact","path","Welcome","PerceptionIdentificationTonesTemplate","PerceptionDiscriminationTemplate","PerceptionIdentificationProminenceTemplate","ProductionControlledTemplate","ProductionGuidedTemplate","End","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2QAEAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEzB,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDN,IAAM,CACzBO,OAAQ,OACRC,IAAK,sBACLH,KAAM,CAAEI,OAAQJ,KAJI,cAClBK,EADkB,OAMxBC,QAAQC,IAAIP,GACZM,QAAQC,IAAIF,GAPY,kBAQjBA,GARiB,2CAAH,sDAsBZG,EAAc,uCAAG,WAAOR,GAAP,eAAAC,EAAA,sEACCN,IAAM,CACzBO,OAAQ,OACRC,IAAK,wBACLH,KAAMA,IAJY,cAChBK,EADgB,OAMtBC,QAAQC,IAAI,sBANU,kBAOfF,GAPe,2CAAH,sD,kFCvB3BI,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAEX,IAAMC,EAAa,SAAEC,GACxB,IAAIC,EAAWC,mBAwBf,OAtBAC,qBAAU,WACN,IAAIC,EAAMH,EAASI,QAAQC,WAAW,MAExB,IAAIV,IAAMQ,EAAK,CACzBG,KAAM,UACNpB,KAAM,CACFqB,SAAU,CAAC,CACPC,MAAO,kBACPtB,KAAMa,EAAMb,KACZuB,YAAa,EACbC,gBAAiB,uBAGrBC,QAAS,CACLC,OAAQ,CACJC,EAAG,GACHC,EAAG,SAIjB,IAGF,wBAAQC,GAAG,gBAAgBC,IAAKhB,KC5BpCW,EAAU,CACZM,mBAAoB,MAIV,IAAIC,aACD,IAAIC,W,4CAyDnB,4BAAAhC,EAAA,sEACuBiC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IADpE,cACQC,EADR,yBAES,IAAIC,cAAcD,EAAQb,IAFnC,4C,sBAIee,MA3DK,WAAO,IAAD,EACMC,mBAAS,IADf,mBACnBC,EADmB,KACTC,EADS,OAEYF,oBAAS,GAFrB,mBAEnBG,EAFmB,KAENC,EAFM,OAGMJ,mBAAS,MAHf,mBAGnBK,EAHmB,KAGTC,EAHS,OAIIN,mBAAS,MAJb,mBAInBO,EAJmB,KAIVC,EAJU,KAOxBjC,qBAAU,WAER,GAAiB,OAAb8B,EAAJ,CAQIF,EACFE,EAASI,QAETJ,EAASK,OAIX,IAAMC,EAAa,SAAAC,GAEjB,IAAIpC,EAAM,IAAIe,aACVsB,EAAS,IAAIrB,WAEjBqB,EAAOC,kBAAkBF,EAAErD,MAC3BsD,EAAOE,UAAY,WACjBlD,QAAQC,IAAI,eACZU,EAAIwC,gBAAgBH,EAAOI,QAAQC,MAAK,SAASC,GAC/CtD,QAAQC,IAAIqD,GACZ,IAAMC,EAAOD,EAAYE,eAAe,GACxCb,EAAWY,GACXlB,EAAYoB,IAAIC,gBAAgBX,EAAErD,YAKxC,OADA8C,EAASmB,iBAAiB,gBAAiBb,GACpC,kBAAMN,EAASoB,oBAAoB,gBAAiBd,IA/BrDR,G,0CACFuB,GAAkBR,KAAKZ,EAAazC,QAAQ8D,SA+B/C,CAACtB,EAAUF,IAUd,MAAO,CAACF,EAAUE,EARK,WACrBC,GAAe,IAGK,WACpBA,GAAe,IAG6CG,IClCjDqB,EAzBE,SAACxD,GAAW,IAAD,EAC4C2B,IAD5C,mBACrBE,EADqB,KACXE,EADW,KACE0B,EADF,KACkBC,EADlB,KACiCvB,EADjC,KAU1B,OAPAhC,qBAAU,WACJgC,GACF1C,QAAQC,IAAI,mBACZM,EAAM2D,KAAKxB,IACN1C,QAAQC,IAAI,uBAClB,CAACyC,IAGF,qBAAKyB,UAAU,WAAW5C,GAAG,WAAWC,IAAKjB,EAAM6D,aAAnD,SACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,uBAAOC,IAAKnC,EAAUoC,UAAQ,IAC9B,cAACC,EAAA,EAAD,CAAQC,QAASV,EAAgBW,SAAUrC,EAA3C,mBAGA,cAACmC,EAAA,EAAD,CAAQC,QAAST,EAAeU,UAAWrC,EAA3C,wB,SCNAsC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GAEvBC,SAAU,QACVC,UAAW,OACXL,QAAQ,OACRM,UAAW,EACXC,SAAU,YAGZlB,UAAW,OAKfjF,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAmHeiG,eAnHC,SAAClF,GAAW,IAAD,EACa4B,mBAAS,KADtB,gCAEKA,oBAAS,IAFd,mBAElBuD,EAFkB,KAETC,EAFS,OAGDxD,mBAAS,IAHR,mBAGlByD,EAHkB,KAGZC,EAHY,KAKnBC,GADUrF,mBACK,CAAC,OAChBsF,EAAUC,cA6BVC,EAAW,WACfxG,EAAaqG,GAAczC,MAAK,SAACtD,GAE7B,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,EAAKoB,MACjBiF,EAAQG,KAAR,WAAiBxG,EAAKoB,WAKtBqF,EAAUvB,IA0Bd,OAxBFlE,qBAAU,WAKRjB,EAAaqG,GAAczC,MAAK,SAACtD,GAC/B,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACC,SAATA,OAIgB0G,IAAd1G,EAAKoB,OAGPd,QAAQC,IAAI,gCAAiCP,EAAKoB,MAClDd,QAAQC,IAAIP,EAAKoB,MACjBiF,EAAQG,KAAR,WAAiBxG,EAAKoB,QARxB6E,GAAW,QAab,IAGA,8BACE,cAACU,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,SACE,eAACb,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMC,WAAS,EAACgC,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAAtE,SACE,cAAClC,EAAA,EAAD,CAAOmC,MAAI,EAACC,GAAI,GAAhB,SACE,cAACC,EAAA,EAAD,CAAMC,GAAIjB,EAAV,SACE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAIC,cAAY,UAKzD,cAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACgC,UAAU,SAAStB,eAAe,WAAWuB,WAAW,SAAxE,SACE,cAAClC,EAAA,EAAD,CAAOmC,MAAI,EAACC,GAAI,GAAhB,SAEI,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,yBAON,cAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACgC,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAAtE,SACA,eAACS,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,EAAGqB,GAAI,GAAvC,UACA,cAACQ,EAAA,EAAD,CACJC,WAAS,EACTC,OAAO,QACP5F,GAAG,OACHP,MAAM,kBAEN6F,QAAQ,WACRO,MAAOxB,EACPyB,SAxEc,SAACtE,GACnB8C,EAAQ9C,EAAEuE,OAAOF,UAyET,cAAC3C,EAAA,EAAD,CAAQC,QAAU,YAjGR,SAACkB,GACnBnG,EAAaqG,GAAczC,MAAK,SAACtD,GAC3BC,QAAQC,IAAI,8BAEZ,IAAMP,EAAOK,EAASL,KACA,UAAd,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM6H,UACNtB,IAES,SAATvG,GACFL,IAAM,CACJO,OAAQ,OACRC,IAAK,4BACLH,KAAM,CAAE,KAAQkG,KACfvC,MAAK,SAACmE,GACPxH,QAAQC,IAAI,kCACZgG,UAkFuBwB,CAAY7B,IAArC,mCCtIG8B,EARA,SAACnH,GACZ,OACI,qBAAK4D,UAAU,SAAf,SACI,uBAAOK,UAAQ,EAACD,IAAKhE,EAAMV,S,8ECSjC8H,EAAOC,YAAOvB,IAAPuB,EAAc,gBAAG9C,EAAH,EAAGA,MAAH,mBAAC,eACrBA,EAAM+C,WAAWC,OADG,IAEvB3C,QAASL,EAAMM,QAAQ,GACvB2C,UAAW,SACXC,MAAOlD,EAAMmD,QAAQC,KAAKC,eAyDfC,EArDS,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MAAW,EAE9DvG,mBAAS,IAFqD,mBAE/EwG,EAF+E,KAEzEC,EAFyE,KAsBtF,OACI,eAAC5B,EAAA,EAAD,CAAOV,UAAU,SAASlB,QAAS,EAAnC,UAEI,eAAC4B,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,EAAGqB,GAAI,GAAvC,UACI,cAACQ,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACP5F,GAAG,OACHP,MAAM,aACN6F,QAAQ,WACRO,MAAOuB,EACPtB,SA7BI,SAACtE,GACjB6F,EAAQ7F,EAAEuE,OAAOF,UA8BT,cAAC3C,EAAA,EAAD,CAAQC,QA3BpB,WACI,IAAMmE,EAAUP,EAASQ,OAAO,CAAE1B,MAAOuB,EAAKI,cAAexH,GAAIyH,iBACjET,EAAYM,GACZD,EAAQ,KAwB8BxB,MAAOuB,EAAMhE,SAAU6D,GAAWC,GAAaC,EAA7E,mBACA,cAACjE,EAAA,EAAD,CAAQC,QAAU,WAAQ2D,EAASC,IAAc3D,SAAU6D,GAAWC,GAAaC,EAAnF,wBAEJ,cAAC1B,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,EAAhC,SACUkD,EAASW,KAAI,SAACzC,GAAW,OACvB,eAACmB,EAAD,WACCnB,EAAKY,MACN,cAAC8B,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,OAAOoB,KAAK,QAAQ1E,QAAS,kBA5BtF,SAAsBnD,GAClB,IAAMsH,EAAUP,EAASe,QAAO,SAAC7C,GAAD,OAAUA,EAAKjF,KAAOA,KACtDgH,EAAYM,GA0B4ES,CAAa9C,EAAKjF,KAA1F,SACI,cAACgI,EAAA,EAAD,wBAHO/C,EAAKjF,a,2BC1ClCqD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACnCI,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBJ,eAAgB,SAChBK,SAAU,QACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,gBAMlBnG,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAGzB,IAgCQiK,EAhCa,SAAClJ,GACzB,IAAM4F,EAAUvB,IADmB,EAGXzC,oBAAS,GAHE,mBAG5BuH,EAH4B,KAGtBC,EAHsB,KAanC,OACI,gCACI,cAACT,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,OAAOoB,KAAK,QAAQ1E,QAAS,WALxEiF,GAASD,IAKH,SACgB,cAACH,EAAA,EAAD,qBAEhB,cAACK,EAAA,EAAD,CACJC,GAAI,CAAE7B,MAAO,OAAQ8B,OAAQ,SAAChF,GAAD,OAAWA,EAAMgF,OAAOC,OAAS,IAC9DL,KAAMA,EACNhF,QAhBgB,WAClBiF,GAAQ,IAYF,SAKJ,cAACtD,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,SACI,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAACvF,IAAKjB,EAAMyJ,mBCpD7DC,EARW,SAACC,GACvB,IAEQ5I,EADR,OAAU,KADNA,EAAI4I,EAAM,GAEN5I,GAAQ,EAEPA,GCgBPsD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GAEvBC,SAAU,QACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,WACVR,eAAgB,cAUxB3F,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IA+MeiG,eA/M0B,WAAO,IAAD,EACZtD,oBAAS,GADG,mBACpCqG,EADoC,KAC3B2B,EAD2B,OAERhI,oBAAS,GAFD,mBAEpCsG,EAFoC,KAEzB2B,EAFyB,OAGjBjI,mBAAS,MAHQ,mBAGpCkI,EAHoC,KAG7BC,EAH6B,OAIfnI,mBAAS,MAJM,mBAIpCoI,EAJoC,KAI5BC,EAJ4B,OAKTrI,mBAAS,MALA,mBAKpCsI,EALoC,KAKzBC,EALyB,OAMjBvI,mBAAS,MANQ,mBAMpCwI,EANoC,KAMzBC,EANyB,OAOjBzI,mBAAS,MAPQ,mBAOpC0I,EAPoC,KAOzBC,EAPyB,KAQrCC,EAAiBtK,mBAEjBqF,EAAe,CAAC,KAAK,YACrBC,EAAUC,cAKVG,EAAUvB,IAEVoG,EAAc,WAChBb,GAAY,GACZC,GAAc,GACd3K,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTkL,EAAKlL,EAAKuL,SAAS,IACnBH,EAAKpL,EAAKuL,SAAS,QA6E3B,OAhBAvK,qBAAW,WAEPjB,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTqL,EAAenK,QAAQsK,YAAcxL,EAAKwI,KAAKiD,aAE/CnL,QAAQC,IAAIP,EAAKuL,SAAS,IAC1BL,EAAKlL,EAAKuL,SAAS,IACnBH,EAAKpL,EAAKuL,SAAS,SAKzB,IAGE,gCACI,cAAC,EAAD,IACJ,eAAC5E,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,UACA,cAAC8B,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,EAApF,SACQ,cAACwB,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3D,SACIsD,EAAQ,SAAWA,EAAMe,SAAW,MAAQf,EAAMgB,YAAc,cAGxE,eAACrE,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3D,SACOsD,EAAQA,EAAMnC,KAAKoD,mBAAqB,eAE3C,eAACtE,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASgF,aAAa,SAASnG,QAAS,EAArG,UAEI,eAAC4B,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA5E,UACA,eAAC4B,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACA,cAACwB,EAAA,EAAD,CAAY4E,MAAO,CAACC,YAAY,OAAQC,WAAW,QAAS7E,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3G,eAGI,cAAC,EAAD,CAAQlH,IAAK8K,EAAYA,EAAUgB,SAAW,UAElD,eAAC3E,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACA,cAACwB,EAAA,EAAD,CAAY4E,MAAO,CAACC,YAAY,OAAQC,WAAW,QAAS7E,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3G,eAGI,cAAC,EAAD,CAAQlH,IAAKgL,EAAYA,EAAUc,SAAW,aAGlD,eAAC3E,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACA,cAACwB,EAAA,EAAD,CAAY4E,MAAO,CAACC,YAAY,OAAQC,WAAW,QAAS7E,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3G,0BAGJ,eAAC6E,EAAA,EAAD,CACQC,YAAY,aACZzE,MAAOmD,EACPuB,WAAS,EACTzE,SA7GG,SAAC0E,EAAOC,GAC/BhM,QAAQC,IAAI+L,GACZxB,EAAUwB,IAuGE,UAMQ,cAACC,EAAA,EAAD,CAAetH,SAAU6D,GAAWC,EAAWrB,MAAOiD,EAAQA,EAAMY,SAAS,IAAM,EAAG9B,aAAW,IAAI+C,WAAW,EAAhH,yBAGA,cAACD,EAAA,EAAD,CAAetH,SAAU6D,GAAWC,EAAWrB,MAAOiD,EAAQA,EAAMY,SAAS,IAAM,EAAG9B,aAAW,IAAI+C,WAAW,EAAhH,8BAKR,eAAClF,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAY4E,MAAO,CAACC,YAAY,OAAQC,WAAW,QAAS7E,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3G,0CAGJ,eAAC6E,EAAA,EAAD,CACQC,YAAY,aACZzE,MAAOqD,EACPqB,WAAS,EACTzE,SA1HM,SAAC0E,EAAOC,GAClChM,QAAQC,IAAI+L,GACZtB,EAAasB,IAoHD,UAMQ,cAACC,EAAA,EAAD,CAAc7E,MAAOiD,EAAQA,EAAMY,SAAS,IAAM,EAAG9B,aAAW,OAAQxE,SAAU6D,GAAWC,EAA7F,wBAGA,cAACwD,EAAA,EAAD,CAAc7E,MAAOiD,EAAQA,EAAMY,SAAS,IAAM,EAAG9B,aAAW,QAAQxE,SAAU6D,GAAWC,EAA7F,iCAQZ,eAAC0D,EAAA,EAAD,CAAKX,MAAO,CAACY,MAAO,QAApB,UACI,cAACC,EAAA,EAAD,CAAU1F,GAAI6B,EAAd,SACI,cAAC8D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CACAC,aAAW,QACXnB,MAAM,UACNoB,KAAK,UAITS,GAAI,CAAE2C,GAAI,GATV,kDAcJ,cAACH,EAAA,EAAD,CAAU1F,GAAI8B,EAAd,SACI,eAAC6D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,QAAQoB,KAAK,QAAQ1E,QAAS,WAAQsG,KAA3E,SACI,cAACzB,EAAA,EAAD,sBAGRkD,SAAS,QACT5C,GAAI,CAAE2C,GAAI,GAPV,qEASwD,oCATxD,wBAaR,cAAC/H,EAAA,EAAD,CAAQ2E,KAAK,SAAQvC,QAAQ,YAAYnC,QAAS,YAhK7C,WACb,IAAM4C,EAAS+C,EAAM/C,OACfoF,EAAejC,EAIrB,GAHAzK,QAAQC,IAAIyM,GACZ1M,QAAQC,IAAIqH,GAERoF,EAAanL,KAAO+F,EAAxB,CAUA8C,GAAc,GACd,IAAIuC,EAAU,CAAEC,KAAM,EAAG7M,SAAU2M,EAAanL,GAAI8J,YAAahB,EAAMgB,aACvEnL,EAAeyM,OAZf,CACIxC,GAAY,GACZnK,QAAQC,IAAIqH,GACZ,IAAIqF,EAAU,CAAEC,KAAM,EAAG7M,SAAU2M,EAAanL,GAAI8J,YAAahB,EAAMgB,aACvEnL,EAAeyM,IAsJ6CE,IAAclI,UAAY4F,IAAWE,GAAejC,GAAWC,EAAvH,uBAEJ,cAAChE,EAAA,EAAD,CAAQ2E,KAAK,QAAOvC,QAAQ,YAAY2E,MAAO,CAACsB,UAAU,YAAapI,QAAS,WA1IpFyF,GAAY,GACZ1K,EAFc,CAAC,OAEO4D,MAAK,SAACtD,GAChB,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACRA,EAAKqN,SAAW1C,EAAM0C,UACtB/M,QAAQC,IAAI,uCACZ8F,EAAQG,KAAR,WAAiBxG,EAAKoB,QAEtBpB,EAAK0L,UAAYf,EAAMe,UACvBpL,QAAQC,IAAI,yCACZ+K,MAIAV,EAAS5K,GACTkL,EAAKlL,EAAKuL,SAAS,IACnBH,EAAKpL,EAAKuL,SAAS,SA0HsEtG,UAAW6D,EAAhH,2B,SCxPZnJ,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEzB,IAAMwN,GAAgB,uCAAG,WAAOtN,GAAP,eAAAC,EAAA,sEACLN,IAAM,CACzBO,OAAQ,OACRC,IAAK,gBACLH,KAAMA,EACNuN,QAAS,CAAC,eAAgB,4BAC1BC,iBAAkB,CAAC,SAACxN,GAChB,OAAOyN,KAAKC,UAAU1N,KAE1B2N,kBAAmB,CAAC,SAAC3N,GACjB,OAAOyN,KAAKG,MAAM5N,OAVE,cACtBK,EADsB,yBAarBA,GAbqB,2CAAH,sDAgBhBwN,GAAsB,SAACC,GAChCxN,QAAQC,IAAIuN,GAEZ,IADA,IAAI9N,EAAO8N,EAAa,KAAW,GAC1BC,EAAI,EAAGA,EAAI/N,EAAKgO,OAAQD,IACR,IAAjB/N,EAAK+N,GAAL,IACA/N,EAAK+N,GAAL,EAAeE,KAEE,IAAjBjO,EAAK+N,GAAL,IACA/N,EAAK+N,GAAL,EAAeE,KAIvB,OAAOjO,GCTLkF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCI,MAAO,CACHC,QAASL,EAAMM,QAAQ,GACvBJ,eAAgB,SAChBK,SAAU,OACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,YAGdlB,UAAW,CACPkB,SAAU,WACVgE,OAAQ,OACRxE,eAAgB,UAEpB4I,KAAM,CACFpE,OAAQ,MACRxE,eAAe,eACfI,QAAQ,IACRmB,WAAW,SACXD,UAAU,SACVhB,UAAU,QAEduI,OAAQ,CACJrI,SAAU,WACVsI,OAAO,OACPC,MAAO,QAEXC,MAAO,CACHhJ,eAAe,SACfuB,WAAW,SACXD,UAAU,SACVhB,UAAU,OACV2I,aAAc,MACd5I,SAAS,YAoIFI,gBAhIsB,SAAClF,GAClC,IAAM4F,EAAUvB,KAD4B,EAEJzC,mBAAS,MAFL,mBAEvCqL,EAFuC,KAExBU,EAFwB,OAIpB/L,mBAAS,MAJW,mBAIvCkI,EAJuC,KAIhCC,EAJgC,OAKXnI,oBAAS,GALE,mBAKvCgM,EALuC,KAK5BC,EAL4B,OAMfjM,oBAAS,GANM,mBAM9BgI,GAN8B,aAOXhI,oBAAS,GAPE,mBAO5BiI,GAP4B,WAQxCtE,EAAe,CAAC,KAAK,WAAW,SAChCiF,EAAiBtK,mBACjBsF,EAAUC,cAyBR6G,EAAW,WAEb,GAAIW,EAAe,CACfrD,GAAY,GAEZ,IAAIwC,EAAU,CAAEC,KAAM,EAAG7M,SAAU,CAACL,KAAM8N,GAAgBnC,YAAahB,EAAMgB,aAG7E,OAFAnL,EAAeyM,QACf0B,IAIJjE,GAAc,GACd,IAAIuC,EAAU,CAAEC,KAAM,EAAG7M,SAAU,GAAIsL,YAAahB,EAAMgB,aAC1DnL,EAAeyM,IAGb0B,EAAY,WAEd5O,EADcqG,GACQzC,MAAK,SAACtD,GAChB,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACRA,EAAKqN,SAAW1C,EAAM0C,UACtB/M,QAAQC,IAAI,uCACZ8F,EAAQG,KAAR,WAAiBxG,EAAKoB,QAEtBpB,EAAK0L,UAAYf,EAAMe,UACvBpL,QAAQC,IAAI,yCAhD5BkK,GAAY,GACZC,GAAc,GACd3K,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,OAgDG4K,EAAS5K,OAY7B,OAPAgB,qBAAW,WACPjB,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTqL,EAAenK,QAAQsK,YAAcxL,EAAKwI,KAAKiD,kBACrD,IAGM,gCACI,eAACnE,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,EAApF,UACI,cAAC,EAAD,CAAc4E,SAAUe,IACxB,cAACnE,EAAA,EAAD,CAAYkG,UAAW,aAAcrB,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAACN,GAAI,EAA1G,SACC4D,EAAS,aAAeA,EAAMe,SAAW,gBAAkBnB,EAAkBI,EAAMgB,aAAe,UAGvG,eAAChF,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,UAEI,eAAC8B,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAY6E,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAA5E,SACKsD,EAAQA,EAAMnC,KAAKoD,mBAAqB,eAE7C,eAACtE,EAAA,EAAD,CAAOV,UAAU,SAAUlB,QAAS,EAApC,UACI,eAAC4B,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAAGqB,GAAI,EAAnF,UACM4D,EACF,cAAChE,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAvD,SACI,cAAC,EAAD,CAAYtO,KAAM6N,GAAoBlD,EAAMY,SAASqD,WAGzD,cAACjI,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAvD,SACI,cAACO,EAAA,EAAD,MAEHJ,EACD,cAAC9H,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAvD,SACI,cAACO,EAAA,EAAD,MAGJ,cAAClI,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAvD,SACI,cAAC,EAAD,CAAYtO,KAAM8N,SAGtB,eAACxG,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,GAAIqB,GAAI,GAAxC,UACI,cAACO,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,aAAauB,WAAW,aAAagF,aAAa,aAAYnG,QAAS,GAAIqB,GAAI,GAAxH,SACI,cAAC,EAAD,CAAQ5G,IAAMwK,EAAQA,EAAMY,SAASU,SAAW,SAEhD,cAAC3E,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,WAAWuB,WAAW,WAAWgF,aAAa,WAAUnG,QAAS,GAAIqB,GAAI,EAAlH,SACI,cAAC,EAAD,CAAUqG,UAAU,WAAW5I,KAAM,SAACxE,IA9FtD,SAACA,GACrB,IAAMqC,EAAQrC,EACR2L,EAAchB,EAAMgB,YAI1B2B,GAFoB,CAAC,MAAQjL,EAAO,YAAcsJ,IAEpBhI,MAAK,SAACtD,GAChC,IAAIyO,EAAYjB,GAAoBxN,EAASL,MAE7CwO,EAAiBM,GACjBJ,GAAc,MACdvB,IAmFgF4B,CAAkB/O,GAAO0O,GAAc,iBAK3G,cAACpH,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,EAApF,SACJ,cAACX,EAAA,EAAD,CAAQN,UAAWgC,EAAQ0H,OAAQhH,QAAQ,WAAWnC,QAAS,WAAO2J,KAAtE,6B,QChKd1G,GAAOC,YAAOvB,IAAPuB,EAAc,gBAAG9C,EAAH,EAAGA,MAAH,mBAAC,eACrBA,EAAM+C,WAAWC,OADG,IAEvB3C,QAASL,EAAMM,QAAQ,GACvB2C,UAAW,SACXC,MAAOlD,EAAMmD,QAAQC,KAAKC,eAIxBvD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCI,MAAO,CACHC,QAASL,EAAMM,QAAQ,GACvBJ,eAAgB,SAChBK,SAAU,OACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,YAGdlB,UAAW,CACPkB,SAAU,WACVgE,OAAQ,OACRxE,eAAgB,UAEpB4I,KAAM,CACFpE,OAAQ,MACRxE,eAAe,eACfI,QAAQ,IACRmB,WAAW,SACXD,UAAU,SACVhB,UAAU,QAEduI,OAAQ,CACJrI,SAAU,WACVsI,OAAO,OACPC,MAAO,QAEXC,MAAO,CACHhJ,eAAe,SACfuB,WAAW,SACXD,UAAU,SACVhB,UAAU,QACV2I,aAAc,MACd5I,SAAS,YAiOFI,gBA7NkB,SAAClF,GAAW,IAAD,EAClC4F,EAAUvB,KADwB,EAEAzC,mBAAS,MAFT,mBAEnCqL,EAFmC,KAEpBU,EAFoB,OAGhB/L,mBAAS,IAHO,mBAGnCiF,EAHmC,KAG5BsH,EAH4B,OAIVvM,mBAAS,GAJC,mBAInCwM,EAJmC,KAIzBC,EAJyB,OAKhBzM,mBAAS,MALO,mBAKnCkI,EALmC,KAK5BC,EAL4B,OAMTnI,mBAAS,MANA,mBAMnC0M,EANmC,KAMxBC,EANwB,OAQP3M,oBAAS,GARF,mBAQnCgM,EARmC,KAQxBC,EARwB,OASXjM,oBAAS,GATE,mBASnCqG,EATmC,KAS1B2B,EAT0B,OAUPhI,oBAAS,GAVF,mBAUnCsG,GAVmC,KAUxB2B,GAVwB,KAWpCW,GAAiBtK,mBAEfqF,GAAe,CAAC,KAAM,YACxBC,GAAUC,cAuHd,OAfAtF,qBAAW,WACPjB,EAAaqG,IAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTqL,GAAenK,QAAQsK,YAAcxL,EAAKwI,KAAKiD,kBACrD,IAEFzK,qBAAW,WACHoO,IAjBJ3E,GAAY,GACZC,IAAc,GACd0E,GAAY,GACZF,EAAY,GACZF,EAAS,IACTR,EAAiB,SAiBnB,CAAC7D,IAGK,gCACQ,eAACrD,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,EAApF,UACI,cAAC,EAAD,CAAc4E,SAAUe,KACxB,cAACnE,EAAA,EAAD,CAAYkG,UAAW,aAAcrB,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAACN,GAAI,EAA1G,SACC4D,EAAS,aAAeA,EAAMe,SAAW,gBAAkBnB,EAAkBI,EAAMgB,aAAe,UAGnG,cAAChF,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,SACI,eAAC8B,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAY6E,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAA5E,SACKsD,EAAQA,EAAMnC,KAAKoD,mBAAqB,eAE7C,eAACtE,EAAA,GAAD,GAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,GAA/E,yBAA0F,GAA1F,2BACQ,eAAC,GAAD,WAAOiF,EAAQA,EAAMY,SAASA,SAAW,aAAzC,OACJ,eAACjE,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAAGqB,GAAI,EAAnF,UACI,eAACO,EAAA,EAAD,CAAOV,UAAU,SAAjB,UACC6H,EACD,cAAC9H,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAOxC,MAAK,cAAGvG,QAAQ,OAAQsG,aAAc,UAAjC,eAAwD,UAA3H,SACI,cAACgD,EAAA,EAAD,CAAkB/C,MAAO,CAACvG,QAAQ,gBAGtC,cAACoB,EAAA,EAAD,CAAO9E,GAAG,0BAA0B4C,UAAWgC,EAAQ6H,MAAOxC,MAAK,cAAGvG,QAAQ,OAAQsG,aAAc,UAAjC,eAAwD,UAA3H,SACI,cAAC,EAAD,CAAY7L,KAAM8N,MAElB,cAAC,EAAD,CAAUV,UAAU,WAAW5I,KAAM,SAACxE,IApEpD,SAACA,GACvB,QAAa0G,IAAT1G,EAAJ,CAKA,IAAMqC,EAAQrC,EACR2L,EAAchB,EAAMgB,YAG1B2B,GAFoB,CAAC,MAAQjL,EAAO,YAAcsJ,IAEpBhI,MAAK,SAACtD,GAChC,IAAIyO,EAAYjB,GAAoBxN,EAASL,MAC7CwO,EAAiBM,GACjBJ,GAAc,WAXdW,MAAM,8DAkE0EN,CAAkB/O,GAAO0O,GAAc,SAE3F,eAACjC,EAAA,EAAD,CAAKW,UAAU,aACXhG,UAAU,OACV+C,GAAI,CACA,uBAAwB,CAAEmF,EAAG,EAAG5C,MAAO,SAE3C6C,YAAU,EACVC,aAAa,MANjB,UAQA,cAACjI,EAAA,EAAD,CACI1F,GAAG,4BACHP,MAAM,mCACNmO,WAAS,EACTC,QAAS,EACThI,MAAOA,EACPC,SA5FnB,SAACtE,GAClB2L,EAAS3L,EAAEsM,cAAcjI,QA4FWP,QAAQ,SACRxB,SAAS,UAET,cAACgH,EAAA,EAAD,CAAU1F,GAAI6B,EAAd,SACpB,cAAC8D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CACAC,aAAW,QACXnB,MAAM,UACNoB,KAAK,UAITS,GAAI,CAAE2C,GAAI,GATV,kDAcJ,cAACH,EAAA,EAAD,CAAU1F,GAAI8B,GAAd,SACI,eAAC6D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,QAAQoB,KAAK,QAAQ1E,QAAS,WA7GvF0F,IAAc,IA6GM,SACI,cAACb,EAAA,EAAD,sBAGRkD,SAAS,QACT5C,GAAI,CAAE2C,GAAI,GAPV,qEASwD,oCATxD,wBAagB,cAAC/H,EAAA,EAAD,CAAQ+G,MAAO,CAACsB,UAAU,YAAajG,QAAQ,WAAWnC,QAAS,WAnJtF,IAAC,IAmJqG,CAAC4K,aAAc,CAAC,KAAQ9B,EAAe,KAAQpG,GAASE,OAAQ+C,EAAM/C,QAnJ9I,EAAbA,OAzCnB,WAEX,GADAwH,GAAY,GACRtB,GAAiBpG,EAArB,CACI+C,GAAY,GAEZ,IAAIwC,EAAU,CAAE,KAAQ,EAAG,SAAY,CAAE,MAASa,EAAe,MAASpG,GAAS,YAAeiD,EAAMgB,aACxGnL,EAAeyM,GAAStJ,MAAK,YAA2D,EAAxDkM,WAAwD,EAA5CC,SAA4C,EAAlCC,YAAkC,EAArBC,sBAJvE,CASItF,IAAc,GACd,IAAIuC,EAAU,CAAEC,KAAM,EAAG7M,SAAU,GAAIsL,YAAahB,EAAMgB,aAC1DnL,EAAeyM,IA+KiLgD,IAAgDhL,UAAW0F,GAAQsE,EAAWtE,EAAMsE,SAAxP,qBACA,cAAClK,EAAA,EAAD,CAAQ+G,MAAO,CAACsB,UAAU,YAAajG,QAAQ,WAAWnC,QAAS,WA1KnGjF,EADcqG,IACQzC,MAAK,SAACtD,GAChB,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACRA,EAAKqN,SAAW1C,EAAM0C,SACtB/M,QAAQC,IAAI,uCACZ8F,GAAQG,KAAR,WAAiBxG,EAAKoB,QACbpB,EAAK0L,UAAYf,EAAMe,UAChCpL,QAAQC,IAAI,yCACZqK,EAAS5K,IACAA,EAAK0L,UAAYf,EAAMe,UAChCpL,QAAQC,IAAI,4DACZqK,EAAS5K,IAEDM,QAAQC,IAAI,yDA6J+E0E,UAAWkK,EAA9F,uBA9DR,eCtM1BjK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBJ,eAAgB,SAChBK,SAAU,QACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,gBAMlBnG,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAGzB,IAuHQiG,gBAvHsC,WAAO,IAAD,EACxBtD,oBAAS,GADe,mBAChDqG,EADgD,KACvC2B,EADuC,OAEpBhI,oBAAS,GAFW,mBAEhDsG,EAFgD,KAErC2B,EAFqC,OAG7BjI,mBAAS,MAHoB,mBAGhDkI,EAHgD,KAGzCC,EAHyC,KAIjDxE,EAAe,CAAC,KAAK,WAAW,cAChCC,EAAUC,cACV+E,EAAiBtK,mBAEjB0F,EAAUvB,KAEVoG,EAAc,WAChBb,GAAY,GACZC,GAAc,GACd3K,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,OAGXkQ,EAAe,SAAC7M,GAClB,IAAIuE,EAASvE,EAAEsM,cAAcjI,MAC7B,GAAIE,IAAW+C,EAAM/C,OAArB,CAOA8C,GAAc,GACd,IAAIuC,EAAU,CAAEC,KAAM,EAAG7M,SAAUuH,EAAQ+D,YAAahB,EAAMgB,aAC9DnL,EAAeyM,OATf,CACIxC,GAAY,GACZnK,QAAQC,IAAIqH,GACZ,IAAIqF,EAAU,CAAEC,KAAM,EAAG7M,SAAUuH,EAAQ+D,YAAahB,EAAMgB,aAC9DnL,EAAeyM,KAkCvB,OAPAjM,qBAAW,WACPjB,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTqL,EAAenK,QAAQsK,YAAcxL,EAAKwI,KAAKiD,kBACrD,IAGE,gCACI,eAACnE,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,EAApF,UACQ,cAAC,EAAD,CAAc4E,SAAUe,IACxB,cAACnE,EAAA,EAAD,CAAYkG,UAAW,aAAcrB,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAACN,GAAI,EAA1G,SACC4D,EAAS,aAAeA,EAAMe,SAAW,gBAAkBnB,EAAkBI,EAAMgB,aAAe,UAG/G,eAAChF,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,UACI,eAAC8B,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3D,SACOsD,EAAQA,EAAMnC,KAAKoD,mBAAqB,eAE/C,cAAC,EAAD,CAAQzL,IAAKwK,EAAQA,EAAMY,SAASU,SAAW,OAC/C,eAACQ,EAAA,EAAD,CAAKX,MAAO,CAACY,MAAO,QAApB,UACI,cAACC,EAAA,EAAD,CAAU1F,GAAI6B,EAAd,SACI,cAAC8D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CACAC,aAAW,QACXnB,MAAM,UACNoB,KAAK,UAITS,GAAI,CAAE2C,GAAI,GATV,kDAcJ,cAACH,EAAA,EAAD,CAAU1F,GAAI8B,EAAd,SACI,eAAC6D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,QAAQoB,KAAK,QAAQ1E,QAAS,WAAQsG,KAA3E,SACI,cAACzB,EAAA,EAAD,sBAGRkD,SAAS,QACT5C,GAAI,CAAE2C,GAAI,GAPV,qEASwD,oCATxD,wBAaR,eAACxF,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,GAAIqB,GAAI,GAAxC,UACI,cAAChC,EAAA,EAAD,CAAQoC,QAAQ,WAAWuC,KAAK,QAAQ1E,QAAS,SAAC3B,GAAD,OAAM6M,EAAa7M,IAAIqE,MAAM,SAASzC,SAAU6D,GAAWC,EAA5G,oBAGA,cAAChE,EAAA,EAAD,CAAQoC,QAAQ,WAAWuC,KAAK,QAAQ1E,QAAS,SAAC3B,GAAD,OAAM6M,EAAa7M,IAAIqE,MAAM,QAAQzC,SAAU6D,GAAWC,EAA3G,mBAGA,cAAChE,EAAA,EAAD,CAAQoC,QAAQ,WAAWuC,KAAK,QAAQ1E,QAAS,SAAC3B,GAAD,OAAM6M,EAAa7M,IAAIqE,MAAM,UAAUzC,SAAU6D,GAAWC,EAA7G,2BAKR,cAAChE,EAAA,EAAD,CAAQ2E,KAAK,QAAOvC,QAAQ,YAAY2E,MAAO,CAACsB,UAAU,YAAapI,QAAS,WAhFpFjF,EADc,CAAC,OACO4D,MAAK,SAACtD,GAChB,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACRA,EAAKqN,SAAW1C,EAAM0C,UACtB/M,QAAQC,IAAI,uCACZ8F,EAAQG,KAAR,WAAiBxG,EAAKoB,QAEtBpB,EAAK0L,UAAYf,EAAMe,UACvBpL,QAAQC,IAAI,yCACZ+K,KAEAV,EAAS5K,OAqEgFiF,UAAW6D,EAAhH,2BCtIN5D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GAEvBC,SAAU,QACVmE,OAAQ,OACRvE,QAAQ,OACRM,UAAW,EACXC,SAAU,WACVR,eAAgB,cAKxB3F,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAyMeiG,gBAzMoC,WAAO,IAAD,EACxBtD,oBAAS,GADe,mBAChDqG,EADgD,KACvC2B,EADuC,OAEpBhI,oBAAS,GAFW,mBAEhDsG,EAFgD,KAErC2B,EAFqC,OAGpBjI,oBAAS,GAHW,mBAGhDuG,EAHgD,KAGzCmH,EAHyC,OAI7B1N,mBAAS,MAJoB,mBAIhDkI,EAJgD,KAIzCC,EAJyC,OAKvBnI,mBAAS,GALc,mBAKhDwM,EALgD,KAKtCC,EALsC,OAM7BzM,mBAAS,IANoB,mBAMhD2N,EANgD,KAMzCC,EANyC,OAOtB5N,mBAAS,MAPa,mBAOrC2M,GAPqC,WASjDhJ,EAAe,CAAC,KAAK,WAAW,mBAChCC,EAAUC,cACV+E,EAAiBtK,mBAMf0F,EAAUvB,KAiCVoL,EAAW,WACbpB,EAAaD,EAAW,GAExB,IAAIrH,EAAS,IAAI2I,IAEjBH,EAAMI,SAAQ,SAACnN,GAAD,OAAOuE,EAAO6I,IAAIpN,EAAEqE,UAElC,IAAIsF,EAAe,IAAIuD,IAAK5F,EAAMY,SAASmF,gBAAgBC,MAAM,MAC7D1Q,EAAI,IAAIsQ,IAAI,YAAIvD,GAAcrD,QAAO,SAAA/H,GAAC,OAAKgG,EAAOgJ,IAAIhP,OACtDiP,EAAI,IAAIN,IAAI,YAAI3I,GAAQ+B,QAAO,SAAA/H,GAAC,OAAKoL,EAAa4D,IAAIhP,OAG1D,OADAtB,QAAQC,IAAIN,EAAEyJ,MAAQmH,EAAEnH,MACnBzJ,EAAEyJ,MAASmH,EAAEnH,MAKdgB,GAAc,IACP,IALPD,GAAY,GACZnK,QAAQC,IAAIqH,IACL,IAsBTkJ,EAAO,WAET/Q,EADcqG,GACQzC,MAAK,SAACtD,GAChB,IAAML,EAAOK,EAASL,KACtBM,QAAQC,IAAIP,GACRA,EAAKqN,SAAW1C,EAAM0C,SACtB/M,QAAQC,IAAI,uCACZ8F,EAAQG,KAAR,WAAiBxG,EAAKoB,QACbpB,EAAK0L,UAAYf,EAAMe,UAChCpL,QAAQC,IAAI,yCACZqK,EAAS5K,IACAA,EAAK2L,aAAehB,EAAMgB,aACnCrL,QAAQC,IAAI,4DACZqK,EAAS5K,IAEDM,QAAQC,IAAI,yDA8BxC,OAfAS,qBAAW,WACPjB,EAAaqG,GAAczC,MAAK,SAACtD,GAC7B,IAAML,EAAOK,EAASL,KACtB4K,EAAS5K,GACTqL,EAAenK,QAAQsK,YAAcxL,EAAKwI,KAAKiD,kBAErD,IAEFzK,qBAAW,WACHoO,IAhBJ3E,GAAY,GACZC,GAAc,GACd0E,GAAY,GACZF,EAAY,GACZmB,EAAS,OAgBX,CAAC1F,IAGC,gCAEI,eAACrD,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,WAAWgF,aAAa,SAASnG,QAAS,EAAxG,UACI,cAAC,EAAD,CAAc4E,SAAUe,IACxB,cAACnE,EAAA,EAAD,CAAYkG,UAAW,aAAcrB,YAAa,OAAQ5E,QAAQ,QAAQC,UAAU,KAAKC,cAAY,EAACN,GAAI,EAA1G,SACK4D,EAAS,aAAeA,EAAMe,SAAW,gBAAkBnB,EAAkBI,EAAMgB,aAAe,UAG3G,eAAChF,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,UACI,cAAC8B,EAAA,EAAD,CAAOV,UAAU,MAAMtB,eAAe,aAAauB,WAAW,aAAanB,QAAS,IAEpF,eAAC4B,EAAA,EAAD,CAAOV,UAAU,SAAStB,eAAe,SAASuB,WAAW,SAASnB,QAAS,EAA/E,UACI,cAACwB,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKC,cAAY,EAA3D,SACGsD,EAAQA,EAAMnC,KAAKoD,mBAAqB,eAE/C,cAAC,EAAD,CAAQzL,IAAKwK,EAAQA,EAAMY,SAASU,SAAW,OAC/C,eAACQ,EAAA,EAAD,CAAKX,MAAO,CAACY,MAAO,QAApB,UACI,cAACC,EAAA,EAAD,CAAU1F,GAAI6B,EAAd,SACI,cAAC8D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CACAC,aAAW,QACXnB,MAAM,UACNoB,KAAK,UAITS,GAAI,CAAE2C,GAAI,GATV,kDAcJ,cAACH,EAAA,EAAD,CAAU1F,GAAI8B,EAAd,SACI,eAAC6D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,QAAQoB,KAAK,QAAQ1E,QAAS,WAAQ8L,KAA3E,SACI,cAACjH,EAAA,EAAD,sBAGRkD,SAAS,QACT5C,GAAI,CAAE2C,GAAI,GAPV,qEASwD,oCATxD,qBAYJ,cAACH,EAAA,EAAD,CAAU1F,GAAI+B,EAAd,SACI,cAAC4D,EAAA,EAAD,CACAC,OACI,cAACrD,EAAA,EAAD,CAAYC,aAAW,QAAQnB,MAAM,QAAQoB,KAAK,UAItDqD,SAAS,QACT5C,GAAI,CAAE2C,GAAI,GAPV,yFAaR,cAACxF,EAAA,EAAD,CAAOV,UAAU,MAAMlB,QAAS,GAAIqB,GAAI,GAAxC,SACI,cAAC,EAAD,CAAU4B,SArKX,WAEX,GAAI2H,IAAY,CACZ,IAAIrD,EAAU,CAAE,KAAQ,EAAG,SAAY,CAAE,gBAAmBmD,GAAS,YAAezF,EAAMgB,aAE1FnL,EAAeyM,GAAStJ,MAAK,YAA2D,EAAxDkM,WAAwD,EAA5CC,SAA4C,EAAlCC,YAAkC,EAArBC,eAC/DZ,GAAY,UAEb,CACH,IAAInC,EAAU,CAAE,KAAQ,EAAG,SAAY,CAAE,gBAAmBmD,GAAS,YAAezF,EAAMgB,aAE1FnL,EAAeyM,GAAStJ,MAAK,SAAC3D,GACtBiP,IAAajP,EAAKiP,SAClBkB,GAAkB,GAElBzF,GAAc,GAElB0E,GAAY,QAoJoBxG,SAAUwH,EAAOvH,YAAawH,EAAUvH,QAASA,EAASC,UAAWA,EAAWC,MAAOA,SAG3H,cAACjE,EAAA,EAAD,CAAQ2E,KAAK,QAAOvC,QAAQ,YAAY2E,MAAO,CAACsB,UAAU,YAAapI,QAAS,WAAM8L,KAAU7L,UAAW6D,IAAYE,EAAvH,2BCtON9D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBqL,cAAe,SACfpL,SAAU,QACVC,UAAW,OACXL,QAAQ,OACRM,UAAW,EACXP,eAAe,SACfuB,WAAW,UAEbjC,UAAW,CACPkB,SAAU,WACVgE,OAAQ,OACRxE,eAAgB,UAEpB6I,OAAQ,CACJrI,SAAU,WACVsI,OAAO,IACPC,MAAO,KAEXH,KAAM,CACFpE,OAAQ,MACRxE,eAAe,SACfI,QAAQ,IACRmB,WAAW,SACXD,UAAU,SACVhB,UAAU,YA+BHG,gBA1BH,SAAClF,GAEX,IASQ4F,EAAUvB,KAEhB,OACE,qBAAKT,UAAWgC,EAAQpB,QAAxB,SACE,cAACsB,EAAA,EAAD,CAAOlC,UAAWgC,EAAQjB,MAA1B,SACI,cAACb,EAAA,EAAD,CAAMC,WAAS,EAACH,UAAWgC,EAAQyH,KAAnC,SACI,cAAChH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,iCCjDD,SAAS2J,KAEpB,OACE,qBAAKvM,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,IAAI9J,UAAW+J,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,mCAAmC9J,UAAWgK,KAChE,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,6BAA6B9J,UAAWiK,IAC1D,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,wCAAwC9J,UAAWkK,KACrE,cAAC,IAAD,CAAOJ,KAAK,yBAAyB9J,UAAWmK,KAChD,cAAC,IAAD,CAAOL,KAAK,qBAAqB9J,UAAWoK,KAC5C,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,QAAQ9J,UAAWqK,YCzBjD,IAYeC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjO,MAAK,YAAkD,IAA/CkO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAACnB,GAAD,IACFoB,SAASC,eAAe,SAM1BX,O","file":"static/js/main.13d33ec0.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const getResponses = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/get-responses/\",\n        data: { params: data }\n    });\n    console.log(data)\n    console.log(response)\n    return response\n}\n\nexport const createTrial = async (data) => {\n    const response = await axios({\n        method: \"get\",\n        url: \"/api/get-responses/\",\n        data:data\n    });\n    console.log(\"Created experiment\")\n    return response\n}\n\n\nexport const submitResponse = async (data) => {\n        const response = await axios({\n            method: \"post\",\n            url: \"/api/submit-response/\",\n            data: data\n        });\n        console.log(\"Submitted response\")\n        return response\n}\n\nexport default submitResponse","import React, { useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\n\nChart.register(...registerables);\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n      }\n    }; \n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","\nimport { useEffect } from  'react'\nimport useRecorder from \"../utils/useRecorder\";\nimport { Button, Grid } from '@material-ui/core'\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      console.log(\"Raw data ready.\")\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\n\nexport default Recorder;","import React, { useState, useEffect, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { getResponses } from '../utils/responseHelper';\nimport axios from 'axios';\nimport FormDialog from '../elements/FormDialog';\nimport Fade from '@mui/material/Fade';\nimport { PitchChart } from '../elements/AudioCharts';\nimport Recorder from '../elements/Recorder';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nconst useStyles = makeStyles((theme) => ({\n  content: { \n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      \n      minWidth: '100vw',\n      minHeight: '85vh',\n      display:\"flex\",\n      elevation: 3,\n      position: 'relative'\n      \n    },\n    container: {\n        \n    },\n}));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst Welcome = (props) => {\n  const [currentTask, setCurrentTask] = useState('/')\n  const [newUser, setNewUser] = useState(false)\n  const [code, setCode] = useState(\"\")\n  const taskRef = useRef()\n  const sentenceData = [\"id\"]\n  const history = useHistory()\n\n  const createTrial = (code) => {\n    getResponses(sentenceData).then((response) => {\n          console.log(\"Checking if user exists...\")\n\n          const data = response.data\n          if (data?.message === 'Next') { // Anon testing purposes\n              nextTask()\n          }\n          if (data === 'None') {\n            axios({\n              method: \"post\",\n              url: \"/api/create-response-set/\",\n              data: { 'code': code }\n            }).then((res) => {\n              console.log(\"Created response set for user.\")\n              nextTask()\n            })\n          }})\n        // When the user selects Enter, experiement begins. \n        // 1. Trial is created\n        // 2. Responses are intialize  \n      }\n\n  const handleInput = (e) => {\n    setCode(e.target.value)\n  }\n\n  const nextTask = () => {\n    getResponses(sentenceData).then((response) => \n      {\n        const data = response.data\n        console.log(data.type);\n        history.push(`/${data.type}`)\n      // axios.post() // get most recent task\n      });\n  }\n  // Entry point: \n  const classes = useStyles();\n\n  useEffect(() =>{\n    // const nav = taskRef.current.setAttribute('href', '/production-task')\n    // console.log(nav)\n    // setCurrentTask('/production-task/')\n    // console.log('Loaded')\n    getResponses(sentenceData).then((response) => {\n      const data = response.data\n      console.log(data)\n      if (data === 'None') {\n        setNewUser(true)\n        return\n      } else {\n        if (data.type === undefined) {\n          return\n        } else {\n          console.log(\"User exists. Redirecting to: \", data.type)\n          console.log(data.type)\n          history.push(`/${data.type}`)\n        }\n      \n      }\n    })\n    },[])\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                <Fade in={newUser}>\n                  <Typography variant=\"h1\" component=\"h\" gutterBottom>\n                  </Typography>\n                  </Fade>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                \n                  <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                      Welcome\n                  </Typography>\n                  \n              </Grid>\n            </Grid>\n            \n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n            <Stack direction=\"row\" spacing={6} xs={12}>\n            <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"code\"\n        label=\"Experiment Code\"\n        \n        variant=\"outlined\"\n        value={code}\n        onChange={handleInput}\n            />\n            <Button onClick={ () => {createTrial(code)} }> Enter</Button>\n                </Stack>\n            </Grid>\n            </Grid>\n            \n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","import React from 'react'\n\nconst Player = (props) => {\n    return (\n        <div className=\"Player\">\n            <audio controls src={props.url}/>\n        </div>\n    )\n}\n\nexport default Player\n","import React, { useState, useReducer, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport { WorkRounded } from '@material-ui/icons';\nimport { SliderTrack } from '@mui/material';\nimport Icon from '@mui/material/Icon';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@mui/material/TextField';\nimport { v4 } from 'uuid'\nimport IconButton from '@mui/material/IconButton';\n\nconst t = {list: []}\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    }));\n\n\nexport const WordList = ({callback, wordList, setWordList, correct, incorrect, force}) => {\n    \n    const [word, setWord] = useState('')\n\n    const handleInput = (e) => {\n        setWord(e.target.value)\n    }\n\n    function handleAdd() {\n        const newList = wordList.concat({ value: word.toLowerCase(), id: v4() })\n        setWordList(newList)\n        setWord('');\n    }\n\n    function handleRemove(id) {\n        const newList = wordList.filter((item) => item.id !== id)\n        setWordList(newList)\n    }\n\n\n\n\n    return (\n        <Stack direction=\"column\" spacing={1}>\n            \n            <Stack direction=\"row\" spacing={6} xs={12}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"code\"\n                    label=\"Enter Word\"\n                    variant=\"outlined\"\n                    value={word}\n                    onChange={handleInput}\n                    />\n                <Button onClick={ handleAdd } value={word} disabled={correct || incorrect || force }> Add </Button>\n                <Button onClick={ () => { callback(wordList) } } disabled={correct || incorrect || force}> Submit</Button>\n            </Stack>\n            <Stack direction=\"row\" spacing={2}>\n                    { wordList.map((item) => { return (\n                        <Item key={item.id}> \n                        {item.value}\n                        <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleRemove(item.id)}>\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Item>\n                    )})}\n                </Stack>\n        </Stack>\n       \n    );\n    }\n\nexport default WordList;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Icon from '@mui/material/Icon'\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n      paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative'\n        \n      },\n  }));\n\n  \naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nexport const Instructions = (props) => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper className={classes.paper} >\n            <Typography variant=\"h2\" component=\"h2\" gutterBottom ref={props.childRef}>\n\n            </Typography>\n        </Paper>\n      </Backdrop>\n        </div>\n    )\n}\nexport default Instructions;","\n\nconst remainingAttempts = (num) => {\n    var x = num % 4\n    if (x === 0) {\n        var x = x + 4\n        return x\n    } return x\n}\n\nexport default remainingAttempts","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport Instructions from './Instructions';\nimport remainingAttempts from '../utils/remainingAttempts';\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionDiscriminationTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const [polite, setPolite] = useState(null)\n    const [prominent, setProminent] = useState(null)\n    const [sentenceA, setA] = useState(null)\n    const [sentenceB, setB] = useState(null)\n    const instructionRef = useRef()\n\n    const sentenceData = [\"id\",\"filepath\"]\n    const history = useHistory()\n    \n\n\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n        });\n            \n    }\n\n    const handlePoliteChange = (event, nextView) => {\n        console.log(nextView)\n        setPolite(nextView);\n      };\n\n    const handleProminentChange = (event, nextView) => {\n        console.log(nextView)\n        setProminent(nextView);\n    };\n\n    const evaluate = () => {\n        const target = trial.target\n        const trial_target = prominent\n        console.log(trial_target)\n        console.log(target)\n\n        if (trial_target.id === target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: trial_target.id, response_id: trial.response_id }\n            submitResponse(request)\n            return\n            \n            \n        } else {\n\n        showIncorrect(true)\n        let request = { eval: 0, response: trial_target.id, response_id: trial.response_id }\n        submitResponse(request)\n        }\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        showCorrect(false)\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n\n                    else {\n                        setTrial(data)\n                        setA(data.sentence[0])\n                        setB(data.sentence[1])\n\n                    }\n              })\n            }\n    \n    useEffect( () => {\n      \n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions\n\n            console.log(data.sentence[0])\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n\n           \n        });\n\n    },[]);\n///Change\n    return (\n        <div>\n            <Instructions />\n        <Paper className={classes.paper}>\n        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                   {trial ? \"TRIAL \" + trial.trial_id + \" : \" + trial.response_id : \"Loading\" }\n                </Typography> \n            </Stack>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                </Typography>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" alignContent=\"center\" spacing={6}>\n                                      \n                        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        A\n                        </Typography> \n                            <Player url={sentenceA ? sentenceA.filepath : null}/>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        B\n                        </Typography> \n                            <Player url={sentenceB ? sentenceB.filepath : null}/>\n                        </Stack>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                                            More Polite?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={polite}\n                            exclusive\n                            onChange={handlePoliteChange}\n                            >\n                            <ToggleButton  disabled={correct || incorrect} value={trial ? trial.sentence[0] : -1} aria-label=\"A\" fullWidth={true}>\n                            Sentence A`\n                            </ToggleButton>\n                            <ToggleButton  disabled={correct || incorrect} value={trial ? trial.sentence[1] : -1} aria-label=\"B\" fullWidth={true}>\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                        </Stack>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        More Appropriate Prominence?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={prominent}\n                            exclusive\n                            onChange={handleProminentChange}\n                            >\n                            <ToggleButton value={trial ? trial.sentence[0] : -1} aria-label=\"list\"  disabled={correct || incorrect}>\n                            Sentence A\n                            </ToggleButton>\n                            <ToggleButton value={trial ? trial.sentence[1] : -1} aria-label=\"quilt\" disabled={correct || incorrect}>\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                    </Stack>\n                            \n                 \n                </Stack>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Not Quite! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Button size=\"medium\"variant=\"contained\" onClick={() =>{evaluate()}}  disabled={(!polite || !prominent) || (correct || incorrect)} >Submit</Button>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionDiscriminationTemplate);","import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const getPitchScatterData = (processedData) => {\n    console.log(processedData)\n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport default processAudioData","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Icon from '@mui/material/Icon'\nimport remainingAttempts from '../utils/remainingAttempts';\nimport Instructions from './Instructions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '95vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        \n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'50px',\n        right: '50px'\n    },\n    chart: {\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\",\n        marginBottom: \"1vh\",\n        minWidth:\"30vw\",\n    }\n}));\n\nconst ProductionControlledTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n\n    let [trial, setTrial] = useState(null)\n    let [isLoading, toggleLoading] = useState(false)\n    let [correct, showCorrect] = useState(false)\n    let [incorrect, showIncorrect] = useState(false)\n    let sentenceData = [\"id\",\"filepath\",\"pitch\"]\n    let instructionRef = useRef()\n    let history = useHistory()\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    \n    let handleAudioChange = (data) => {\n        const audio = data\n        const response_id = trial.response_id\n\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)});\n            evaluate()\n        }\n\n    const evaluate = () => {\n        \n        if (processedData) {\n            showCorrect(true)\n            \n            let request = { eval: 1, response: {data: processedData}, response_id: trial.response_id }\n            submitResponse(request)\n            nextTrial()\n            return\n        } else {\n\n        showIncorrect(true)\n        let request = { eval: 0, response: \"\", response_id: trial.response_id }\n        submitResponse(request)\n        }\n    }\n    const nextTrial = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n                    else {\n                        setTrial(data)\n                    }\n                })\n            }\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions});\n    },[]);\n\n    return (\n            <div>\n                <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                    <Instructions childRef={instructionRef}/>\n                    <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                    </Typography> \n                </Stack>\n                <Paper className={classes.paper}>\n                    \n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                        <Typography marginRight={'50px'} variant=\"body1\" component=\"h1\" gutterBottom>\n                            {trial ? trial.text.instructions_short : \"Loading...\"} \n                        </Typography>\n                        <Stack direction=\"column\"  spacing={5}>\n                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={5} xs={6}>\n                                { trial ? \n                                <Paper id=\"question-data-container\" className={classes.chart}>  \n                                    <PitchChart data={getPitchScatterData(trial.sentence.pitch)}/> \n                                </Paper>\n                                :\n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <CircularProgress/> \n                                </Paper>}\n                                {isLoading ? \n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <CircularProgress/> \n                                </Paper>\n                                :   \n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <PitchChart data={processedData}/>\n                                </Paper>}\n                                </Stack>\n                                <Stack direction=\"row\" spacing={22} xs={12}>\n                                    <Stack direction=\"column\" justifyContent=\"flex-start\" alignItems=\"flex-start\" alignContent=\"flex-start\"spacing={15} xs={12}> \n                                        <Player url={ trial ? trial.sentence.filepath : null}></Player>\n                                    </Stack>\n                                        <Stack direction=\"column\" justifyContent=\"flex-end\" alignItems=\"flex-end\" alignContent=\"flex-end\"spacing={12} xs={6}> \n                                            <Recorder alignSelf=\"flex-end\" sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                                        </Stack>\n                                    </Stack>\n                                </Stack>\n                            </Stack>\n                        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>    \n                    <Button className={classes.button} variant=\"outlined\" onClick={() => {nextTrial()}}>Next</Button>\n                </Stack>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProductionControlledTemplate)\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@mui/material/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Icon from '@mui/material/Icon'\nimport Instructions from \"./Instructions\"\nimport remainingAttempts from '../utils/remainingAttempts';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n  \n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '95vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        \n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'50px',\n        right: '50px'\n    },\n    chart: {\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"275px\",\n        marginBottom: \"1vh\",\n        minWidth:\"30vw\",\n    }\n}));\n\nconst ProductionGuidedTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [value, setValue] = useState(\"\")\n    let [attempts, setAttempts] = useState(0)\n    let [trial, setTrial] = useState(null)\n    let [submitted, isSubmitted] = useState(null)\n\n    let [isLoading, toggleLoading] = useState(false)\n    let [correct, showCorrect] = useState(false)\n    let [incorrect, showIncorrect] = useState(false)\n    let instructionRef = useRef()\n\n    const sentenceData = [\"id\", \"sentence\"]\n    let history = useHistory()\n\n\n    // Essential functionality\n    \n    const Submit = () => {\n        isSubmitted(true)\n        if (processedData && value) {\n            showCorrect(true)\n            \n            let request = { \"eval\": 1, \"response\": { \"pitch\": processedData, \"input\": value }, \"response_id\": trial.response_id }\n            submitResponse(request).then(({ nextTaskId, nextType, nextTrialId, nextResponseId }) => {\n\n            })\n            return \n        } else {\n            showIncorrect(true)\n            let request = { eval: 0, response: \"\", response_id: trial.response_id }\n            submitResponse(request)\n        }\n    }\n\n    const Next = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        setTrial(data)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Response submitted. Moving to next attempt in trial set.\")\n                        setTrial(data)\n                            } else {\n                                console.log(\"Something went wrong, and task was not refreshed.\")\n                            }\n                        }\n                    }\n                })\n            }\n    \n\n    \n    const Evaluate = ({ userResponse, target }) => {\n        // Do something, return true or false. There is no target here. \n        if ( target === undefined ) { // Undefined target means no target set\n            return true\n            } return true \n        }\n\n    // const submitResponse = () => {\n    //     if (processedData && value) {\n    //         showCorrect(true)\n            \n    //         let request = { eval: 1, response: {data: processedData}, response_id: trial.response_id }\n    //         submitResponse(request)\n    //         Next()\n    //         return \n    //     } else {\n    //         showIncorrect(true)\n    //         let request = { eval: 0, response: \"\", response_id: trial.response_id }\n    //         submitResponse(request)\n    //     }\n    // }\n    // Tool setting and binding\n    const handleChange = (e) => {\n        setValue(e.currentTarget.value)\n    }\n\n    const handleClose = () => {\n        showIncorrect(false)\n    }\n\n    const handleAudioChange = (data) => {\n        if (data === undefined) {\n            alert(\"Something went wrong with the recording. Please try again!\")\n            return\n        }\n        // Whenever a participant makes a recording.\n        const audio = data\n        const response_id = trial.response_id\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            setProcessedData(pitchData) // Stages data for submission.\n            toggleLoading(false)});\n        }\n\n    // Essential functionality\n\n    const Clean = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        isSubmitted(false)\n        setAttempts(0)\n        setValue('')\n        setProcessedData(null)\n    }\n\n    \n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions});\n    },[]);\n\n    useEffect( () => {\n        if (isSubmitted) {\n            Clean()\n        }\n\n        return \n    },[trial]);\n\n    return (\n            <div>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                        <Instructions childRef={instructionRef}/>\n                        <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                        {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                        </Typography> \n                    </Stack>\n                        <Paper className={classes.paper}>\n                            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                                <Typography marginRight={'50px'} variant=\"body1\" component=\"h1\" gutterBottom>\n                                    {trial ? trial.text.instructions_short : \"Loading...\"} \n                                </Typography>\n                                <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}spacing={5}>\n                                        <Item>{trial ? trial.sentence.sentence : \"Loading...\"} </Item>      \n                                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={5} xs={6}>\n                                        <Stack direction=\"column\">\n                                        {isLoading ? \n                                        <Paper id=\"response-data-container\" className={classes.chart} style={{display:\"flex\", alignContent: \"center\", alignContent:\"center\"}}>\n                                            <CircularProgress style={{display:\"relative\"}}/> \n                                        </Paper>\n                                        :\n                                        <Paper id=\"response-data-container\" className={classes.chart} style={{display:\"flex\", alignContent: \"center\", alignContent:\"center\"}}>\n                                            <PitchChart data={processedData}/>\n                                        </Paper>}\n                                            <Recorder alignSelf=\"flex-end\" sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                                        </Stack>\n                                        <Box alignSelf=\"flex-start\"\n                                            component=\"form\"\n                                            sx={{\n                                                '& .MuiTextField-root': { m: 1, width: '25ch' },\n                                            }}\n                                            noValidate\n                                            autoComplete=\"off\"\n                                            >\n                                        <TextField\n                                            id=\"filled-multiline-flexible\"\n                                            label=\"What did you do to sound polite?\"\n                                            multiline\n                                            maxRows={4}\n                                            value={value}\n                                            onChange={handleChange}\n                                            variant=\"filled\"\n                                            minWidth=\"300px\"\n                                            />\n                                            <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => {handleClose() }}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                                    </Box>\n                                        <Button style={{alignSelf:\"flex-end\"}} variant=\"outlined\" onClick={() => {Evaluate({userResponse: {\"data\": processedData, \"text\": value }, target: trial.target}) ? Submit() : console.log(\"Failed evaluation. \")}} disabled={ trial ? attempts > trial.attempts : true }> Submit</Button> \n                                        <Button style={{alignSelf:\"flex-end\"}} variant=\"outlined\" onClick={() => {Next()}} disabled={!submitted}>Next</Button>\n                                    </Stack>\n                                    \n                                </Stack>\n                                \n                               \n                            </Stack>\n                            \n                    </Paper>\n                </div>\n        );\n    }\n\nexport default withRouter(ProductionGuidedTemplate)\n\n","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Icon from '@mui/material/Icon'\nimport remainingAttempts from '../utils/remainingAttempts'\nimport Instructions from './Instructions'\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative'\n        \n      },\n  }));\n\n  \naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \n\nexport const PerceptionIdentificationTonesTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const sentenceData = [\"id\",\"filepath\",\"intonation\"]\n    const history = useHistory()\n    const instructionRef = useRef()\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const evaluateTone = (e) => {\n        let target = e.currentTarget.value\n        if (target === trial.target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: target, response_id: trial.response_id }\n            submitResponse(request)\n            return\n        }\n        showIncorrect(true)\n        let request = { eval: 0, response: target, response_id: trial.response_id }\n        submitResponse(request)\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse();\n                    } else {\n                        setTrial(data)\n                    };\n                });\n            };\n\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions})\n    },[]);\n\n    return (\n        <div>\n            <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                    <Instructions childRef={instructionRef}/>\n                    <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                    </Typography> \n                </Stack>\n        <Paper className={classes.paper}>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                  </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"rising\" disabled={correct || incorrect}>\n                        Rising\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"level\" disabled={correct || incorrect}>\n                        Level\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"falling\" disabled={correct || incorrect}>\n                        Falling\n                    </Button>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionIdentificationTonesTemplate);","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\nimport Instructions from './Instructions';\nimport remainingAttempts from '../utils/remainingAttempts';\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionIdentificationProminenceTemplate = () => {\n    let [correct, showCorrect] = useState(false);\n    let [incorrect, showIncorrect] = useState(false);\n    let [force, showForcedForward] = useState(false)\n    let [trial, setTrial] = useState(null);\n    let [attempts, setAttempts] = useState(0)\n    let [words, setWords] = useState([])\n    let [submitted, isSubmitted] = useState(null)\n\n    let sentenceData = [\"id\",\"filepath\",\"prominent_words\"]\n    let history = useHistory()\n    let instructionRef = useRef()\n    \n\n    \n    \n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        showForcedForward(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const Submit = () => {\n        \n        if (Evaluate()) {\n            let request = { \"eval\": 1, \"response\": { \"prominent_words\": words }, \"response_id\": trial.response_id }\n            \n            submitResponse(request).then(({ nextTaskId, nextType, nextTrialId, nextResponseId }) => {\n                isSubmitted(true)\n            })\n        } else {\n            let request = { \"eval\": 0, \"response\": { \"prominent_words\": words }, \"response_id\": trial.response_id }\n            \n            submitResponse(request).then((data) => {\n                if (attempts === data.attempts) {\n                    showForcedForward(true)\n                } else {\n                    showIncorrect(true)\n                }\n                isSubmitted(true)\n            })\n        }\n    }\n\n    const Evaluate = () => {\n        setAttempts( attempts + 1 )\n\n        let target = new Set\n\n        words.forEach((e) => target.add(e.value))\n\n        let trial_target = new Set (trial.sentence.prominent_words.split(',')) \n        let a = new Set([...trial_target].filter(x => !target.has(x)));\n        let b = new Set([...target].filter(x => !trial_target.has(x)));\n\n        console.log(a.size && b.size)\n        if (!a.size && !b.size) {\n            showCorrect(true)\n            console.log(target)\n            return true;\n        } else {\n            showIncorrect(true)\n            return false;\n            }\n        };\n\n\n        \n    //     let request = { eval: 0, response: target, response_id: trial.response_id }\n    //     submitResponse(request).then((response)=> {\n    //         setAttempts( attempts + 1 )\n    //         const data = response.data;\n    //         if (attempts === data.attempts) {\n    //             showForcedForward(true)\n    //         } else {\n    //             showIncorrect(true)\n    //         }\n\n    //     })\n    // }\n\n    const Next = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        setTrial(data)\n                    } else { if (data.response_id != trial.response_id) {\n                        console.log(\"Response submitted. Moving to next attempt in trial set.\")\n                        setTrial(data)\n                            } else {\n                                console.log(\"Something went wrong, and task was not refreshed.\")\n                            }\n                        }\n                    }\n                })\n            }\n\n    const Clean = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        isSubmitted(false)\n        setAttempts(0)\n        setWords([])\n    }\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions\n        });\n    },[]);\n\n    useEffect( () => {\n        if (isSubmitted) {\n            Clean()\n        }\n        return \n    },[trial]);\n///Change\n    return (\n        <div>\n            \n            <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <Instructions childRef={instructionRef}/>\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography> \n            </Stack>\n            <Paper className={classes.paper}>\n                <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                </Stack>\n                <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                    <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                    </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { Next()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={force}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\">\n                                \n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        You've reached the maximum number of attempts. Click next to continue!\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <WordList callback={Submit} wordList={words} setWordList={setWords} correct={correct} incorrect={incorrect} force={force}/>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{Next()}}  disabled={!correct && !force}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionIdentificationProminenceTemplate);\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\n\nconst End = (props) => {\n\n  const CreateTrial = (props) => {\n\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialized\n    \n  }\n  \n  // Entry point: \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Thank You!\n                </Typography>\n            </Grid>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(End);\n\n","import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport PerceptionTaskTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport ProductionControlledTemplate from './components/pages/ProductionControlledTemplate'\nimport ProductionReadingTaskTemplate from './components/pages/ProductionGuidedTemplate'\nimport PerceptionDiscriminationTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport PerceptionIdentificationTonesTemplate from './components/pages/PerceptionIdentificationTonesTemplate'\nimport PerceptionIdentificationProminenceTemplate from './components/pages/PerceptionIdentificationProminenceTemplate'\nimport End from './components/pages/End'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\nimport ProductionGuidedTemplate from './components/pages/ProductionGuidedTemplate'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/perception-identification-tones\" component={PerceptionIdentificationTonesTemplate} />\n            <Route exact path=\"/perception-discrimination\" component={PerceptionDiscriminationTemplate} />\n            <Route exact path=\"/perception-identification-prominence\" component={PerceptionIdentificationProminenceTemplate} />\n            <Route path=\"/production-controlled\" component={ProductionControlledTemplate} />\n            <Route path=\"/production-guided\" component={ProductionGuidedTemplate} />\n            <Route exact path=\"/done\" component={End} />\n          </Switch>\n        </MemoryRouter>\n      </div>\n    );\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}