{"version":3,"sources":["components/utils/responseHelper.js","components/elements/FormDialog.js","components/pages/Welcome.js","components/utils/useRecorder.js","components/elements/Recorder.js","components/elements/Player.js","components/utils/processAudio.js","components/elements/AudioCharts.js","components/pages/PerceptionTask.js","components/pages/ProductionTask.js","components/pages/End.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","getResponses","data","a","method","url","response","console","log","submitResponse","FormDialog","props","React","open","setOpen","code","setCode","handleClose","e","onSubmit","Button","variant","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","id","label","fullWidth","value","onChange","target","DialogActions","useStyles","makeStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","button","bottom","right","grid","direction","withRouter","useState","newUser","setNewUser","history","useRef","useHistory","nextTask","then","type","push","taskData","classes","useEffect","get","className","Paper","Grid","item","Fade","in","Typography","component","gutterBottom","Container","res","options","audioBitsPerSecond","AudioContext","FileReader","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","rawData","setRawData","start","stop","handleData","ctx","reader","readAsArrayBuffer","onloadend","decodeAudioData","result","decodedData","view","getChannelData","URL","createObjectURL","addEventListener","removeEventListener","requestRecorder","error","Recorder","startRecording","stopRecording","sets","ref","forwardedRef","src","controls","disabled","Player","processAudioData","headers","transformRequest","JSON","stringify","transformResponse","parse","getPitchScatterData","processedData","i","length","NaN","Chart","register","registerables","PitchChart","chartRef","current","getContext","datasets","borderWidth","backgroundColor","scales","y","x","chart","marginBottom","setProcessedData","isLoading","toggleLoading","CircularProgress","pitchData","handleAudioChange","currentTask","setTask","files","filepath","response_id","to","style","textDecoration","App","exact","path","Welcome","ProductionTaskTemplate","PerceptionTaskTemplate","End","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0QAEAA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEzB,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDN,IAAM,CACzBO,OAAQ,MACRC,IAAK,wBAHe,cAClBC,EADkB,OAKxBC,QAAQC,IAAIF,GALY,kBAMjBA,GANiB,2CAAH,sDAoBZG,EAAc,uCAAG,WAAOP,GAAP,eAAAC,EAAA,sEACCN,IAAM,CACzBO,OAAQ,OACRC,IAAK,wBACLH,KAAKA,IAJa,cAChBI,EADgB,OAMtBC,QAAQC,IAAI,sBANU,kBAOfF,GAPe,2CAAH,sD,sEChBZ,SAASI,EAAWC,GAAQ,IAAD,EAChBC,YAAe,GADC,mBACjCC,EADiC,KAC3BC,EAD2B,OAEhBF,WAAe,IAFC,mBAEjCG,EAFiC,KAE3BC,EAF2B,KAQlCC,EAAc,SAACC,GACnBJ,GAAQ,GACRH,EAAMQ,SAASJ,IAOjB,OACE,gCACE,cAACK,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAfP,WACtBR,GAAQ,IAcN,mBAGA,eAACS,EAAA,EAAD,CAAQV,KAAMA,EAAMW,QAASP,EAA7B,UACE,cAACQ,EAAA,EAAD,wBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8EAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPC,GAAG,OACHC,MAAM,OACNC,WAAS,EACTZ,QAAQ,WACRa,MAAOnB,EACPoB,SAvBU,SAACjB,GACnBF,EAAQE,EAAEkB,OAAOF,aAyBb,eAACG,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,CAAQE,QAASL,EAAjB,oBACA,cAACG,EAAA,EAAD,CAAQE,QAASL,EAAjB,6B,aCrCJqB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBC,cAAe,SACfC,SAAU,QACVC,UAAW,OACXN,QAAQ,OACRO,UAAW,EACXR,eAAe,SACfS,WAAW,UAEbC,UAAW,CACPC,SAAU,WACVC,OAAQ,OACRZ,eAAgB,UAEpBa,OAAQ,CACJF,SAAU,WACVG,OAAO,IACPC,MAAO,KAEXC,KAAM,CACFJ,OAAQ,MACRZ,eAAe,SACfI,QAAQ,IACRK,WAAW,SACXQ,UAAU,SACVV,UAAU,YAIlBpD,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEhC,IAkFe4D,eAlFC,SAACjD,GAAW,IAAD,EACakD,mBAAS,KADtB,gCAEKA,oBAAS,IAFd,mBAElBC,EAFkB,KAETC,EAFS,KAInBC,GADUC,mBACAC,eAoBVC,EAAW,WACflE,IAAemE,MAAK,SAAC9D,GAEjB,IAAMJ,EAAOI,EAASJ,KACtBK,QAAQC,IAAIN,EAAKmE,MACjBL,EAAQM,KAAR,WAAiBpE,EAAKqE,SAASF,WAS/BG,EAAUlC,IAoBd,OAlBFmC,qBAAU,WAKR5E,IAAM6E,IAAI,uBAAuBN,MAAK,SAAC9D,GACrC,IAAMJ,EAAOI,EAASJ,KACT,SAATA,EAIC4D,GACHE,EAAQM,KAAR,WAAiBpE,EAAKqE,SAASF,OAJ/BN,GAAW,QAQf,IAGE,qBAAKY,UAAWH,EAAQ/B,QAAxB,SACE,cAACmC,EAAA,EAAD,CAAOD,UAAWH,EAAQ5B,MAA1B,SACI,eAACiC,EAAA,EAAD,CAAMzB,WAAS,EAACuB,UAAWH,EAAQd,KAAnC,UACA,cAACmB,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAMC,GAAIlB,EAAV,SACE,cAACmB,EAAA,EAAD,CAAY5D,QAAQ,KAAK6D,UAAU,KAAKC,cAAY,EAApD,yBAKJ,cAACN,EAAA,EAAD,CAAMC,MAAI,EAAV,SACA,cAACM,EAAA,EAAD,CAAWT,UAAWH,EAAQpB,UAA9B,SAEI,cAAC1C,EAAD,CAAYS,SAlEN,SAACJ,GACvBlB,IAAM6E,IAAI,uBAAuBN,MAAK,SAAC9D,GACjCC,QAAQC,IAAI,8BAEC,SADAF,EAASJ,MAEpBL,IAAM,CACJO,OAAQ,OACRC,IAAK,4BACLH,KAAM,CAAE,KAAQa,KACfqD,MAAK,SAACiB,GAAD,OAAS9E,QAAQC,IAAI,wCAGjC2D,qB,kBCjEAmB,EAAU,CACZC,mBAAoB,MAIV,IAAIC,aACD,IAAIC,W,4CAyDnB,4BAAAtF,EAAA,sEACuBuF,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IADpE,cACQC,EADR,yBAES,IAAIC,cAAcD,EAAQR,IAFnC,4C,sBAIeU,MA3DK,WAAO,IAAD,EACMnC,mBAAS,IADf,mBACnBoC,EADmB,KACTC,EADS,OAEYrC,oBAAS,GAFrB,mBAEnBsC,EAFmB,KAENC,EAFM,OAGMvC,mBAAS,MAHf,mBAGnBwC,EAHmB,KAGTC,EAHS,OAIIzC,mBAAS,MAJb,mBAInB0C,EAJmB,KAIVC,EAJU,KAOxB/B,qBAAU,WAER,GAAiB,OAAb4B,EAAJ,CAQIF,EACFE,EAASI,QAETJ,EAASK,OAIX,IAAMC,EAAa,SAAAzF,GAEjB,IAAI0F,EAAM,IAAIpB,aACVqB,EAAS,IAAIpB,WAEjBoB,EAAOC,kBAAkB5F,EAAEhB,MAC3B2G,EAAOE,UAAY,WACjBxG,QAAQC,IAAI,eACZoG,EAAII,gBAAgBH,EAAOI,QAAQ7C,MAAK,SAAS8C,GAC/C3G,QAAQC,IAAI0G,GACZ,IAAMC,EAAOD,EAAYE,eAAe,GACxCZ,EAAWW,GACXjB,EAAYmB,IAAIC,gBAAgBpG,EAAEhB,YAKxC,OADAmG,EAASkB,iBAAiB,gBAAiBZ,GACpC,kBAAMN,EAASmB,oBAAoB,gBAAiBb,IA/BrDR,G,0CACFsB,GAAkBrD,KAAKkC,EAAa/F,QAAQmH,SA+B/C,CAACrB,EAAUF,IAUd,MAAO,CAACF,EAAUE,EARK,WACrBC,GAAe,IAGK,WACpBA,GAAe,IAG6CG,IClCjDoB,EAzBE,SAAChH,GAAW,IAAD,EAC4CqF,IAD5C,mBACrBC,EADqB,KACXE,EADW,KACEyB,EADF,KACkBC,EADlB,KACiCtB,EADjC,KAU1B,OAPA9B,qBAAU,WACJ8B,GACFhG,QAAQC,IAAI,mBACZG,EAAMmH,KAAKvB,IACNhG,QAAQC,IAAI,uBAClB,CAAC+F,IAGF,qBAAK5B,UAAU,WAAW5C,GAAG,WAAWgG,IAAKpH,EAAMqH,aAAnD,SACA,eAACnD,EAAA,EAAD,CAAMzB,WAAS,EAAf,UACE,uBAAO6E,IAAKhC,EAAUiC,UAAQ,IAC9B,cAAC,IAAD,CAAQ5G,QAASsG,EAAgBO,SAAUhC,EAA3C,mBAGA,cAAC,IAAD,CAAQ7E,QAASuG,EAAeM,UAAWhC,EAA3C,wBCZSiC,EARA,SAACzH,GACZ,OACI,qBAAKgE,UAAU,SAAf,SACI,uBAAOuD,UAAQ,EAACD,IAAKtH,EAAMN,SCFvCR,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAEzB,IAAMqI,EAAgB,uCAAG,WAAOnI,GAAP,eAAAC,EAAA,sEACLN,IAAM,CACzBO,OAAQ,OACRC,IAAK,gBACLH,KAAMA,EACNoI,QAAS,CAAC,eAAgB,4BAC1BC,iBAAkB,CAAC,SAACrI,GAChB,OAAOsI,KAAKC,UAAUvI,KAE1BwI,kBAAmB,CAAC,SAACxI,GACjB,OAAOsI,KAAKG,MAAMzI,OAVE,cACtBI,EADsB,OAa5BC,QAAQC,IAAI,wBAbgB,kBAcrBF,GAdqB,2CAAH,sDAiBhBsI,EAAsB,SAACC,GAGhC,IADA,IAAI3I,EAAO2I,EAAa,KAAW,GAC1BC,EAAI,EAAGA,EAAI5I,EAAK6I,OAAQD,IACR,IAAjB5I,EAAK4I,GAAL,IACA5I,EAAK4I,GAAL,EAAeE,KAEE,IAAjB9I,EAAK4I,GAAL,IACA5I,EAAK4I,GAAL,EAAeE,KAIvB,OAAO9I,G,gBC/BX+I,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAEX,IAAMC,EAAa,SAAEzI,GACxB,IAAI0I,EAAWpF,mBAwBf,OAtBAQ,qBAAU,WACN,IAAImC,EAAMyC,EAASC,QAAQC,WAAW,MAExB,IAAIN,IAAMrC,EAAK,CACzBvC,KAAM,UACNnE,KAAM,CACFsJ,SAAU,CAAC,CACPxH,MAAO,kBACP9B,KAAMS,EAAMT,KACZuJ,YAAa,EACbC,gBAAiB,uBAGrBpE,QAAS,CACLqE,OAAQ,CACJC,EAAG,GACHC,EAAG,SAIjB,IAGF,wBAAQ9H,GAAG,gBAAgBgG,IAAKsB,KClBlC/G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACHC,QAASL,EAAMM,QAAQ,GACvBC,cAAe,MACfC,SAAU,QACVC,UAAW,OACXN,QAAQ,WACRO,UAAW,EACXC,WAAW,UAEfC,UAAW,CACPC,SAAU,WACVC,OAAQ,OACRZ,eAAgB,UAEpBa,OAAQ,CACJF,SAAU,WACVG,OAAO,IACPC,MAAO,KAEXC,KAAM,CACFJ,OAAQ,MACRZ,eAAe,eACfI,QAAQ,IACRK,WAAW,WACXQ,UAAU,SACVV,UAAU,QAGd6G,MAAO,CACHnH,QAAS,OACTD,eAAe,SACfS,WAAW,SACXQ,UAAU,SACVV,UAAU,MACV8G,aAAc,MACd/G,SAAS,YAmEFY,eA/DgB,SAACjD,GAC5B,IAAM6D,EAAUlC,IADsB,EAEEuB,mBAAS,IAFX,mBAEjCgF,EAFiC,KAElBmB,EAFkB,OAGRnG,oBAAS,GAHD,gCAILA,oBAAS,IAJJ,mBAIjCoG,EAJiC,KAItBC,EAJsB,OAMZrG,qBANY,gCAOZA,sBAPY,6BAShBI,iBAAO,MACPA,iBAAO,MA4B7B,OAVAQ,qBAAU,WAEgB,OAAlBoE,EAEAtI,QAAQC,IAAI,uBAEhBD,QAAQC,IAAI,0BAA2BqI,KAErC,CAACA,IAGH,qBAAKlE,UAAWH,EAAQ/B,QAAxB,SACI,cAACmC,EAAA,EAAD,CAAOD,UAAWH,EAAQ5B,MAA1B,SACI,eAACiC,EAAA,EAAD,CAAMzB,WAAS,EAACuB,UAAWH,EAAQd,KAAnC,UACI,eAACmB,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,cAACF,EAAA,EAAD,CAAO7C,GAAG,0BAA0B4C,UAAWH,EAAQsF,MAAvD,SACI,cAAC,EAAD,CAAY5J,KAAM,OAEtB,cAAC,EAAD,CAAQG,IAAK,4EAEb,eAACwE,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,cAACF,EAAA,EAAD,CAAO7C,GAAG,0BAA0B4C,UAAWH,EAAQsF,MAAvD,SACKG,EAAY,cAACE,EAAA,EAAD,IAAuB,cAAC,EAAD,CAAYjK,KAAM2I,MAE1D,cAAC,EAAD,CAAUf,KAAM,SAAC5H,IAxCjB,SAACA,GAErBK,QAAQC,IAAIyJ,GACZ5B,EAAiBnI,GAAMkE,MAAK,SAAC9D,GACzB,IAAI8J,EAAYxB,EAAoBtI,EAASJ,MAE7C8J,EAAiBI,GACjBF,GAAc,MAiC6BG,CAAkBnK,GAAOgK,GAAc,SAE1E,cAACrF,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC,IAAD,CAAQzD,QAAQ,WAAWC,QAAS,WA9BpDb,KA8BgB,iCClGlB6B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACHC,QAASL,EAAMM,QAAQ,GACvBC,cAAe,MACfC,SAAU,QACVC,UAAW,OACXN,QAAQ,WACRO,UAAW,EACXC,WAAW,UAEfC,UAAW,CACPC,SAAU,WACVC,OAAQ,OACRZ,eAAgB,UAEpBa,OAAQ,CACJF,SAAU,WACVG,OAAO,IACPC,MAAO,KAEXC,KAAM,CACFJ,OAAQ,MACRZ,eAAe,eACfI,QAAQ,IACRK,WAAW,WACXQ,UAAU,SACVV,UAAU,QAGd6G,MAAO,CACHnH,QAAS,OACTD,eAAe,SACfS,WAAW,SACXQ,UAAU,SACVV,UAAU,MACV8G,aAAc,MACd/G,SAAS,YAoEFY,eAhEgB,SAACjD,GAC5B,IAAM6D,EAAUlC,IADsB,EAEEuB,mBAAS,MAFX,mBAEjCgF,EAFiC,KAElBmB,EAFkB,OAGTnG,mBAAS,MAHA,mBAGjCyG,EAHiC,KAGpBC,EAHoB,OAIL1G,oBAAS,GAJJ,mBAIjCoG,EAJiC,KAItBC,EAJsB,KAuCtC,OAlBAzF,qBAAU,WAEgB,OAAlBoE,EAEAtI,QAAQC,IAAI,uBAGhBD,QAAQC,IAAI,0BAA2BqI,GACvC5I,IAAemE,MAAK,SAAClE,GAEjBK,QAAQC,IAAIN,GACZqK,EAAQrK,EAAKA,WAKf,CAAC2I,IAGH,qBAAKlE,UAAWH,EAAQ/B,QAAxB,SACI,cAACmC,EAAA,EAAD,CAAOD,UAAWH,EAAQ5B,MAA1B,SACI,eAACiC,EAAA,EAAD,CAAMzB,WAAS,EAACuB,UAAWH,EAAQd,KAAnC,UACI,eAACmB,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,cAACF,EAAA,EAAD,CAAO7C,GAAG,0BAA0B4C,UAAWH,EAAQsF,MAAvD,SACEQ,EAAc,cAAC,EAAD,CAAYpK,KAAM0I,EAAoB0B,EAAY/F,SAASsB,SAAY,cAACsE,EAAA,EAAD,MAEvF,cAAC,EAAD,CAAQ9J,IAAMiK,EAAcA,EAAY/F,SAASiG,MAAM,GAAGC,SAAW,UAErE,eAAC5F,EAAA,EAAD,CAAMC,MAAI,EAAV,UACI,cAACF,EAAA,EAAD,CAAO7C,GAAG,0BAA0B4C,UAAWH,EAAQsF,MAAvD,SACKG,EAAY,cAACE,EAAA,EAAD,IAAuB,cAAC,EAAD,CAAYjK,KAAM2I,MAE1D,cAAC,EAAD,CAAUf,KAAM,SAAC5H,IA/CjB,SAACA,GAErBmI,EAAiBnI,GAAMkE,MAAK,SAAC9D,GACzB,IAAI8J,EAAYxB,EAAoBtI,EAASJ,MAE7C8J,EAAiBI,GACjBF,GAAc,MAyC6BG,CAAkBnK,GAAOgK,GAAc,SAE1E,cAACrF,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAAC,IAAD,CAAQzD,QAAQ,WAAWC,QAAS,YAxCvC,WACb,IAAIhB,EAAW,CAAE,YAAegK,EAAYI,YAAa,aAAgB7B,GACzEpI,EAAeH,GAAU8D,MAAK,SAACiB,GAAD,OAAS9E,QAAQC,IAAI6E,MAsCQlB,IAA3C,iC,QC1GlB7B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,eAAgB,SAChBC,QAAS,QAETC,MAAO,CACLC,QAASL,EAAMM,QAAQ,GACvBC,cAAe,SACfC,SAAU,QACVC,UAAW,OACXN,QAAQ,OACRO,UAAW,EACXR,eAAe,SACfS,WAAW,UAEbC,UAAW,CACPC,SAAU,WACVC,OAAQ,OACRZ,eAAgB,UAEpBa,OAAQ,CACJF,SAAU,WACVG,OAAO,IACPC,MAAO,KAEXC,KAAM,CACFJ,OAAQ,MACRZ,eAAe,SACfI,QAAQ,IACRK,WAAW,SACXQ,UAAU,SACVV,UAAU,YAoCHW,eA/BH,SAACjD,GAEX,IASQ6D,EAAUlC,IAEhB,OACE,qBAAKqC,UAAWH,EAAQ/B,QAAxB,SACE,eAACmC,EAAA,EAAD,CAAOD,UAAWH,EAAQ5B,MAA1B,UACI,cAACiC,EAAA,EAAD,CAAMzB,WAAS,EAACuB,UAAWH,EAAQd,KAAnC,SACI,cAACuB,EAAA,EAAD,CAAY5D,QAAQ,KAAK6D,UAAU,KAAKC,cAAY,EAApD,uBAIJ,cAACC,EAAA,EAAD,CAAWT,UAAWH,EAAQpB,UAA9B,SACE,cAAC,IAAD,CAASuB,UAAWH,EAAQjB,OAAQoH,GAAG,mBAAmBC,MAAO,CAAEC,eAAgB,QAAnF,SACE,cAAC,IAAD,CAAQxJ,QAAQ,WAAhB,oBADgG,cC3DjG,SAASyJ,IAEpB,OACE,qBAAKnG,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,IAAI9F,UAAW+F,IACjC,cAAC,IAAD,CAAOD,KAAK,uBAAuB9F,UAAWgG,IAC9C,cAAC,IAAD,CAAOF,KAAK,mBAAmB9F,UAAWiG,IAC1C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,QAAQ9F,UAAWkG,WCjBjD,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnH,MAAK,YAAkD,IAA/CoH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAChB,EAAD,IACFiB,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e33c9b83.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const getResponses = async (data) => {\n    const response = await axios({\n        method: \"get\",\n        url: \"/api/get-responses/\",\n    });\n    console.log(response)\n    return response\n}\n\nexport const createTrial = async (data) => {\n    const response = await axios({\n        method: \"get\",\n        url: \"/api/get-responses/\",\n        data:data\n    });\n    console.log(\"Created experiment\")\n    return response\n}\n\n\nexport const submitResponse = async (data) => {\n        const response = await axios({\n            method: \"post\",\n            url: \"/api/submit-response/\",\n            data:data\n        });\n        console.log(\"Submitted response\")\n        return response\n}\n\nexport default submitResponse","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [code, setCode] = React.useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (e) => {\n    setOpen(false);\n    props.onSubmit(code)\n  };\n\n  const handleInput = (e) => {\n    setCode(e.target.value)\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Enter\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To access the activity, please enter the experiement code here.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"code\"\n            label=\"Code\"\n            fullWidth\n            variant=\"standard\"\n            value={code}\n            onChange={handleInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useEffect, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { getResponses } from '../utils/responseHelper';\nimport axios from 'axios';\nimport FormDialog from '../elements/FormDialog';\nimport Fade from '@mui/material/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst Welcome = (props) => {\n  const [currentTask, setCurrentTask] = useState('/')\n  const [newUser, setNewUser] = useState(false)\n  const taskRef = useRef()\n  const history = useHistory()\n\n  const createTrial = (code) => {\naxios.get('/api/get-responses/').then((response) => {\n      console.log(\"Checking if user exists...\")\n      const data = response.data\n      if (data === 'None') {\n        axios({\n          method: \"post\",\n          url: \"/api/create-response-set/\",\n          data: { 'code': code }\n        }).then((res) => console.log(\"Created response set for user.\"))\n      }})\n\n    nextTask()\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialize  \n  }\n\n  const nextTask = () => {\n    getResponses().then((response) => \n      {\n        const data = response.data\n        console.log(data.type);\n        history.push(`/${data.taskData.type}`)\n      // axios.post() // get most recent task\n      });\n  }\n  \n\n\n  \n  // Entry point: \n  const classes = useStyles();\n\n  useEffect(() =>{\n    // const nav = taskRef.current.setAttribute('href', '/production-task')\n    // console.log(nav)\n    // setCurrentTask('/production-task/')\n    // console.log('Loaded')\n    axios.get('/api/get-responses/').then((response) => {\n      const data = response.data\n      if (data === 'None') {\n        setNewUser(true)\n        return\n      }\n      if (!newUser) {\n        history.push(`/${data.taskData.type}`)\n      }\n    })\n    }, \n    [])\n\n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n            <Grid item>\n              <Fade in={newUser}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n                </Fade>\n            </Grid>\n            <Grid item>\n            <Container className={classes.container}>\n              {/* <NavLink className={classes.button} ref={taskRef} style={{ textDecoration: 'none' }} key= ''> */}\n                <FormDialog onSubmit={createTrial}/>\n              {/* </NavLink> */}\n            </Container>\n            </Grid>\n            </Grid>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n      }\n    }; \n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","\nimport { useEffect } from  'react'\nimport useRecorder from \"../utils/useRecorder\";\nimport { Button, Grid } from '@material-ui/core'\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      console.log(\"Raw data ready.\")\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\n\nexport default Recorder;","import React from 'react'\n\nconst Player = (props) => {\n    return (\n        <div className=\"Player\">\n            <audio controls src={props.url}/>\n        </div>\n    )\n}\n\nexport default Player\n","import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    console.log(\"Asychronous response\")\n    return response\n}\n\nexport const getPitchScatterData = (processedData) => {\n    \n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport default processAudioData","import React, { useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\n\nChart.register(...registerables);\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        display: 'flex',\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst PerceptionTaskTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState({})\n    let [taskData, setTaskData] = useState(true)\n    let [isLoading, toggleLoading] = useState(true)\n\n    let [chartA, setChartA] = useState()\n    let [chartB, setChartB] = useState()\n\n    let responseDataRef = useRef(null);\n    let questionDataRef = useRef(null);\n    \n    let handleAudioChange = (data) => {\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        console.log(isLoading)\n        processAudioData(data).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)\n         })\n    }\n\n    const nextTask = () => {\n        let response = { 'taskData': taskData, 'responseData': processedData }\n        submitResponse()\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) {\n            \n            console.log(\"No changes recorded\") \n        } else {\n        console.log(\"Processed data changed:\", processedData)}\n        \n        },[processedData]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                            <PitchChart data={[]}/>\n                        </Paper>\n                        <Player url={\"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"}></Player>\n                    </Grid>\n                        <Grid item>\n                            <Paper id=\"response-data-container\" className={classes.chart} >\n                                {isLoading ? <CircularProgress /> : <PitchChart data={processedData}/>}\n                            </Paper>\n                            <Recorder sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                        </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={() => {nextTask();}}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(PerceptionTaskTemplate)\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        display: 'flex',\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst ProductionTaskTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [currentTask, setTask] = useState(null)\n    let [isLoading, toggleLoading] = useState(false)\n    \n    let handleAudioChange = (data) => {\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(data).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)\n         })\n    }\n    \n    const nextTask = () => {\n        let response = { 'response_id': currentTask.response_id, 'responseData': processedData }\n        submitResponse(response).then((res) => console.log(res))\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) {\n            \n            console.log(\"No changes recorded\") \n        } else {\n\n        console.log(\"Processed data changed:\", processedData)}\n        getResponses().then((data)=>\n        {\n            console.log(data)\n            setTask(data.data)\n        }\n        )\n\n\n        },[processedData]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                        { currentTask ? <PitchChart data={getPitchScatterData(currentTask.taskData.audio)}/> : <CircularProgress />}\n                        </Paper>\n                        <Player url={ currentTask ? currentTask.taskData.files[0].filepath : null}></Player>\n                    </Grid>\n                        <Grid item>\n                            <Paper id=\"response-data-container\" className={classes.chart} >\n                                {isLoading ? <CircularProgress /> : <PitchChart data={processedData}/>}\n                            </Paper>\n                            <Recorder sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                        </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={() => {nextTask();}}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProductionTaskTemplate)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\n\nconst End = (props) => {\n\n  const CreateTrial = (props) => {\n\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialized\n    \n  }\n  \n  // Entry point: \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n            </Grid>\n            <Container className={classes.container}>\n              <NavLink className={classes.button} to='/production-task' style={{ textDecoration: 'none' }} key= ''>\n                <Button variant=\"outlined\">Enter</Button>\n              </NavLink>\n            </Container>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(End);\n\n","import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport PerceptionTaskTemplate from './components/pages/PerceptionTask'\nimport ProductionTaskTemplate from './components/pages/ProductionTask'\nimport End from './components/pages/End'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route path=\"/production-matching\" component={ProductionTaskTemplate} />\n            <Route path=\"/perception-task\" component={PerceptionTaskTemplate} />\n            <Route exact path=\"/done\" component={End} />\n          </Switch>\n        </MemoryRouter>\n      </div>\n    );\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}