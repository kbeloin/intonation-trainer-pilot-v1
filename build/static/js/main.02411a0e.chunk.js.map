{"version":3,"sources":["components/utils/responseHelper.js","components/elements/AudioCharts.js","components/utils/useRecorder.js","components/elements/Recorder.js","components/pages/Welcome.js","components/elements/Player.js","components/elements/WordList.js","components/pages/PerceptionDiscriminationTemplate.js","components/utils/processAudio.js","components/pages/ProductionMatchingTask.js","components/pages/ProductionReadingTask.js","components/pages/PerceptionIdentificationTonesTemplate.js","components/pages/PerceptionIdentificationProminenceTemplate.js","components/pages/End.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","getResponses","data","a","method","url","params","response","console","log","submitResponse","Chart","register","registerables","PitchChart","props","chartRef","useRef","useEffect","ctx","current","getContext","type","datasets","label","borderWidth","backgroundColor","options","scales","y","x","id","ref","audioBitsPerSecond","AudioContext","FileReader","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","useState","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","rawData","setRawData","start","stop","handleData","e","reader","readAsArrayBuffer","onloadend","decodeAudioData","result","then","decodedData","view","getChannelData","URL","createObjectURL","addEventListener","removeEventListener","requestRecorder","error","Recorder","startRecording","stopRecording","sets","className","forwardedRef","Grid","container","src","controls","Button","onClick","disabled","useStyles","makeStyles","theme","content","justifyContent","display","paper","padding","spacing","minWidth","minHeight","elevation","position","withRouter","newUser","setNewUser","code","setCode","sentenceData","history","useHistory","nextTask","push","classes","Paper","direction","alignItems","item","xs","Fade","in","Typography","variant","component","gutterBottom","Stack","TextField","autoFocus","margin","value","onChange","target","message","res","createTrial","Player","Item","styled","typography","body2","textAlign","color","palette","text","secondary","WordList","callback","wordList","setWordList","correct","incorrect","force","word","setWord","newList","concat","toLowerCase","v4","map","IconButton","aria-label","size","filter","handleRemove","Icon","height","showCorrect","showIncorrect","trial","setTrial","polite","setPolite","prominent","setProminent","sentenceA","setA","sentenceB","setB","getResponse","sentence","trial_id","response_id","instructions_short","alignContent","style","marginRight","marginLeft","filepath","ToggleButtonGroup","orientation","exclusive","event","nextView","ToggleButton","fullWidth","Box","width","Collapse","Alert","action","sx","mb","severity","trial_target","request","eval","evaluate","alignSelf","task_id","processAudioData","headers","transformRequest","JSON","stringify","transformResponse","parse","getPitchScatterData","processedData","i","length","NaN","flexDirection","button","bottom","right","grid","chart","marginBottom","setProcessedData","currentTask","setTask","isLoading","toggleLoading","taskData","CircularProgress","files","pitchData","handleAudioChange","evaluateTone","currentTarget","showForcedForward","words","setWords","Set","forEach","add","prominent_words","split","has","b","Container","to","textDecoration","App","exact","path","Welcome","PerceptionIdentificationTonesTemplate","PerceptionDiscriminationTemplate","PerceptionIdentificationProminenceTemplate","ProductionMatchingTaskTemplate","ProductionReadingTaskTemplate","PerceptionTaskTemplate","End","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02411a0e.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const getResponses = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/get-responses/\",\n        data: { params: data }\n    });\n    console.log(data)\n    console.log(response)\n    return response\n}\n\nexport const createTrial = async (data) => {\n    const response = await axios({\n        method: \"get\",\n        url: \"/api/get-responses/\",\n        data:data\n    });\n    console.log(\"Created experiment\")\n    return response\n}\n\n\nexport const submitResponse = async (data) => {\n        const response = await axios({\n            method: \"post\",\n            url: \"/api/submit-response/\",\n            data: data\n        });\n        console.log(\"Submitted response\")\n        return response\n}\n\nexport default submitResponse","import React, { useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\n\nChart.register(...registerables);\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n      }\n    }; \n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","\nimport { useEffect } from  'react'\nimport useRecorder from \"../utils/useRecorder\";\nimport { Button, Grid } from '@material-ui/core'\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      console.log(\"Raw data ready.\")\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\n\nexport default Recorder;","import React, { useState, useEffect, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { getResponses } from '../utils/responseHelper';\nimport axios from 'axios';\nimport FormDialog from '../elements/FormDialog';\nimport Fade from '@mui/material/Fade';\nimport { PitchChart } from '../elements/AudioCharts';\nimport Recorder from '../elements/Recorder';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nconst useStyles = makeStyles((theme) => ({\n  content: { \n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      \n      minWidth: '100vw',\n      minHeight: '85vh',\n      display:\"flex\",\n      elevation: 3,\n      position: 'relative'\n      \n    },\n    container: {\n        \n    },\n}));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst Welcome = (props) => {\n  const [currentTask, setCurrentTask] = useState('/')\n  const [newUser, setNewUser] = useState(false)\n  const [code, setCode] = useState(\"\")\n  const taskRef = useRef()\n  const sentenceData = [\"id\"]\n  const history = useHistory()\n\n  const createTrial = (code) => {\n    getResponses(sentenceData).then((response) => {\n          console.log(\"Checking if user exists...\")\n          const data = response.data\n          if (data?.message === 'Next') { // Anon testing purposes\n              nextTask()\n          }\n          if (data === 'None') {\n            axios({\n              method: \"post\",\n              url: \"/api/create-response-set/\",\n              data: { 'code': code }\n            }).then((res) => {\n              console.log(\"Created response set for user.\")\n              nextTask()\n            })\n          }})\n        // When the user selects Enter, experiement begins. \n        // 1. Trial is created\n        // 2. Responses are intialize  \n      }\n\n  const handleInput = (e) => {\n    setCode(e.target.value)\n  }\n\n  const nextTask = () => {\n    getResponses(sentenceData).then((response) => \n      {\n        const data = response.data\n        console.log(data.type);\n        history.push(`/${data.type}`)\n      // axios.post() // get most recent task\n      });\n  }\n  // Entry point: \n  const classes = useStyles();\n\n  useEffect(() =>{\n    // const nav = taskRef.current.setAttribute('href', '/production-task')\n    // console.log(nav)\n    // setCurrentTask('/production-task/')\n    // console.log('Loaded')\n    getResponses(sentenceData).then((response) => {\n      const data = response.data\n      if (data === 'None') {\n        setNewUser(true)\n        \n      } else {\n        console.log(\"User exists. Redirecting to: \", data.type)\n        history.push(`/${data.type}`)\n      }\n    })\n    },[])\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                <Fade in={newUser}>\n                  <Typography variant=\"h1\" component=\"h\" gutterBottom>\n                  </Typography>\n                  </Fade>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                <Fade in={newUser}>\n                  <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                      Welcome\n                  </Typography>\n                  </Fade>\n              </Grid>\n            </Grid>\n            \n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n            <Stack direction=\"row\" spacing={6} xs={12}>\n            <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"code\"\n        label=\"Experiment Code\"\n        \n        variant=\"outlined\"\n        value={code}\n        onChange={handleInput}\n            />\n            <Button onClick={ () => {createTrial(code)} }> Enter</Button>\n                </Stack>\n            </Grid>\n            </Grid>\n            \n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","import React from 'react'\n\nconst Player = (props) => {\n    return (\n        <div className=\"Player\">\n            <audio controls src={props.url}/>\n        </div>\n    )\n}\n\nexport default Player\n","import React, { useState, useReducer, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport { WorkRounded } from '@material-ui/icons';\nimport { SliderTrack } from '@mui/material';\nimport Icon from '@mui/material/Icon';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@mui/material/TextField';\nimport { v4 } from 'uuid'\nimport IconButton from '@mui/material/IconButton';\n\nconst t = {list: []}\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    }));\n\n\nexport const WordList = ({callback, wordList, setWordList, correct, incorrect, force}) => {\n    \n    const [word, setWord] = useState('')\n\n    const handleInput = (e) => {\n        setWord(e.target.value)\n    }\n\n    function handleAdd() {\n        const newList = wordList.concat({ value: word.toLowerCase(), id: v4() })\n        setWordList(newList)\n        setWord('');\n    }\n\n    function handleRemove(id) {\n        const newList = wordList.filter((item) => item.id !== id)\n        setWordList(newList)\n    }\n\n\n\n\n    return (\n        <Stack direction=\"column\" spacing={1}>\n            \n            <Stack direction=\"row\" spacing={6} xs={12}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"code\"\n                    label=\"Enter Word\"\n                    variant=\"outlined\"\n                    value={word}\n                    onChange={handleInput}\n                    />\n                <Button onClick={ handleAdd } value={word} disabled={correct || incorrect || force }> Add </Button>\n                <Button onClick={ () => { callback(wordList) } } disabled={correct || incorrect || force}> Submit</Button>\n            </Stack>\n            <Stack direction=\"row\" spacing={2}>\n                    { wordList.map((item) => { return (\n                        <Item key={item.id}> \n                        {item.value}\n                        <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleRemove(item.id)}>\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Item>\n                    )})}\n                </Stack>\n        </Stack>\n       \n    );\n    }\n\nexport default WordList;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionDiscriminationTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const [polite, setPolite] = useState(null)\n    const [prominent, setProminent] = useState(null)\n    const [sentenceA, setA] = useState(null)\n    const [sentenceB, setB] = useState(null)\n\n\n    const sentenceData = [\"id\",\"filepath\"]\n    const history = useHistory()\n    \n\n\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n        });\n            \n    }\n\n    const handlePoliteChange = (event, nextView) => {\n        console.log(nextView)\n        setPolite(nextView);\n      };\n\n    const handleProminentChange = (event, nextView) => {\n        console.log(nextView)\n        setProminent(nextView);\n    };\n\n    const evaluate = () => {\n        const target = trial.target\n        const trial_target = prominent\n        console.log(trial_target)\n        console.log(target)\n\n        if (trial_target.id === target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: trial_target.id, response_id: trial.response_id }\n            submitResponse(request)\n            return\n            \n            \n        } else {\n\n        showIncorrect(true)\n        let request = { eval: 0, response: trial_target.id, response_id: trial.response_id }\n        submitResponse(request)\n        }\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        showCorrect(false)\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n\n                    else {\n                        setTrial(data)\n                        setA(data.sentence[0])\n                        setB(data.sentence[1])\n\n                    }\n              })\n            }\n    \n    useEffect( () => {\n      \n        getResponses(sentenceData).then((response) => {\n            console.log(response.data)\n            const data = response.data\n            setTrial(data)\n\n            console.log(data.sentence[0])\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n\n           \n        });\n\n    },[]);\n///Change\n    return (\n        <div>\n        <Paper className={classes.paper}>\n        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                   {trial ? \"TRIAL \" + trial.trial_id + \" : \" + trial.response_id : \"Loading\" }\n                </Typography> \n            </Stack>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                </Typography>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" alignContent=\"center\" spacing={6}>\n                                      \n                        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        A\n                        </Typography> \n                            <Player url={sentenceA ? sentenceA.filepath : null}/>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        B\n                        </Typography> \n                            <Player url={sentenceB ? sentenceB.filepath : null}/>\n                        </Stack>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                                            More Polite?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={polite}\n                            exclusive\n                            onChange={handlePoliteChange}\n                            >\n                            <ToggleButton  disabled={correct || incorrect} value={trial ? trial.sentence[0] : -1} aria-label=\"A\" fullWidth={true}>\n                            Sentence A`\n                            </ToggleButton>\n                            <ToggleButton  disabled={correct || incorrect} value={trial ? trial.sentence[1] : -1} aria-label=\"B\" fullWidth={true}>\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                        </Stack>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        More Appropriate Prominence?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={prominent}\n                            exclusive\n                            onChange={handleProminentChange}\n                            >\n                            <ToggleButton value={trial ? trial.sentence[0] : -1} aria-label=\"list\"  disabled={correct || incorrect}>\n                            Sentence A\n                            </ToggleButton>\n                            <ToggleButton value={trial ? trial.sentence[1] : -1} aria-label=\"quilt\" disabled={correct || incorrect}>\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                    </Stack>\n                            \n                 \n                </Stack>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Not Quite! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Button size=\"medium\"variant=\"contained\" onClick={() =>{evaluate()}}  disabled={(!polite || !prominent) || (correct || incorrect)} >Submit</Button>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionDiscriminationTemplate);","import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const getPitchScatterData = (processedData) => {\n    \n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport default processAudioData","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '85vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        display: 'flex',\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst ProductionMatchingTaskTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [currentTask, setTask] = useState(null)\n    let [isLoading, toggleLoading] = useState(false)\n    let history = useHistory()\n    \n    let handleAudioChange = (data) => {\n        const audio = data\n        const response_id = currentTask.response_id\n\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)});\n        }\n    \n    const nextTask = () => {\n        let request = { 'response_id': currentTask.response_id, 'responseData': processedData }\n        submitResponse(request).then((response) => {\n                    const data = response.data\n                    history.push(`/`)\n              });\n            }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) {\n            getResponses().then((data)=>setTask(data.data))\n        } else {\n            console.log(\"Processed data changed:\", processedData)\n            getResponses().then((data)=> { currentTask.task_id !== data.data.task_id ? nextTask(): setTask(data.data)});\n        }},[processedData]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                        { currentTask ? <PitchChart data={getPitchScatterData(currentTask.taskData.audio)}/> : <CircularProgress />}\n                        </Paper>\n                        <Player url={ currentTask ? currentTask.taskData.files[0].filepath : null}></Player>\n                    </Grid>\n                    <Grid item>\n                        <Paper id=\"response-data-container\" className={classes.chart} >\n                            {isLoading ? <CircularProgress /> : <PitchChart data={processedData}/>}\n                        </Paper>\n                        <Recorder sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={() => {nextTask();}}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProductionMatchingTaskTemplate)\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '85vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        display: 'flex',\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst ProductionReadingTaskTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [currentTask, setTask] = useState(null)\n    let [isLoading, toggleLoading] = useState(false)\n    let history = useHistory()\n    \n    let handleAudioChange = (data) => {\n        const audio = data\n        const response_id = currentTask.response_id\n\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)\n         });\n    }\n    \n    const nextTask = () => {\n        let request = { 'response_id': currentTask.response_id, 'responseData': processedData }\n        submitResponse(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    history.push(`/`)\n              })\n            }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) {\n            getResponses().then((data)=>setTask(data.data))\n        } else {\n            console.log(\"Processed data changed:\", processedData)\n            getResponses().then((data)=> { currentTask.task_id !== data.data.task_id ? nextTask(): setTask(data.data)});\n        }},[processedData]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        \n                    </Grid>\n                        <Grid item>\n                            <Paper id=\"response-data-container\" className={classes.chart} >\n                                {isLoading ? <CircularProgress /> : <PitchChart data={processedData}/>}\n                            </Paper>\n                            <Recorder sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                        </Grid>\n                    <Grid item>\n                        <Button size=\"Large\"variant=\"outlined\" onClick={() => {nextTask();}}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProductionReadingTaskTemplate)\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Icon from '@mui/material/Icon'\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative'\n        \n      },\n  }));\n\n  \naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \n\nexport const PerceptionIdentificationTonesTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const sentenceData = [\"id\",\"filepath\",\"intonation\"]\n    const history = useHistory()\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const evaluateTone = (e) => {\n        let target = e.currentTarget.value\n        if (target === trial.target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: target, response_id: trial.response_id }\n            submitResponse(request)\n            return\n        }\n        showIncorrect(true)\n        let request = { eval: 0, response: target, response_id: trial.response_id }\n        submitResponse(request)\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse();\n                    } else {\n                        setTrial(data)\n                    };\n                });\n            };\n\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    },[]);\n\n    return (\n        <div>\n        <Paper className={classes.paper}>\n        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                   {trial ? \"TRIAL \" + trial.trial_id + \" : \" + trial.response_id : \"Loading\" }\n                </Typography> \n            </Stack>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                  </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"rising\" disabled={correct || incorrect}>\n                        Rising\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"level\" disabled={correct || incorrect}>\n                        Level\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"falling\" disabled={correct || incorrect}>\n                        Falling\n                    </Button>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionIdentificationTonesTemplate);","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionIdentificationProminenceTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [force, showForcedForward] = useState(false)\n    const [trial, setTrial] = useState(null);\n    const sentenceData = [\"id\",\"filepath\",\"prominent_words\"]\n    const history = useHistory()\n    const [words, setWords] = useState([])\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        showForcedForward(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const evaluate = () => {\n        const target = new Set\n        words.forEach((e) => target.add(e.value))\n        let trial_target = new Set (trial.sentence.prominent_words.split(','))\n\n        let a = new Set([...trial_target].filter(x => !target.has(x)));\n        let b = new Set([...target].filter(x => !trial_target.has(x)));\n        console.log(a.size && b.size)\n        if (!a.size && !b.size) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: target, response_id: trial.response_id }\n            submitResponse(request)\n            setWords([])\n            return\n        }\n\n        \n        let request = { eval: 0, response: target, response_id: trial.response_id }\n        submitResponse(request).then((response)=> {\n            const data = response.data;\n            if (data.trial_id !== trial.trial_id) {\n                showForcedForward(true)\n            } else {\n                showIncorrect(true)\n            }\n\n        })\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n\n                    else {\n                        setTrial(data)\n                    }\n              })\n            }\n\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    },[]);\n///Change\n    return (\n        <div>\n        <Paper className={classes.paper}>\n        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                   {trial ? \"TRIAL \" + trial.trial_id + \" : \" + trial.response_id : \"Loading\" }\n                </Typography> \n            </Stack>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                  </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={force}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\">\n                                \n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        You've reached the maximum number of attempts. Click next to continue!\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <WordList callback={evaluate} wordList={words} setWordList={setWords} correct={correct} incorrect={incorrect} force={force}/>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct || !force }>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionIdentificationProminenceTemplate);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\n\nconst End = (props) => {\n\n  const CreateTrial = (props) => {\n\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialized\n    \n  }\n  \n  // Entry point: \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n            </Grid>\n            <Container className={classes.container}>\n              <NavLink className={classes.button} to='/production-task' style={{ textDecoration: 'none' }} key= ''>\n                <Button variant=\"outlined\">Enter</Button>\n              </NavLink>\n            </Container>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(End);\n\n","import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport PerceptionTaskTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport ProductionMatchingTaskTemplate from './components/pages/ProductionMatchingTask'\nimport ProductionReadingTaskTemplate from './components/pages/ProductionReadingTask'\nimport PerceptionDiscriminationTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport PerceptionIdentificationTonesTemplate from './components/pages/PerceptionIdentificationTonesTemplate'\nimport PerceptionIdentificationProminenceTemplate from './components/pages/PerceptionIdentificationProminenceTemplate'\nimport End from './components/pages/End'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/perception-identification-tones\" component={PerceptionIdentificationTonesTemplate} />\n            <Route exact path=\"/perception-discrimination\" component={PerceptionDiscriminationTemplate} />\n            <Route exact path=\"/perception-identification-prominence\" component={PerceptionIdentificationProminenceTemplate} />\n            <Route path=\"/production-controlled\" component={ProductionMatchingTaskTemplate} />\n            <Route path=\"/production-reading\" component={ProductionReadingTaskTemplate} />\n            <Route path=\"/perception-task\" component={PerceptionTaskTemplate} />\n            <Route exact path=\"/done\" component={End} />\n          </Switch>\n        </MemoryRouter>\n      </div>\n    );\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}