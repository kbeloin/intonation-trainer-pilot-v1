{"version":3,"sources":["components/utils/responseHelper.js","components/elements/AudioCharts.js","components/utils/useRecorder.js","components/elements/Recorder.js","components/pages/Welcome.js","components/elements/Player.js","components/elements/WordList.js","components/utils/remainingAttempts.js","components/pages/PerceptionIdentificationTonesTemplate.js","components/pages/Instructions.js","components/pages/PerceptionDiscriminationTemplate.js","components/utils/processAudio.js","components/pages/ProductionControlledTemplate.js","components/pages/ProductionGuidedTemplate.js","components/pages/PerceptionIdentificationProminenceTemplate.js","components/pages/End.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","getResponses","data","a","method","url","params","response","console","log","submitResponse","Chart","register","registerables","PitchChart","props","chartRef","useRef","useEffect","ctx","current","getContext","type","datasets","label","borderWidth","backgroundColor","options","scales","y","x","id","ref","audioBitsPerSecond","AudioContext","FileReader","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","useRecorder","useState","audioURL","setAudioURL","isRecording","setIsRecording","recorder","setRecorder","rawData","setRawData","start","stop","handleData","e","reader","readAsArrayBuffer","onloadend","decodeAudioData","result","then","decodedData","view","getChannelData","URL","createObjectURL","addEventListener","removeEventListener","requestRecorder","error","Recorder","startRecording","stopRecording","sets","className","forwardedRef","Grid","container","src","controls","Button","onClick","disabled","useStyles","makeStyles","theme","content","justifyContent","display","paper","padding","spacing","minWidth","minHeight","elevation","position","withRouter","newUser","code","setCode","sentenceData","history","useHistory","nextTask","push","classes","undefined","Paper","direction","alignItems","item","xs","Fade","in","Typography","variant","component","gutterBottom","Stack","TextField","autoFocus","margin","value","onChange","target","message","res","createTrial","Player","Item","styled","typography","body2","textAlign","color","palette","text","secondary","WordList","callback","wordList","setWordList","correct","incorrect","force","word","setWord","newList","concat","toLowerCase","v4","map","IconButton","aria-label","size","filter","handleRemove","Icon","remainingAttempts","num","height","showCorrect","showIncorrect","trial","setTrial","instructionRef","getResponse","evaluateTone","currentTarget","request","eval","response_id","textContent","instructions","alignContent","alignSelf","marginRight","trial_id","instructions_short","sentence","filepath","Box","style","width","Collapse","Alert","action","sx","mb","severity","task_id","TaskOneInstructions","open","setOpen","Backdrop","zIndex","drawer","maxWidth","Instructions","margins","polite","setPolite","prominent","setProminent","sentenceA","setA","sentenceB","setB","marginLeft","ToggleButtonGroup","orientation","exclusive","event","nextView","ToggleButton","fullWidth","trial_target","evaluate","TaskThreeInstructions","processAudioData","headers","transformRequest","JSON","stringify","transformResponse","parse","getPitchScatterData","processedData","i","length","NaN","grid","button","bottom","right","chart","marginBottom","setProcessedData","isLoading","toggleLoading","exampleRef","nextTrial","example_ref","childExampleRef","childInstructionRef","pitch","CircularProgress","pitchData","handleAudioChange","setValue","attempts","setAttempts","submitted","isSubmitted","example_text","alert","m","noValidate","autoComplete","multiline","maxRows","userResponse","nextTaskId","nextType","nextTrialId","nextResponseId","Submit","TaskFourInstructions","showForcedForward","words","setWords","Evaluate","Set","forEach","add","prominent_words","split","has","b","Next","TaskTwoInstructions","flexDirection","App","exact","path","Welcome","PerceptionIdentificationTonesTemplate","PerceptionDiscriminationTemplate","PerceptionIdentificationProminenceTemplate","ProductionControlledTemplate","ProductionGuidedTemplate","End","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b1f71ca.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const getResponses = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/get-responses/\",\n        data: { params: data }\n    });\n    console.log(data)\n    console.log(response)\n    return response\n}\n\nexport const createTrial = async (data) => {\n    const response = await axios({\n        method: \"get\",\n        url: \"/api/get-responses/\",\n        data:data\n    });\n    console.log(\"Created experiment\")\n    return response\n}\n\n\nexport const submitResponse = async (data) => {\n        const response = await axios({\n            method: \"post\",\n            url: \"/api/submit-response/\",\n            data: data\n        });\n        console.log(\"Submitted response\")\n        return response\n}\n\nexport default submitResponse","import React, { useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\n\nChart.register(...registerables);\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n      }\n    }; \n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","\nimport { useEffect } from  'react'\nimport useRecorder from \"../utils/useRecorder\";\nimport { Button, Grid } from '@material-ui/core'\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      console.log(\"Raw data ready.\")\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\n\nexport default Recorder;","import React, { useState, useEffect, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { getResponses } from '../utils/responseHelper';\nimport axios from 'axios';\nimport FormDialog from '../elements/FormDialog';\nimport Fade from '@mui/material/Fade';\nimport { PitchChart } from '../elements/AudioCharts';\nimport Recorder from '../elements/Recorder';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nconst useStyles = makeStyles((theme) => ({\n  content: { \n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      \n      minWidth: '100vw',\n      minHeight: '85vh',\n      display:\"flex\",\n      elevation: 3,\n      position: 'relative'\n      \n    },\n    container: {\n        \n    },\n}));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst Welcome = (props) => {\n  const [currentTask, setCurrentTask] = useState('/')\n  const [newUser, setNewUser] = useState(false)\n  const [code, setCode] = useState(\"\")\n  const taskRef = useRef()\n  const exampleRef = useRef()\n  const sentenceData = [\"id\"]\n  const history = useHistory()\n\n  const createTrial = (code) => {\n    getResponses(sentenceData).then((response) => {\n          console.log(\"Checking if user exists...\")\n\n          const data = response.data\n          if (data?.message === 'Next') { // Anon testing purposes\n              nextTask()\n          }\n          if (data === 'None') {\n            axios({\n              method: \"post\",\n              url: \"/api/create-response-set/\",\n              data: { 'code': code }\n            }).then((res) => {\n              console.log(\"Created response set for user.\")\n              nextTask()\n            })\n          }})\n        // When the user selects Enter, experiement begins. \n        // 1. Trial is created\n        // 2. Responses are intialize  \n      }\n\n  const handleInput = (e) => {\n    setCode(e.target.value)\n  }\n\n  const nextTask = () => {\n    getResponses(sentenceData).then((response) => \n      {\n        const data = response.data\n        console.log(data.type);\n        history.push(`/${data.type}`)\n      // axios.post() // get most recent task\n      });\n  }\n  // Entry point: \n  const classes = useStyles();\n\n  useEffect(() =>{\n    // const nav = taskRef.current.setAttribute('href', '/production-task')\n    // console.log(nav)\n    // setCurrentTask('/production-task/')\n    // console.log('Loaded')\n    getResponses(sentenceData).then((response) => {\n      const data = response.data\n      console.log(data)\n      if (data.type !== undefined) {\n          history.push(`/${data.type}`)\n        }\n\n    })\n    },[])\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                <Fade in={newUser}>\n                  <Typography variant=\"h1\" component=\"h\" gutterBottom>\n                  </Typography>\n                  </Fade>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" alignItems=\"center\" >\n              <Grid  item xs={12}>\n                \n                  <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                      Welcome\n                  </Typography>\n                  <Typography variant=\"h1\" component=\"h\" gutterBottom>\n                    Welcome to the study investigating English intonation and learning. Before starting, please observe the following requirements:\n                    <Stack direction=\"column\" xs={4}> \n                    1. Wear a headset with microphone (or make sure your computer has a microphone.\n                    2. Please open the experiement in Google Chrome. \n                    </Stack>\n                  </Typography>\n                  \n              </Grid>\n            </Grid>\n            \n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n            <Stack direction=\"row\" spacing={6} xs={12}>\n            <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"code\"\n        label=\"Experiment Code\"\n        \n        variant=\"outlined\"\n        value={code}\n        onChange={handleInput}\n            />\n            <Button onClick={ () => {createTrial(code)} }> Enter</Button>\n                </Stack>\n            </Grid>\n            </Grid>\n            \n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","import React from 'react'\n\nconst Player = (props) => {\n    return (\n        <div className=\"Player\">\n            <audio controls src={props.url}/>\n        </div>\n    )\n}\n\nexport default Player\n","import React, { useState, useReducer, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport { WorkRounded } from '@material-ui/icons';\nimport { SliderTrack } from '@mui/material';\nimport Icon from '@mui/material/Icon';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@mui/material/TextField';\nimport { v4 } from 'uuid'\nimport IconButton from '@mui/material/IconButton';\n\nconst t = {list: []}\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    }));\n\n\nexport const WordList = ({callback, wordList, setWordList, correct, incorrect, force}) => {\n    \n    const [word, setWord] = useState('')\n\n    const handleInput = (e) => {\n        setWord(e.target.value)\n    }\n\n    function handleAdd() {\n        const newList = wordList.concat({ value: word.toLowerCase(), id: v4() })\n        setWordList(newList)\n        setWord('');\n    }\n\n    function handleRemove(id) {\n        const newList = wordList.filter((item) => item.id !== id)\n        setWordList(newList)\n    }\n\n\n\n\n    return (\n        <Stack direction=\"column\" spacing={1}>\n            \n            <Stack direction=\"row\" spacing={6} xs={12}>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"code\"\n                    label=\"Enter Word\"\n                    variant=\"outlined\"\n                    value={word}\n                    onChange={handleInput}\n                    />\n                <Button onClick={ handleAdd } value={word} disabled={correct || incorrect || force }> Add </Button>\n                <Button onClick={ () => { callback(wordList) } } disabled={correct || incorrect || force}> Submit</Button>\n            </Stack>\n            <Stack direction=\"row\" spacing={2}>\n                    { wordList.map((item) => { return (\n                        <Item key={item.id}> \n                        {item.value}\n                        <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleRemove(item.id)}>\n                            <Icon>close</Icon>\n                        </IconButton>\n                    </Item>\n                    )})}\n                </Stack>\n        </Stack>\n       \n    );\n    }\n\nexport default WordList;","\n\nconst remainingAttempts = (num) => {\n    var x = num % 3\n    if (x === 0) {\n        var x = x + 3\n        return x\n    } return x\n}\n\nexport default remainingAttempts","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Icon from '@mui/material/Icon'\nimport remainingAttempts from '../utils/remainingAttempts'\nimport Instructions from './Instructions'\nimport Backdrop from '@mui/material/Backdrop'\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative'\n        \n      },\n  }));\n\n  \naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \n\nexport const PerceptionIdentificationTonesTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const sentenceData = [\"id\",\"filepath\",\"intonation\"]\n    const history = useHistory()\n    const instructionRef = useRef()\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const evaluateTone = (e) => {\n        let target = e.currentTarget.value\n        if (target === trial.target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: target, response_id: trial.response_id }\n            submitResponse(request)\n            return\n        }\n        showIncorrect(true)\n        let request = { eval: 0, response: target, response_id: trial.response_id }\n        submitResponse(request)\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse();\n                    } else {\n                        setTrial(data)\n                    };\n                });\n            };\n            \n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions \n            \n        \n        })\n    },[]);\n\n    return (\n        <div>\n            \n        <Paper className={classes.paper}>\n  \n              \n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n            <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <TaskOneInstructions/>\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography>\n           \n            </Stack>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {!trial ? \"Loading...\" : trial.text.instructions_short} \n                  </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"rising\" disabled={correct || incorrect}>\n                        Rising\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"level\" disabled={correct || incorrect}>\n                        Level\n                    </Button>\n                    <Button variant=\"outlined\" size=\"large\" onClick={(e)=> evaluateTone(e)} value=\"falling\" disabled={correct || incorrect}>\n                        Falling\n                    </Button>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\n\n\n\nexport default withRouter(PerceptionIdentificationTonesTemplate);\n\n\nexport const TaskOneInstructions = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper style={{maxWidth:\"1100px\"}}>\n        <Box>\n                <Stack direction=\"column\">\n                \n                <Stack direction=\"row\">\n                    Task 1. Listening.\n                    \n                    </Stack>\n                    <Stack direction=\"row\">\n                    In this task, you will listen to requests spoken with different intonations. For each request, you will identify the tone choice AT THE END of the sentence, where the request is happening.\n                    </Stack>\n                    <Stack direction=\"row\">\n                    In English, there are three general types of intonation.\n                    </Stack>\n                    <Stack direction=\"row\">\n                    <b>Falling</b> = the voice at the end of the request goes down.\n                    <b>Rising</b> = the voice at the end of the request goes down.\n                    <b>Level</b> = the voice does not go up or down.\n                    </Stack>\n                    </Stack>\n                </Box>\n            </Paper>\n      </Backdrop>\n        </div>\n    )\n}\n\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Icon from '@mui/material/Icon'\nimport Backdrop from '@mui/material/Backdrop'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PerceptionIdentificationTonesTemplate from './PerceptionIdentificationTonesTemplate';\n\nconst useStyles = makeStyles((theme) => ({\n      paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '100vw',\n        height: '40vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative'\n        \n      },\n  }));\n\n  \naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nexport const Instructions = (props) => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper style={{maxWidth:\"1100px\", margins:\"10px\"}}>\n                <Stack direction=\"column\">\n                    <Stack direction=\"row\">\n                    <Typography>\n                Task 1. Listening. \n                    </Typography>\n                    </Stack>\n                <Stack direction=\"row\">\n                <Typography>\n                    In this task, you will listen to requests spoken with different intonations.{\"\\n\"} For each request, you will identify the tone choice AT THE END of the sentence, where the request is happening.\n                    {\"\\n\"}\n                    In English, there are three general types of intonation.{\"\\n\"}\n                <b>Falling</b> = the voice at the end of the request goes down.{\"\\n\"}\n                <b>Rising</b> = the voice at the end of the request goes down.{\"\\n\"}\n                <b>Level</b> = the voice does not go up or down.{\"\\n\"}\n                </Typography>\n                </Stack>\n                </Stack>\n            </Paper>\n      </Backdrop>\n        </div>\n    )\n}\n\n\n\nexport default Instructions;","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport Instructions from './Instructions';\nimport remainingAttempts from '../utils/remainingAttempts';\nimport Backdrop from '@mui/material/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionDiscriminationTemplate = () => {\n    const [correct, showCorrect] = useState(false);\n    const [incorrect, showIncorrect] = useState(false);\n    const [trial, setTrial] = useState(null);\n    const [polite, setPolite] = useState(null)\n    const [prominent, setProminent] = useState(null)\n    const [sentenceA, setA] = useState(null)\n    const [sentenceB, setB] = useState(null)\n    const instructionRef = useRef()\n    const exampleRef = useRef()\n\n    const sentenceData = [\"id\",\"filepath\"]\n    const history = useHistory()\n    \n\n\n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n        });\n            \n    }\n\n    const handlePoliteChange = (event, nextView) => {\n        console.log(nextView)\n        setPolite(nextView);\n      };\n\n    const handleProminentChange = (event, nextView) => {\n        console.log(nextView)\n        setProminent(nextView);\n    };\n\n    const evaluate = () => {\n        const target = trial.target\n        const trial_target = prominent\n        console.log(trial_target)\n        console.log(target)\n\n        if (trial_target.id === target) {\n            showCorrect(true)\n            console.log(target)\n            let request = { eval: 1, response: trial_target.id, response_id: trial.response_id }\n            submitResponse(request)\n            return\n            \n            \n        } else {\n\n        showIncorrect(true)\n        let request = { eval: 0, response: trial_target.id, response_id: trial.response_id }\n        submitResponse(request)\n        }\n    }\n\n    const nextTrial = () => {\n        let request = [\"id\"]\n        showCorrect(false)\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n\n                    else {\n                        getResponse()\n                        setTrial(data)\n                        setA(data.sentence[0])\n                        setB(data.sentence[1])\n\n                    }\n              })\n            }\n    \n    useEffect( () => {\n      \n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            \n            console.log(data.sentence[0])\n            setA(data.sentence[0])\n            setB(data.sentence[1])\n\n           \n        });\n\n    },[]);\n///Change\n    return (\n        <div>\n            \n        <Paper className={classes.paper}>\n            <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n            <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <TaskThreeInstructions />\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography> \n            </Stack>\n                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                </Typography>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" alignContent=\"center\" spacing={6}>\n                                      \n                        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        A\n                        </Typography> \n                            <Player url={sentenceA ? sentenceA.filepath : null}/>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        B\n                        </Typography> \n                            <Player url={sentenceB ? sentenceB.filepath : null}/>\n                        </Stack>\n                        </Stack>\n                        <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                                            More Polite?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={polite}\n                            exclusive\n                            onChange={handlePoliteChange}\n                            >\n                            <ToggleButton   value={trial ? trial.sentence[0] : -1} aria-label=\"A\" fullWidth={true}>\n                            Sentence A\n                            </ToggleButton>\n                            <ToggleButton  value={trial ? trial.sentence[1] : -1} aria-label=\"B\" fullWidth={true}>\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                        </Stack>\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n                        <Typography style={{marginRight:\"20px\", marginLeft:'20px'}} variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                        More Appropriate Prominence?\n                        </Typography> \n                    <ToggleButtonGroup\n                            orientation=\"horizontal\"\n                            value={prominent}\n                            exclusive\n                            onChange={handleProminentChange}\n                            >\n                            <ToggleButton value={trial ? trial.sentence[0] : -1} aria-label=\"list\" >\n                            Sentence A\n                            </ToggleButton>\n                            <ToggleButton value={trial ? trial.sentence[1] : -1} aria-label=\"quilt\">\n                            Sentence B\n                            </ToggleButton>   \n                        </ToggleButtonGroup>   \n                    </Stack>\n                            \n                 \n                </Stack>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { getResponse()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Not Quite!.\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Button size=\"medium\"variant=\"contained\" onClick={() =>{evaluate()}}>Submit</Button>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{nextTrial()}}  disabled={!correct}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\nexport default withRouter(PerceptionDiscriminationTemplate);\n\nexport const TaskThreeInstructions = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper style={{maxWidth:\"1100px\"}}>\n        <Box>\n                <Stack direction=\"column\">\n                \n                <Stack direction=\"row\">\n                Task 3. Listening.\n                    \n                    </Stack>\n                    <Stack direction=\"row\">\n                    In this task, you will listen to pairs of sentences. Sentences in each pair will have the same words but different intonation. You will be asked to choose the sentence that has a more natural and polite tone choice (rising, falling, or level) and a more natural and appropriate prominence (stressed words).                    </Stack>\n                    <Stack direction=\"row\">\n                    Intonation and politeness.\n                    </Stack>\n                    <Stack direction=\"row\">\n                    <b>Tone choices</b> \n                    In English, falling tone choices are considered more appropriate and polite.\n                    Rising and level tone choices are less polite and are usually not used to make requests to professors, teachers, bosses, advisors, etc.\n\n                    <b>Prominence</b>\n                    In English, only the words that are important for the request are stressed in a sentence. In general, only 2-3 contextually important words are normally prominent in a sentence.\n                    </Stack>\n                    </Stack>\n                </Box>\n            </Paper>\n      </Backdrop>\n        </div>\n    )\n}","import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const getPitchScatterData = (processedData) => {\n    console.log(processedData)\n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport default processAudioData","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Icon from '@mui/material/Icon'\nimport remainingAttempts from '../utils/remainingAttempts';\nimport Instructions from './Instructions';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '95vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        \n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'50px',\n        right: '50px'\n    },\n    chart: {\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\",\n        marginBottom: \"1vh\",\n        minWidth:\"30vw\",\n    }\n}));\n\nconst ProductionControlledTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n\n    let [trial, setTrial] = useState(null)\n    let [isLoading, toggleLoading] = useState(false)\n    let [correct, showCorrect] = useState(false)\n    let [incorrect, showIncorrect] = useState(false)\n    let sentenceData = [\"id\",\"filepath\",\"pitch\"]\n    let instructionRef = useRef()\n    let exampleRef = useRef()\n    let history = useHistory()\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    \n    let handleAudioChange = (data) => {\n        const audio = data\n        const response_id = trial.response_id\n\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)});\n            evaluate()\n        }\n\n    const evaluate = () => {\n        \n        if (processedData) {\n            showCorrect(true)\n            \n            let request = { eval: 1, response: {data: processedData}, response_id: trial.response_id }\n            submitResponse(request)\n            nextTrial()\n            return\n        } else {\n\n        showIncorrect(true)\n        let request = { eval: 0, response: \"\", response_id: trial.response_id }\n        submitResponse(request)\n        }\n    }\n    const nextTrial = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    }\n                    if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        getResponse()\n                    }\n                    else {\n                        setTrial(data)\n                    }\n                })\n            }\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions\n            exampleRef.current.textContent = data.text.example_ref\n        });\n    },[]);\n\n    return (\n            <div>\n                <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <Instructions childExampleRef={exampleRef} childInstructionRef={instructionRef}/>\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography> \n                </Stack>\n                <Paper className={classes.paper}>\n                    \n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                        <Typography marginRight={'50px'} variant=\"body1\" component=\"h1\" gutterBottom>\n                            {trial ? trial.text.instructions_short : \"Loading...\"} \n                        </Typography>\n                        <Stack direction=\"column\"  spacing={5}>\n                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={5} xs={6}>\n                                { trial ? \n                                <Paper id=\"question-data-container\" className={classes.chart}>  \n                                    <PitchChart data={getPitchScatterData(trial.sentence.pitch)}/> \n                                </Paper>\n                                :\n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <CircularProgress/> \n                                </Paper>}\n                                {isLoading ? \n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <CircularProgress/> \n                                </Paper>\n                                :   \n                                <Paper id=\"response-data-container\" className={classes.chart}>\n                                    <PitchChart data={processedData}/>\n                                </Paper>}\n                                </Stack>\n                                <Stack direction=\"row\" spacing={22} xs={12}>\n                                    <Stack direction=\"column\" justifyContent=\"flex-start\" alignItems=\"flex-start\" alignContent=\"flex-start\"spacing={15} xs={12}> \n                                        <Player url={ trial ? trial.sentence.filepath : null}></Player>\n                                    </Stack>\n                                        <Stack direction=\"column\" justifyContent=\"flex-end\" alignItems=\"flex-end\" alignContent=\"flex-end\"spacing={12} xs={6}> \n                                            <Recorder alignSelf=\"flex-end\" sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                                        </Stack>\n                                    </Stack>\n                                </Stack>\n                            </Stack>\n                        <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={5}>    \n                    <Button className={classes.button} variant=\"outlined\" onClick={() => {nextTrial()}}>Next</Button>\n                </Stack>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProductionControlledTemplate)\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@mui/material/styles'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\nimport { getResponses } from '../utils/responseHelper';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Icon from '@mui/material/Icon'\nimport Instructions from \"./Instructions\"\nimport remainingAttempts from '../utils/remainingAttempts';\nimport Backdrop from '@mui/material/Backdrop';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n  \n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        justifyContent: 'center',\n        minWidth: '95vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        \n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'50px',\n        right: '50px'\n    },\n    chart: {\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"275px\",\n        marginBottom: \"1vh\",\n        minWidth:\"30vw\",\n    }\n}));\n\nconst ProductionGuidedTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [value, setValue] = useState(\"\")\n    let [attempts, setAttempts] = useState(0)\n    let [trial, setTrial] = useState(null)\n    let [submitted, isSubmitted] = useState(null)\n\n    let [isLoading, toggleLoading] = useState(false)\n    let [correct, showCorrect] = useState(false)\n    let [incorrect, showIncorrect] = useState(false)\n    let instructionRef = useRef()\n    let exampleRef = useRef()\n\n    const sentenceData = [\"id\", \"sentence\"]\n    let history = useHistory()\n\n\n    // Essential functionality\n    \n    const Submit = () => {\n        isSubmitted(true)\n        if (processedData && value) {\n            showCorrect(true)\n            \n            let request = { \"eval\": 1, \"response\": { \"pitch\": processedData, \"input\": value }, \"response_id\": trial.response_id }\n            submitResponse(request).then(({ nextTaskId, nextType, nextTrialId, nextResponseId }) => {\n\n            })\n            return \n        } else {\n            showIncorrect(true)\n            let request = { eval: 0, response: \"\", response_id: trial.response_id }\n            submitResponse(request)\n        }\n    }\n\n    const Next = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        setTrial(data)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Response submitted. Moving to next attempt in trial set.\")\n                        setTrial(data)\n                            } else {\n                                console.log(\"Something went wrong, and task was not refreshed.\")\n                            }\n                        }\n                    }\n                })\n            }\n    \n\n    \n    const Evaluate = ({ userResponse, target }) => {\n        // Do something, return true or false. There is no target here. \n        if ( target === undefined ) { // Undefined target means no target set\n            return true\n            } return true \n        }\n\n    // const submitResponse = () => {\n    //     if (processedData && value) {\n    //         showCorrect(true)\n            \n    //         let request = { eval: 1, response: {data: processedData}, response_id: trial.response_id }\n    //         submitResponse(request)\n    //         Next()\n    //         return \n    //     } else {\n    //         showIncorrect(true)\n    //         let request = { eval: 0, response: \"\", response_id: trial.response_id }\n    //         submitResponse(request)\n    //     }\n    // }\n    // Tool setting and binding\n    const handleChange = (e) => {\n        setValue(e.currentTarget.value)\n    }\n\n    const handleClose = () => {\n        showIncorrect(false)\n    }\n\n    const handleAudioChange = (data) => {\n        if (data === undefined) {\n            alert(\"Something went wrong with the recording. Please try again!\")\n            return\n        }\n        // Whenever a participant makes a recording.\n        const audio = data\n        const response_id = trial.response_id\n        const requestData = {\"audio\":audio, \"response_id\":response_id}\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(requestData).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            setProcessedData(pitchData) // Stages data for submission.\n            toggleLoading(false)});\n        }\n\n    // Essential functionality\n\n    const Clean = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        isSubmitted(false)\n        setAttempts(0)\n        setValue('')\n        setProcessedData(null)\n    }\n\n    \n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n\n            if (data.type === undefined) {\n                history.push('/done')\n            } \n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions\n            exampleRef ? exampleRef.current.textContent = data.text.example_text : console.log(\"Undefined element\")});\n\n    },[]);\n\n    useEffect( () => {\n        if (isSubmitted) {\n            Clean()\n        }\n\n        return \n    },[trial]);\n\n    return (\n            <div>\n                \n                <Paper className={classes.paper}>\n                <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <TaskFourInstructions/>\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography>\n           \n                    </Stack>\n                    <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                    </Typography>\n                                <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={3}spacing={5}>\n                                        <Item>{trial ? trial.sentence.sentence : \"Loading...\"} </Item>      \n                                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={5} xs={6}>\n                                  \n                \n                                        <Stack direction=\"column\">\n                                        {isLoading ? \n                                        <Paper id=\"response-data-container\" className={classes.chart} style={{display:\"flex\", alignContent: \"center\", alignContent:\"center\"}}>\n                                            <CircularProgress style={{display:\"relative\"}}/> \n                                        </Paper>\n                                        :\n                                        <Paper id=\"response-data-container\" className={classes.chart} style={{display:\"flex\", alignContent: \"center\", alignContent:\"center\"}}>\n                                            <PitchChart data={processedData}/>\n                                        </Paper>}\n                                            <Recorder alignSelf=\"flex-end\" sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                                        </Stack>\n                                        <Box alignSelf=\"flex-start\"\n                                            component=\"form\"\n                                            sx={{\n                                                '& .MuiTextField-root': { m: 1, width: '25ch' },\n                                            }}\n                                            noValidate\n                                            autoComplete=\"off\"\n                                            >\n                                        <TextField\n                                            id=\"filled-multiline-flexible\"\n                                            label=\"What did you do to sound polite?\"\n                                            multiline\n                                            maxRows={4}\n                                            value={value}\n                                            onChange={handleChange}\n                                            variant=\"filled\"\n                                            minWidth=\"300px\"\n                                            />\n                                            <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => {handleClose() }}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to explain your intonation choices.\n                        </Alert>\n                    </Collapse>\n                                    </Box>\n                                        <Button style={{alignSelf:\"flex-end\"}} variant=\"outlined\" onClick={() => {Evaluate({userResponse: {\"data\": processedData, \"text\": value }, target: trial.target}) ? Submit() : console.log(\"Failed evaluation. \")}} disabled={ trial ? attempts > trial.attempts : true }> Submit</Button> \n                                        <Button style={{alignSelf:\"flex-end\"}} variant=\"outlined\" onClick={() => {Next()}} disabled={!submitted}>Next</Button>\n                                    </Stack>\n                                    \n                                </Stack>\n                                \n                               \n                            </Stack>\n                            \n                    </Paper>\n                </div>\n        );\n    }\n\nexport default withRouter(ProductionGuidedTemplate)\n\nexport const TaskFourInstructions = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper style={{maxWidth:\"1100px\"}}>\n        <Box>\n                <Stack direction=\"column\">\n                \n                <Stack direction=\"row\">\n                Task 5. Speaking.\n                    \n                    </Stack>\n                    <Stack direction=\"row\">\n                    In this last task, you will record yourself saying requests, paying attention to the tone choices and prominence.                    </Stack>\n                    <Stack direction=\"row\">\n                    Repeat the sentence you see below. Remember to pay attention to your tone choices at the end of the sentence and your prominence (stressed words).\n\n                    </Stack>\n                    <Stack direction=\"row\">\n                    <b>Tone choices: </b>\n                    Remember that falling intonation is more polite and appropriate at the end of a request to a professor or an advisor.\n                    \n                    <b>Prominence</b> \n                    Remember to only stress contextually important words in the sentence (2-3 words maximum).\n\n                    </Stack>\n                    <Stack direction=\"row\">\n                    \n                    </Stack>\n                    <Stack direction=\"row\">\n                   \n                    </Stack>\n                    </Stack>\n                </Box>\n            </Paper>\n      </Backdrop>\n        </div>\n    )\n}","import React, {useState, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Player from '../elements/Player';\nimport Button from '@material-ui/core/Button'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport { getResponses, submitResponse } from '../utils/responseHelper';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport WordList from '../elements/WordList';\nimport Icon from '@mui/material/Icon'\nimport Instructions from './Instructions';\nimport remainingAttempts from '../utils/remainingAttempts';\nimport { maxWidth } from '@mui/system';\nimport Backdrop from '@mui/material/Backdrop';\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: { \n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n      paper: {\n        padding: theme.spacing(2),\n        \n        minWidth: '100vw',\n        height: '85vh',\n        display:\"flex\",\n        elevation: 3,\n        position: 'relative',\n        justifyContent: 'center'\n        \n      },\n  }));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n  \nconst PerceptionIdentificationProminenceTemplate = () => {\n    let [correct, showCorrect] = useState(false);\n    let [incorrect, showIncorrect] = useState(false);\n    let [force, showForcedForward] = useState(false)\n    let [trial, setTrial] = useState(null);\n    let [attempts, setAttempts] = useState(0)\n    let [words, setWords] = useState([])\n    let [submitted, isSubmitted] = useState(null)\n\n    let sentenceData = [\"id\",\"filepath\",\"prominent_words\"]\n    let history = useHistory()\n    let instructionRef = useRef()\n    let exampleRef = useRef()\n    \n\n    \n    \n\n    const classes = useStyles();\n\n    const getResponse = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        showForcedForward(false)\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)});\n    }\n\n    const Submit = () => {\n        \n        if (Evaluate()) {\n            let request = { \"eval\": 1, \"response\": { \"prominent_words\": words }, \"response_id\": trial.response_id }\n            \n            submitResponse(request).then(({ nextTaskId, nextType, nextTrialId, nextResponseId }) => {\n                isSubmitted(true)\n            })\n        } else {\n            let request = { \"eval\": 0, \"response\": { \"prominent_words\": words }, \"response_id\": trial.response_id }\n            \n            submitResponse(request).then((data) => {\n                if (attempts === trial.attempts) {\n                    showForcedForward(true)\n                } else {\n                    showIncorrect(true)\n                }\n                isSubmitted(true)\n            })\n        }\n    }\n\n    const Evaluate = () => {\n        setAttempts( attempts + 1 )\n\n        let target = new Set\n\n        words.forEach((e) => target.add(e.value))\n\n        let trial_target = new Set (trial.sentence.prominent_words.split(',')) \n        let a = new Set([...trial_target].filter(x => !target.has(x)));\n        let b = new Set([...target].filter(x => !trial_target.has(x)));\n\n        console.log(a.size && b.size)\n        if (!a.size && !b.size) {\n            showCorrect(true)\n            console.log(target)\n            return true;\n        } else {\n            showIncorrect(true)\n            return false;\n            }\n        };\n\n\n        \n    //     let request = { eval: 0, response: target, response_id: trial.response_id }\n    //     submitResponse(request).then((response)=> {\n    //         setAttempts( attempts + 1 )\n    //         const data = response.data;\n    //         if (attempts === data.attempts) {\n    //             showForcedForward(true)\n    //         } else {\n    //             showIncorrect(true)\n    //         }\n\n    //     })\n    // }\n\n    const Next = () => {\n        let request = sentenceData\n        getResponses(request).then((response) => {\n                    const data = response.data\n                    console.log(data)\n                    if (data.task_id != trial.task_id) {\n                        console.log(\"Task completed. Moving to next task\")\n                        history.push(`/${data.type}`)\n                    } else { if (data.trial_id != trial.trial_id) {\n                        console.log(\"Trial completed. Moving to next trial\")\n                        setTrial(data)\n                    } else { if (data.response_id != trial.response_id) {\n                        console.log(\"Response submitted. Moving to next attempt in trial set.\")\n                        setTrial(data)\n                            } else {\n                                console.log(\"Something went wrong, and task was not refreshed.\")\n                            }\n                        }\n                    }\n                })\n            }\n\n    const Clean = () => {\n        showCorrect(false)\n        showIncorrect(false)\n        isSubmitted(false)\n        setAttempts(0)\n        \n    }\n\n    useEffect( () => {\n        getResponses(sentenceData).then((response) => {\n            const data = response.data\n            setTrial(data)\n            instructionRef.current.textContent = data.text.instructions\n            exampleRef.current.textContent = data.text.example_text\n        });\n    },[]);\n\n    useEffect( () => {\n        if (isSubmitted) {\n            Clean()\n        }\n        return \n    },[trial]);\n///Change\n    return (\n        <div>\n            \n            \n            <Paper className={classes.paper}>\n                <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={5}>\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"baseline\" alignContent=\"center\" spacing={5}>\n                <TaskTwoInstructions/>\n                <Typography alignSelf={'flex-start'} marginRight={'50px'} variant='body1' component=\"h2\" gutterBottom xs={3}>\n                    {trial ?  \"Question: \" + trial.trial_id + \" | Attempts: \" + remainingAttempts(trial.response_id) : null }\n                </Typography>\n           \n                    </Stack>\n                    <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                      {trial ? trial.text.instructions_short : \"Loading...\"} \n                    </Typography>\n                <Player url={trial ? trial.sentence.filepath : null}/>\n                <Box style={{width: \"100%\"}}>\n                    <Collapse in={correct}>\n                        <Alert\n                        action={\n                            <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            >\n                            </IconButton>\n                        }\n                        sx={{ mb: 2 }}\n                        >\n                        Well done! Click next to continue.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={incorrect}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\" onClick={() => { Next()}}>\n                                <Icon>close</Icon>\n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        Try again! Remember to listen to the tone choice at the <u>end</u> of the word.\n                        </Alert>\n                    </Collapse>\n                    <Collapse in={force}>\n                        <Alert\n                        action={\n                            <IconButton aria-label=\"close\" color=\"error\" size=\"small\">\n                                \n                            </IconButton>\n                            }\n                        severity=\"error\"\n                        sx={{ mb: 2 }}\n                        >\n                        You've reached the maximum number of attempts. Click next to continue!\n                        </Alert>\n                    </Collapse>\n                </Box>\n                <Stack direction=\"row\" spacing={18} xs={12}>\n                    <WordList callback={Submit} wordList={words} setWordList={setWords} correct={correct} incorrect={incorrect} force={force}/>\n                </Stack>\n            </Stack>\n            <Button size=\"large\"variant=\"contained\" style={{alignSelf:\"flex-end\"}} onClick={() =>{Next()}}  disabled={!correct && !force}>Next</Button>\n        </Paper>\n        </div>\n    )\n}\n\n\nexport default withRouter(PerceptionIdentificationProminenceTemplate);\n\n\nexport const TaskTwoInstructions = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(true);\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleToggle = () => {\n      setOpen(!open);\n    };\n    \n    return (\n        <div>\n            <IconButton aria-label=\"close\" color=\"info\" size=\"small\" onClick={() => handleToggle()}>\n                            <Icon>help</Icon>\n                        </IconButton>\n            <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <Paper style={{maxWidth:\"1100px\", display:\"flex-box\"}}>\n        <Box>\n                <Stack direction=\"column\">\n                \n                <Stack direction=\"row\">\n                    Task 2. Listening.\n                    \n                    </Stack>\n                    <Stack direction=\"row\">\n                    In this task, you will listen to requests spoken with different intonation.\n                    </Stack>\n                    <Stack direction=\"row\">\n                    For each request, you will identify the prominent words.\n                    </Stack>\n                    <Stack direction=\"row\">\n                    Prominent words are those words that are stressed in a sentence. They are usually louder and a bit longer than the other words.\n                    </Stack>\n                    </Stack>\n                </Box>\n            </Paper>\n      </Backdrop>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\n\nconst End = (props) => {\n\n  const CreateTrial = (props) => {\n\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialized\n    \n  }\n  \n  // Entry point: \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Thank You!\n                </Typography>\n            </Grid>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(End);\n\n","import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport PerceptionTaskTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport ProductionControlledTemplate from './components/pages/ProductionControlledTemplate'\nimport ProductionReadingTaskTemplate from './components/pages/ProductionGuidedTemplate'\nimport PerceptionDiscriminationTemplate from './components/pages/PerceptionDiscriminationTemplate'\nimport PerceptionIdentificationTonesTemplate from './components/pages/PerceptionIdentificationTonesTemplate'\nimport PerceptionIdentificationProminenceTemplate from './components/pages/PerceptionIdentificationProminenceTemplate'\nimport End from './components/pages/End'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\nimport ProductionGuidedTemplate from './components/pages/ProductionGuidedTemplate'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/perception-identification-tones\" component={PerceptionIdentificationTonesTemplate} />\n            <Route exact path=\"/perception-discrimination\" component={PerceptionDiscriminationTemplate} />\n            <Route exact path=\"/perception-identification-prominence\" component={PerceptionIdentificationProminenceTemplate} />\n            <Route path=\"/production-controlled\" component={ProductionControlledTemplate} />\n            <Route path=\"/production-guided\" component={ProductionGuidedTemplate} />\n            <Route exact path=\"/done\" component={End} />\n          </Switch>\n        </MemoryRouter>\n      </div>\n    );\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}