{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \" Todo Item \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"title\",\n              value: this.state.activeItem.title,\n              onChange: this.handleChange,\n              placeholder: \"Enter Todo Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"description\",\n              value: this.state.activeItem.description,\n              onChange: this.handleChange,\n              placeholder: \"Enter Todo description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              for: \"completed\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: this.state.activeItem.completed,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 9\n              }, this), \"Completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => onSave(this.state.activeItem),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","title","description","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n\tButton,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tForm,\n\tFormGroup,\n\tInput,\n\tLabel\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveItem: this.props.activeItem\n\t\t};\n\t}\n\thandleChange = e => {\n\t\tlet { name, value } = e.target;\n\t\tif (e.target.type === \"checkbox\") {\n\t\t\tvalue = e.target.checked;\n\t\t}\n\t\tconst activeItem = { ...this.state.activeItem, [name]: value };\n\t\tthis.setState({ activeItem });\n\t};\n\t\n\trender() {\n\t\tconst { toggle, onSave } = this.props;\n\t\treturn (\n\t\t\t<Modal isOpen={true} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"title\">Title</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\tvalue={this.state.activeItem.title}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Todo Title\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"description\">Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tvalue={this.state.activeItem.description}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Todo description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup check>\n\t\t\t\t\t\t\t<Label for=\"completed\">\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tname=\"completed\"\n\t\t\t\t\t\t\t\t\tchecked={this.state.activeItem.completed}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n\t\t\t\t\t\tSave\n              \t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}