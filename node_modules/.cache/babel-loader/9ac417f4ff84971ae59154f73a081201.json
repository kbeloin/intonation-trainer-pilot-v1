{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/SoundChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoundChart(props) {\n  _s();\n\n  const [data, setData] = useState(props.data);\n  const [current, setCurrent] = useState();\n  const chartRef = useRef();\n  useEffect(useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n  }));\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myChart\",\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SoundChart, \"VPLtGRTt2Coge6kApXBmiTHMuII=\");\n\n_c = SoundChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoundChart\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/SoundChart.js"],"names":["React","useState","useEffect","useRef","Line","SoundChart","props","data","setData","current","setCurrent","chartRef","ctx","getContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAK,CAACC,IAAP,CAAhC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAMU,QAAQ,GAAGR,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAACA,SAAS,CAAC,MAAI;AACpB,UAAMU,GAAG,GAAGD,QAAQ,CAACF,OAAT,CAAiBI,UAAjB,CAA4B,IAA5B,CAAZ;AAEH,GAHkB,CAAV,CAAT;AAMA,sBAEI;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,GAAG,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAKH;;GAhBuBN,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nexport default function SoundChart(props) {\n    const [data, setData] = useState(props.data)\n    const [current, setCurrent] = useState()\n    const chartRef = useRef()\n\n    useEffect(useEffect(()=>{\n        const ctx = chartRef.current.getContext('2d')\n\n    }))\n    \n\n    return (\n\n        <canvas id=\"myChart\" ref={chartRef}></canvas>\n    \n    )\n}\n"]},"metadata":{},"sourceType":"module"}