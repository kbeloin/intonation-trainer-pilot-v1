{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { render } from \"react-dom\";\nimport useRecorder from \"../utils/useRecorder\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recorder = props => {\n  _s();\n\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  let audioRef = useRef();\n  const audio = audioRef.current;\n  const currentAudio = audio ? audio.addEventListener('canplaythrough', event => {\n    if (rawData) {\n      props.sets(rawData);\n    }\n\n    ;\n  }) : console.log(\"No current audio.\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    id: \"recorder\",\n    ref: props.forwardedRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioURL,\n        ref: audioRef,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startRecording,\n        disabled: isRecording,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stopRecording,\n        disabled: !isRecording,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recorder, \"tevX4B3W48O3YnghCIFtF8kuDx8=\", false, function () {\n  return [useRecorder];\n});\n\n_c = Recorder;\nexport default Recorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useRef","render","useRecorder","axios","Button","Container","Grid","makeStyles","Recorder","props","audioURL","isRecording","startRecording","stopRecording","rawData","audioRef","audio","current","currentAudio","addEventListener","event","sets","console","log","forwardedRef"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,MAAnB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,MAAI,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,OAAvD,IAAkEZ,WAAW,EAAjF;AACA,MAAIa,QAAQ,GAAGf,MAAM,EAArB;AAEA,QAAMgB,KAAK,GAAGD,QAAQ,CAACE,OAAvB;AAEA,QAAMC,YAAY,GAAGF,KAAK,GAAGA,KAAK,CAACG,gBAAN,CAAuB,gBAAvB,EAA0CC,KAAD,IAAW;AAC/E,QAAIN,OAAJ,EAAa;AAACL,MAAAA,KAAK,CAACY,IAAN,CAAWP,OAAX;AAAoB;;AAAA;AAEnC,GAH4B,CAAH,GAGrBQ,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAHL;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,UAA7B;AAAwC,IAAA,GAAG,EAAEd,KAAK,CAACe,YAAnD;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE;AAAO,QAAA,GAAG,EAAEd,QAAZ;AAAsB,QAAA,GAAG,EAAEK,QAA3B;AAAqC,QAAA,QAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,cAAjB;AAAiC,QAAA,QAAQ,EAAED,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,aAAjB;AAAgC,QAAA,QAAQ,EAAE,CAACF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;GAAMH,Q;UACkEN,W;;;KADlEM,Q;AAyBN,eAAeA,QAAf","sourcesContent":["\nimport { useState, useRef } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"../utils/useRecorder\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  let audioRef = useRef()\n  \n  const audio = audioRef.current\n\n  const currentAudio = audio ? audio.addEventListener('canplaythrough', (event) => {\n    if (rawData) {props.sets(rawData)};\n    \n  }) : console.log(\"No current audio.\");\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} ref={audioRef} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}