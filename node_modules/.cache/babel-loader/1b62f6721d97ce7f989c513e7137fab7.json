{"ast":null,"code":"import { getCSRF } from './csrfHelper.js';\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nexport const processAudioData = async data => {\n  axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};\nexport const processAudioData2 = async data => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js"],"names":["getCSRF","axios","defaults","xsrfCookieName","xsrfHeaderName","processAudioData","data","method","url","headers","transformRequest","JSON","stringify","transformResponse","parse","response","processAudioData2"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AAC5CL,EAAAA,KAAK,CAAC;AACFM,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,GAAG,EAAE,eAFH;AAGFF,IAAAA,IAAI,EAAEA,IAHJ;AAIFG,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJP;AAKFC,IAAAA,gBAAgB,EAAE,CAAEJ,IAAD,IAAU;AACzB,aAAOK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAP;AACH,KAFiB,CALhB;AAQFO,IAAAA,iBAAiB,EAAE,CAAEP,IAAD,IAAU;AAC1B,aAAOK,IAAI,CAACG,KAAL,CAAWR,IAAX,CAAP;AACH,KAFkB;AARjB,GAAD,CAAL;AAYA,SAAOS,QAAP;AACH,CAdM;AAgBP,OAAO,MAAMC,iBAAiB,GAAG,MAAOV,IAAP,IAAgB;AAC7C,QAAMS,QAAQ,GAAG,MAAMd,KAAK,CAAC;AACzBM,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAE,eAFoB;AAGzBF,IAAAA,IAAI,EAAEA,IAHmB;AAIzBG,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJgB;AAKzBC,IAAAA,gBAAgB,EAAE,CAAEJ,IAAD,IAAU;AACzB,aAAOK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAP;AACH,KAFiB,CALO;AAQzBO,IAAAA,iBAAiB,EAAE,CAAEP,IAAD,IAAU;AAC1B,aAAOK,IAAI,CAACG,KAAL,CAAWR,IAAX,CAAP;AACH,KAFkB;AARM,GAAD,CAA5B;AAYA,SAAOS,QAAP;AACH,CAdM","sourcesContent":["import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const processAudioData2 = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}"]},"metadata":{},"sourceType":"module"}