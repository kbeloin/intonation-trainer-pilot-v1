{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/SoundChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst data = canvas => {\n  var ctx = canvas.getContext('2d');\n\n  if (data !== undefined) {}\n\n  return {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [{\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }],\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  };\n};\n\nexport default function SoundChart(props) {\n  _s();\n\n  const [data, setData] = useState(props.data);\n  const [current, setCurrent] = useState();\n  const chartRef = useRef();\n\n  const updateData = canvas => {\n    console.log(canvas);\n\n    if (canvas !== undefined) {\n      var ctx = canvas.getContext('2d');\n      return {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }],\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      };\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Triggered Refresh\");\n    updateData(chartRef.current);\n    setCurrent(data);\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SoundChart, \"/AVmcOoF33c4ZeAYEU1yZwMUyFA=\");\n\n_c = SoundChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoundChart\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/SoundChart.js"],"names":["React","useState","useEffect","useRef","Line","data","canvas","ctx","getContext","undefined","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","SoundChart","props","setData","current","setCurrent","chartRef","updateData","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst data = (canvas) => {\n    var ctx = canvas.getContext('2d')\n    if (data !== undefined){\n        \n    }\n    return {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n                }],\n            options: {\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            }\n        }\n    };\n\nexport default function SoundChart(props) {\n    const [data, setData] = useState(props.data)\n    const [current, setCurrent] = useState()\n    const chartRef = useRef()\n\n    const updateData = (canvas) => {\n        console.log(canvas)\n    if (canvas !== undefined){\n        var ctx = canvas.getContext('2d')\n        return {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n                label: '# of Votes',\n                data: [12, 19, 3, 5, 2, 3],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n                }],\n            options: {\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            }\n        }\n    }\n    \n    }\n\n    useEffect(() => {\n        console.log(\"Triggered Refresh\")\n        updateData(chartRef.current)\n        setCurrent(data)\n    }, [props.data])\n\n    \n    return (\n        <div> \n            {  }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}