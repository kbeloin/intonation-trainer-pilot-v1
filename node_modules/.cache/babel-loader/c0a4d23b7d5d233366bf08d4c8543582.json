{"ast":null,"code":"import _slicedToArray from\"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{render}from\"react-dom\";import useRecorder from\"./useRecorder\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';var handleChange=function handleChange(d){if(d){console.log(d);axios// Because of proxy in package.json, command be shorten as follows:\n// .post(\"http://localhost:8000/api/todos/\", item)\n.post(\"/api/process/\",d).then(function(res){return console.log(res);});return;}console.log(d);};var Recorder=function Recorder(props){var _useRecorder=useRecorder(),_useRecorder2=_slicedToArray(_useRecorder,4),audioURL=_useRecorder2[0],isRecording=_useRecorder2[1],startRecording=_useRecorder2[2],stopRecording=_useRecorder2[3];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"Recorder\",id:\"recorder\",ref:props.forwardedRef,children:[/*#__PURE__*/_jsx(\"audio\",{src:audioURL,controls:true}),/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:isRecording,children:\"start recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,disabled:!isRecording,children:\"stop recording\"})]});};export default Recorder;","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useEffect","render","useRecorder","axios","defaults","xsrfCookieName","xsrfHeaderName","handleChange","d","console","log","post","then","res","Recorder","props","audioURL","isRecording","startRecording","stopRecording","data","setData","forwardedRef"],"mappings":"sLACA,OAASA,QAAT,CAAmBC,SAAnB,KAAqC,OAArC,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,CAAgC,WAAhC,CACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,CAAgC,aAAhC,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAE1B,GAAIA,CAAJ,CAAQ,CACNC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAL,KACE;AACA;AAFG,CAGFQ,IAHH,CAGQ,eAHR,CAGyBH,CAHzB,EAIGI,IAJH,CAIQ,SAAAC,GAAG,QAAIJ,CAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ,EAJX,EAKE,OACH,CACDJ,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACD,CAZD,CAcA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,kBACmCb,WAAW,EAD9C,8CACrBc,QADqB,kBACXC,WADW,kBACEC,cADF,kBACkBC,aADlB,gCAEFpB,QAAQ,CAAC,IAAD,CAFN,wCAEnBqB,IAFmB,eAEbC,OAFa,eAI1B,mBACE,aAAK,SAAS,CAAC,UAAf,CAA0B,EAAE,CAAC,UAA7B,CAAwC,GAAG,CAAEN,KAAK,CAACO,YAAnD,wBACE,cAAO,GAAG,CAAEN,QAAZ,CAAsB,QAAQ,KAA9B,EADF,cAEE,eAAQ,OAAO,CAAEE,cAAjB,CAAiC,QAAQ,CAAED,WAA3C,6BAFF,cAKE,eAAQ,OAAO,CAAEE,aAAjB,CAAgC,QAAQ,CAAE,CAACF,WAA3C,4BALF,GADF,CAWD,CAfD,CAgBA,cAAeH,CAAAA,QAAf","sourcesContent":["\nimport { useState, useEffect } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\nconst handleChange = (d) => {\n  \n  if (d ) {\n    console.log(d)\n    axios\n      // Because of proxy in package.json, command be shorten as follows:\n      // .post(\"http://localhost:8000/api/todos/\", item)\n      .post(\"/api/process/\", d)\n      .then(res => console.log(res));\n      return;\n  }\n  console.log(d)\n}\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  const [data, setData] = useState(null)\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n      <audio src={audioURL} controls/>\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}