{"ast":null,"code":"import _slicedToArray from\"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{render}from\"react-dom\";import useRecorder from\"./useRecorder\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';var Recorder=function Recorder(props){var _useRecorder=useRecorder(),_useRecorder2=_slicedToArray(_useRecorder,5),audioURL=_useRecorder2[0],isRecording=_useRecorder2[1],startRecording=_useRecorder2[2],stopRecording=_useRecorder2[3],rawData=_useRecorder2[4];return/*#__PURE__*/_jsxs(\"div\",{className:\"Recorder\",id:\"recorder\",ref:props.forwardedRef,children:[/*#__PURE__*/_jsx(\"audio\",{src:audioURL,controls:true}),/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:isRecording,children:\"start recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){stopRecording,props.set(rawData);},disabled:!isRecording,children:\"stop recording\"})]});};export default Recorder;","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useEffect","render","useRecorder","axios","defaults","xsrfCookieName","xsrfHeaderName","Recorder","props","audioURL","isRecording","startRecording","stopRecording","rawData","forwardedRef","set"],"mappings":"sLACA,OAASA,QAAT,CAAmBC,SAAnB,KAAqC,OAArC,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,CAAgC,WAAhC,CACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,CAAgC,aAAhC,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,kBAC4CN,WAAW,EADvD,8CACrBO,QADqB,kBACXC,WADW,kBACEC,cADF,kBACkBC,aADlB,kBACiCC,OADjC,kBAG1B,mBACE,aAAK,SAAS,CAAC,UAAf,CAA0B,EAAE,CAAC,UAA7B,CAAwC,GAAG,CAAEL,KAAK,CAACM,YAAnD,wBACE,cAAO,GAAG,CAAEL,QAAZ,CAAsB,QAAQ,KAA9B,EADF,cAEE,eAAQ,OAAO,CAAEE,cAAjB,CAAiC,QAAQ,CAAED,WAA3C,6BAFF,cAKE,eAAQ,OAAO,CAAE,kBAAM,CAACE,aAAa,CAACJ,KAAK,CAACO,GAAN,CAAUF,OAAV,CAAd,CAAiC,CAAzD,CAA2D,QAAQ,CAAE,CAACH,WAAtE,4BALF,GADF,CAWD,CAdD,CAeA,cAAeH,CAAAA,QAAf","sourcesContent":["\nimport { useState, useEffect } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n      <audio src={audioURL} controls/>\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={() => {stopRecording,props.set(rawData)}} disabled={!isRecording}>\n        stop recording\n      </button>\n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}