{"ast":null,"code":"import { getCSRF } from './csrfHelper.js';\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nexport const processAudioData = async data => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};\nexport const processAudioData2 = async data => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      console.log(data); //Transform the response data as you prefer\n\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js"],"names":["getCSRF","axios","defaults","xsrfCookieName","xsrfHeaderName","processAudioData","data","response","method","url","headers","transformRequest","JSON","stringify","transformResponse","parse","processAudioData2","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AAC5C,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACzBO,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAE,eAFoB;AAGzBH,IAAAA,IAAI,EAAEA,IAHmB;AAIzBI,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJgB;AAKzBC,IAAAA,gBAAgB,EAAE,CAAEL,IAAD,IAAU;AACzB,aAAOM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAP;AACH,KAFiB,CALO;AAQzBQ,IAAAA,iBAAiB,EAAE,CAAER,IAAD,IAAU;AAC1B,aAAOM,IAAI,CAACG,KAAL,CAAWT,IAAX,CAAP;AACH,KAFkB;AARM,GAAD,CAA5B;AAYA,SAAOC,QAAP;AACH,CAdM;AAgBP,OAAO,MAAMS,iBAAiB,GAAG,MAAOV,IAAP,IAAgB;AAC7C,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACzBO,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAE,eAFoB;AAGzBH,IAAAA,IAAI,EAAEA,IAHmB;AAIzBI,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJgB;AAKzBC,IAAAA,gBAAgB,EAAE,CAAEL,IAAD,IAAU;AACzB,aAAOM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAP;AACH,KAFiB,CALO;AAQzBQ,IAAAA,iBAAiB,EAAE,CAAER,IAAD,IAAU;AAC1BW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EAD0B,CACR;;AAClB,aAAOM,IAAI,CAACG,KAAL,CAAWT,IAAX,CAAP;AACH,KAHkB;AARM,GAAD,CAA5B;AAaA,SAAOC,QAAP;AACH,CAfM","sourcesContent":["import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const processAudioData2 = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            console.log(data) //Transform the response data as you prefer\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}"]},"metadata":{},"sourceType":"module"}