{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst handleChange = d => {\n  if (d) {\n    console.log(d);\n    axios // Because of proxy in package.json, command be shorten as follows:\n    // .post(\"http://localhost:8000/api/todos/\", item)\n    .post(\"/api/process/\", d).then(res => console.log(res));\n    return;\n  }\n\n  console.log(d);\n};\n\nconst Recorder = props => {\n  _s();\n\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  const [data, setData] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    id: \"recorder\",\n    ref: props.forwardedRef,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: isRecording,\n      children: \"start recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !isRecording,\n      children: \"stop recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recorder, \"D30uZKmHiZM7ll/0lujx9nhi2lU=\", false, function () {\n  return [useRecorder];\n});\n\n_c = Recorder;\nexport default Recorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useEffect","render","useRecorder","axios","defaults","xsrfCookieName","xsrfHeaderName","handleChange","d","console","log","post","then","res","Recorder","props","audioURL","isRecording","startRecording","stopRecording","data","setData","forwardedRef"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AACA,MAAMC,YAAY,GAAIC,CAAD,IAAO;AAE1B,MAAIA,CAAJ,EAAQ;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAL,IAAAA,KAAK,CACH;AACA;AAFG,KAGFQ,IAHH,CAGQ,eAHR,EAGyBH,CAHzB,EAIGI,IAJH,CAIQC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAJf;AAKE;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,CAZD;;AAcA,MAAMM,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,MAAI,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,IAAyDjB,WAAW,EAAxE;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,UAA7B;AAAwC,IAAA,GAAG,EAAEgB,KAAK,CAACO,YAAnD;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEN,QAAZ;AAAsB,MAAA,QAAQ;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAiC,MAAA,QAAQ,EAAED,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAgC,MAAA,QAAQ,EAAE,CAACF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAfD;;GAAMH,Q;UACyDZ,W;;;KADzDY,Q;AAgBN,eAAeA,QAAf","sourcesContent":["\nimport { useState, useEffect } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\nconst handleChange = (d) => {\n  \n  if (d ) {\n    console.log(d)\n    axios\n      // Because of proxy in package.json, command be shorten as follows:\n      // .post(\"http://localhost:8000/api/todos/\", item)\n      .post(\"/api/process/\", d)\n      .then(res => console.log(res));\n      return;\n  }\n  console.log(d)\n}\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  const [data, setData] = useState(null)\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n      <audio src={audioURL} controls/>\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}