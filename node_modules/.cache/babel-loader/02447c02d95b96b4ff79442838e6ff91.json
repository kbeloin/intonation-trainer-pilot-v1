{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js';\nimport Player from './Player.js';\nimport axios from 'axios';\nimport { processAudioData } from '../utils/processAudio.js';\nimport { submitResponse } from '../utils/submitResponse.js';\nimport { getPitchScatterData, resetCanvas, newPitchChart, newCanvas } from './SoundChart.js';\nimport { getCSRF } from '../utils/csrfHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userResponse = {\n  attempts: 0,\n  started: null\n};\nconst useStyles = makeStyles(theme => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    flexDirection: \"row\",\n    minWidth: '100vw',\n    minHeight: '80vh',\n    display: \"flex-box\",\n    elevation: 3,\n    alignItems: \"center\"\n  },\n  container: {\n    position: 'relative',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  button: {\n    position: 'absolute',\n    bottom: '0',\n    right: '0'\n  },\n  grid: {\n    height: \"50%\",\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"100%\"\n  },\n  chart: {\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"40%\",\n    marginBottom: \"1vh\",\n    minWidth: \"35vw\"\n  }\n}));\n\nconst ProdTask = props => {\n  _s();\n\n  const classes = useStyles();\n  let [processedData, setProcessedData] = useState(null);\n  let [taskData, setTaskData] = useState(null);\n  let [chartA, setChartA] = useState();\n  let [chartB, setChartB] = useState();\n  let responseDataRef = useRef(null);\n  let questionDataRef = useRef(null);\n\n  let handleAudioChange = data => {\n    let newCanvas = resetCanvas('response-data', 'response-data-container', chartB);\n    processAudioData(data).then(response => {\n      let pitchData = getPitchScatterData(response.data);\n      setChartB(newPitchChart(newCanvas, pitchData, chartB)); // Destroys chart / resets element\n\n      setProcessedData(pitchData);\n    });\n  };\n\n  let nextTask = () => {\n    let response = {\n      'taskData': taskData,\n      'responseData': processedData\n    };\n    submitResponse();\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API (next action... taskType determines the element to show)\n    if (processedData === null) {\n      console.log(\"No changes recorded\");\n    } else {\n      console.log(\"Processed data changed:\", processedData);\n    }\n  }, [processedData]);\n  useEffect(() => {\n    setChartA(newPitchChart(questionDataRef.current, []));\n    setChartB(newPitchChart(responseDataRef.current, []));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            id: \"question-data-container\",\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"question-data\",\n              ref: questionDataRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Player, {\n            url: \"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            id: \"response-data-container\",\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"response-data\",\n              ref: responseDataRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Recorder, {\n            sets: handleAudioChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: nextTask,\n            children: \"Welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProdTask, \"Z3aU1W+ixmkY5bQ3n8j7qkuWb/o=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProdTask;\nexport default _c2 = withRouter(ProdTask);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProdTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js"],"names":["React","useState","useEffect","useRef","makeStyles","Grid","Paper","Button","Typography","withRouter","NavLink","Recorder","Player","axios","processAudioData","submitResponse","getPitchScatterData","resetCanvas","newPitchChart","newCanvas","getCSRF","userResponse","attempts","started","useStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","button","bottom","right","grid","direction","chart","marginBottom","ProdTask","props","classes","processedData","setProcessedData","taskData","setTaskData","chartA","setChartA","chartB","setChartB","responseDataRef","questionDataRef","handleAudioChange","data","then","response","pitchData","nextTask","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,mBAAT,EAA8BC,WAA9B,EAA2CC,aAA3C,EAA0DC,SAA1D,QAA2E,iBAA3E;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,QAAQ,EAAE,CADM;AAEhBC,EAAAA,OAAO,EAAE;AAFO,CAApB;AAKA,MAAMC,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,OAAO,EAAE;AAFF,GAD8B;AAKrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,QAAQ,EAAE,OAHP;AAIHC,IAAAA,SAAS,EAAE,MAJR;AAKHN,IAAAA,OAAO,EAAC,UALL;AAMHO,IAAAA,SAAS,EAAE,CANR;AAOHC,IAAAA,UAAU,EAAC;AAPR,GAL8B;AAcrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPZ,IAAAA,cAAc,EAAE;AAHT,GAd0B;AAmBrCa,EAAAA,MAAM,EAAE;AACJF,IAAAA,QAAQ,EAAE,UADN;AAEJG,IAAAA,MAAM,EAAC,GAFH;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAnB6B;AAwBrCC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,MAAM,EAAE,KADN;AAEFZ,IAAAA,cAAc,EAAC,cAFb;AAGFI,IAAAA,OAAO,EAAC,GAHN;AAIFK,IAAAA,UAAU,EAAC,UAJT;AAKFQ,IAAAA,SAAS,EAAC,QALR;AAMFV,IAAAA,SAAS,EAAC;AANR,GAxB+B;AAiCrCW,EAAAA,KAAK,EAAE;AACHlB,IAAAA,cAAc,EAAC,cADZ;AAEHI,IAAAA,OAAO,EAAC,GAFL;AAGHK,IAAAA,UAAU,EAAC,UAHR;AAIHQ,IAAAA,SAAS,EAAC,QAJP;AAKHV,IAAAA,SAAS,EAAC,KALP;AAMHY,IAAAA,YAAY,EAAE,KANX;AAOHb,IAAAA,QAAQ,EAAC;AAPN;AAjC8B,CAAZ,CAAD,CAA5B;;AA4CA,MAAMc,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AACA,MAAI,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoClD,QAAQ,CAAC,IAAD,CAAhD;AACA,MAAI,CAACmD,QAAD,EAAWC,WAAX,IAA0BpD,QAAQ,CAAC,IAAD,CAAtC;AAEA,MAAI,CAACqD,MAAD,EAASC,SAAT,IAAsBtD,QAAQ,EAAlC;AACA,MAAI,CAACuD,MAAD,EAASC,SAAT,IAAsBxD,QAAQ,EAAlC;AAEA,MAAIyD,eAAe,GAAGvD,MAAM,CAAC,IAAD,CAA5B;AACA,MAAIwD,eAAe,GAAGxD,MAAM,CAAC,IAAD,CAA5B;;AAEA,MAAIyD,iBAAiB,GAAIC,IAAD,IAAU;AAC9B,QAAI1C,SAAS,GAAGF,WAAW,CAAC,eAAD,EAAkB,yBAAlB,EAA6CuC,MAA7C,CAA3B;AACA1C,IAAAA,gBAAgB,CAAC+C,IAAD,CAAhB,CAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACtC,UAAIC,SAAS,GAAGhD,mBAAmB,CAAC+C,QAAQ,CAACF,IAAV,CAAnC;AACAJ,MAAAA,SAAS,CAACvC,aAAa,CAACC,SAAD,EAAY6C,SAAZ,EAAuBR,MAAvB,CAAd,CAAT,CAFsC,CAEiB;;AACvDL,MAAAA,gBAAgB,CAACa,SAAD,CAAhB;AACF,KAJF;AAKH,GAPD;;AASA,MAAIC,QAAQ,GAAG,MAAM;AAEjB,QAAIF,QAAQ,GAAG;AAAE,kBAAYX,QAAd;AAAwB,sBAAgBF;AAAxC,KAAf;AACAnC,IAAAA,cAAc;AACjB,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIgD,aAAa,KAAK,IAAtB,EAA4B;AACxBgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAFD,MAEO;AACPD,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCjB,aAAvC;AAAsD;AACrD,GANI,EAMH,CAACA,aAAD,CANG,CAAT;AAQAhD,EAAAA,SAAS,CAAC,MAAM;AACZqD,IAAAA,SAAS,CAACrC,aAAa,CAACyC,eAAe,CAACS,OAAjB,EAA0B,EAA1B,CAAd,CAAT;AACAX,IAAAA,SAAS,CAACvC,aAAa,CAACwC,eAAe,CAACU,OAAjB,EAA0B,EAA1B,CAAd,CAAT;AACH,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACvB,OAAxB;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEuB,OAAO,CAACpB,KAA1B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEoB,OAAO,CAACN,IAAnC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,yBAAV;AAAoC,YAAA,SAAS,EAAEM,OAAO,CAACJ,KAAvD;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAC,eAAX;AAA2B,cAAA,GAAG,EAAEc;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,yBAAV;AAAoC,YAAA,SAAS,EAAEV,OAAO,CAACJ,KAAvD;AAAA,mCACI;AAAQ,cAAA,EAAE,EAAC,eAAX;AAA2B,cAAA,GAAG,EAAEa;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAaI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,OAAO,EAAEK,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBC,CA9DL;;GAAMlB,Q;UACcvB,S;;;KADduB,Q;AAgEN,qBAAetC,UAAU,CAACsC,QAAD,CAAzB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js'\nimport Player from './Player.js';\nimport axios from 'axios';\nimport { processAudioData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/submitResponse.js'\nimport { getPitchScatterData, resetCanvas, newPitchChart, newCanvas } from './SoundChart.js';\nimport { getCSRF } from '../utils/csrfHelper'\n\nconst userResponse ={\n    attempts: 0,\n    started: null\n}\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst ProdTask = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState(null)\n    let [taskData, setTaskData] = useState(null)\n\n    let [chartA, setChartA] = useState()\n    let [chartB, setChartB] = useState()\n\n    let responseDataRef = useRef(null);\n    let questionDataRef = useRef(null);\n    \n    let handleAudioChange = (data) => {\n        let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        processAudioData(data).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n         })\n    }\n\n    let nextTask = () => {\n\n        let response = { 'taskData': taskData, 'responseData': processedData }\n        submitResponse()\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) { \n            console.log(\"No changes recorded\") \n        } else {\n        console.log(\"Processed data changed:\", processedData)}\n        },[processedData]);\n\n    useEffect(() => {\n        setChartA(newPitchChart(questionDataRef.current, []))\n        setChartB(newPitchChart(responseDataRef.current, []))\n    },[]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                            <canvas id=\"question-data\" ref={questionDataRef}></canvas>\n                        </Paper>\n                        <Player url={\"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"}></Player>\n                    </Grid>\n                    <Grid item>\n                        <Paper id=\"response-data-container\" className={classes.chart}>\n                            <canvas id=\"response-data\" ref={responseDataRef}></canvas>\n                        </Paper>\n                        <Recorder sets={handleAudioChange} />\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={nextTask}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(ProdTask)\n"]},"metadata":{},"sourceType":"module"}