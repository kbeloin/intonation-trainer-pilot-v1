{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst Recorder = props => {\n  _s();\n\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (data) {\n      axios // Because of proxy in package.json, command be shorten as follows:\n      // .post(\"http://localhost:8000/api/todos/\", item)\n      .post(\"/api/process/\", data).then(res => console.log(res));\n      return;\n    }\n\n    return 'No reponse';\n  });\n\n  const handleChange = d => {\n    if (d === data) {\n      return;\n    }\n\n    setData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: isRecording,\n      children: \"start recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !isRecording,\n      children: \"stop recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setData('true'),\n      disabled: false,\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recorder, \"9zebywHG4qDSX1YrXS76bOx1ApQ=\", false, function () {\n  return [useRecorder];\n});\n\n_c = Recorder;\nexport default Recorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useEffect","render","useRecorder","axios","defaults","xsrfCookieName","xsrfHeaderName","Recorder","props","audioURL","isRecording","startRecording","stopRecording","data","setData","post","then","res","console","log","handleChange","d"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAqC,OAArC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,MAAI,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,IAAyDV,WAAW,EAAxE;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIa,IAAJ,EAAU;AACRV,MAAAA,KAAK,CACL;AACA;AAFK,OAGJY,IAHD,CAGM,eAHN,EAGuBF,IAHvB,EAICG,IAJD,CAIMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJb;AAKA;AACD;;AACD,WAAO,YAAP;AACD,GAXQ,CAAT;;AAaA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAE1B,QAAIA,CAAC,KAAKR,IAAV,EAAgB;AACd;AACD;;AACDC,IAAAA,OAAO;AAGR,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEL,QAAZ;AAAsB,MAAA,QAAQ;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAiC,MAAA,QAAQ,EAAED,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAgC,MAAA,QAAQ,EAAE,CAACF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAQ,MAAA,OAAO,EAAEI,OAAO,CAAC,MAAD,CAAxB;AAAkC,MAAA,QAAQ,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMP,Q;UACyDL,W;;;KADzDK,Q;AA0CN,eAAeA,QAAf","sourcesContent":["\nimport { useState, useEffect } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (data) {\n      axios\n      // Because of proxy in package.json, command be shorten as follows:\n      // .post(\"http://localhost:8000/api/todos/\", item)\n      .post(\"/api/process/\", data)\n      .then(res => console.log(res));\n      return;\n    }\n    return 'No reponse';\n  });\n\n  const handleChange = (d) => {\n  \n    if (d === data) {\n      return\n    }\n    setData\n\n\n  }\n\n  return (\n    <div className=\"Recorder\">\n      <audio src={audioURL} controls/>\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n      <button onClick={setData('true')} disabled={false}>\n        send\n      </button>\n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}