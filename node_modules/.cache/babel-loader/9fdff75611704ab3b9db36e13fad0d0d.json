{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst handleSubmit = item => {\n  if (item) {\n    axios // Because of proxy in package.json, command be shorten as follows:\n    // .post(\"http://localhost:8000/api/todos/\", item)\n    .post(\"/api/process/\", item).then(res => console.log(res));\n    return;\n  }\n\n  return 'No reponse';\n};\n\nconst Recorder = props => {\n  _s();\n\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioURL,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: isRecording,\n      children: \"start recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !isRecording,\n      children: \"stop recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit(audioURL),\n      disabled: !audioURL,\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recorder, \"Z92ebfvrXASBHW4BkreIU9UQ3KM=\", false, function () {\n  return [useRecorder];\n});\n\n_c = Recorder;\nexport default Recorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["render","useRecorder","axios","defaults","xsrfCookieName","xsrfHeaderName","handleSubmit","item","post","then","res","console","log","Recorder","props","audioURL","isRecording","startRecording","stopRecording"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AACA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,MAAIA,IAAJ,EAAU;AACRL,IAAAA,KAAK,CACL;AACA;AAFK,KAGJM,IAHD,CAGM,eAHN,EAGuBD,IAHvB,EAICE,IAJD,CAIMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJb;AAKA;AACD;;AACD,SAAO,YAAP;AACD,CAVD;;AAaA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,MAAI,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,EAAwCC,aAAxC,IAAyDjB,WAAW,EAAxE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEc,QAAZ;AAAsB,MAAA,QAAQ;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAiC,MAAA,QAAQ,EAAED,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAgC,MAAA,QAAQ,EAAE,CAACF,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAQ,MAAA,OAAO,EAAEV,YAAY,CAACS,QAAD,CAA7B;AAAyC,MAAA,QAAQ,EAAE,CAACA,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMF,Q;UACyDZ,W;;;KADzDY,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\nconst handleSubmit = (item) => {\n  if (item) {\n    axios\n    // Because of proxy in package.json, command be shorten as follows:\n    // .post(\"http://localhost:8000/api/todos/\", item)\n    .post(\"/api/process/\", item)\n    .then(res => console.log(res));\n    return;\n  }\n  return 'No reponse'\n};\n\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording] = useRecorder();\n  return (\n    <div className=\"Recorder\">\n      <audio src={audioURL} controls/>\n      <button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </button>\n      <button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </button>\n      <button onClick={handleSubmit(audioURL)} disabled={!audioURL}>\n        send\n      </button>\n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}