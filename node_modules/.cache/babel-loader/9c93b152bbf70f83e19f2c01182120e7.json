{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nconst useStyles = makeStyles(theme => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    flexDirection: \"column\",\n    minWidth: '100vw',\n    minHeight: '80vh',\n    display: \"flex\",\n    elevation: 3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  container: {\n    position: 'relative',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  grid: {\n    justifyContent: \"space-evenly\",\n    spacing: \"2\"\n  }\n}));\n\nconst Recorder = props => {\n  _s();\n\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  let audioRef = useRef();\n  const classes = useStyles();\n  const audio = audioRef.current; // const handlestop = props.sets(rawData)\n\n  const currentAudio = audio ? audio.addEventListener('canplaythrough', event => {\n    if (rawData) {\n      props.sets(rawData);\n    }\n\n    ;\n    return;\n  }) : \"NONE\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Recorder\",\n    id: \"recorder\",\n    ref: props.forwardedRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      contaimer: true,\n      className: classes.grid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Player\",\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: \"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startRecording,\n        disabled: isRecording,\n        children: \"start recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stopRecording,\n        disabled: !isRecording,\n        children: \"stop recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioURL,\n        ref: audioRef,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recorder, \"Qedh8AAYwGbxnDZOa8PZ+vuUeH0=\", false, function () {\n  return [useRecorder, useStyles];\n});\n\n_c = Recorder;\nexport default Recorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Recorder.js"],"names":["useState","useRef","render","useRecorder","axios","Button","Container","Grid","makeStyles","defaults","xsrfCookieName","xsrfHeaderName","useStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","grid","Recorder","props","audioURL","isRecording","startRecording","stopRecording","rawData","audioRef","classes","audio","current","currentAudio","addEventListener","event","sets","forwardedRef"],"mappings":"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","sourcesContent":["\nimport { useState, useRef } from  'react'\nimport { render } from \"react-dom\";\nimport useRecorder from \"./useRecorder\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"column\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex\",\n        elevation: 3,\n        justifyContent:\"center\",\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    \n    grid: {\n        \n        justifyContent:\"space-evenly\",\n        spacing:\"2\",\n        \n       \n        \n    }\n}));\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  let audioRef = useRef()\n  const classes = useStyles();\n  const audio = audioRef.current\n\n  // const handlestop = props.sets(rawData)\n  \n  const currentAudio = audio ? audio.addEventListener('canplaythrough', (event) => {\n    if (rawData) {props.sets(rawData)};\n    return\n  }) : \"NONE\";\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n      \n    <Grid contaimer className={classes.grid}>\n    <div className=\"Player\">\n            <audio\n                controls\n                src=\"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\" />\n        </div>\n    <Button onClick={startRecording} disabled={isRecording}>\n        start recording\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop recording\n      </Button>\n      <audio src={audioURL} ref={audioRef} controls/>\n      \n      </Grid>\n      \n    </div>\n  );\n}\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}