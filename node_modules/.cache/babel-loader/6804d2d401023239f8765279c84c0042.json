{"ast":null,"code":"import _toConsumableArray from\"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useState,useEffect,useRef}from'react';import{Chart,registerables}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";Chart.register.apply(Chart,_toConsumableArray(registerables));var skipped=function skipped(ctx,value){return ctx.p0.skip||ctx.p1.skip?value:undefined;};var down=function down(ctx,value){return ctx.p0.parsed.y>ctx.p1.parsed.y?value:undefined;};export var getPitchScatterData=function getPitchScatterData(processedData){var data=processedData['x_y']||[];for(var i=0;i<data.length;i++){if(data[i]['x']===0){data[i]['x']=NaN;}if(data[i]['y']===0){data[i]['y']=NaN;}}return data;};export var PitchChart=function PitchChart(props){var chartRef=useRef();useEffect(function(){var ctx=chartRef.current.getContext('2d');var myChart=new Chart(ctx,{type:'scatter',data:{datasets:[{label:'Pitch Frequency',data:props.data,borderWidth:1,backgroundColor:'rgb(255, 99, 132)'}]},options:{scales:{y:{},x:{}}}});},[]);return/*#__PURE__*/_jsx(\"canvas\",{id:\"question-data\",ref:chartRef});};export var updateChart=function updateChart(chart,data){var processedData=getPitchScatterData(data);chart.data.datasets.data=data;chart.update();};export default PitchChart;","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/SoundChart.js"],"names":["React","useState","useEffect","useRef","Chart","registerables","register","skipped","ctx","value","p0","skip","p1","undefined","down","parsed","y","getPitchScatterData","processedData","data","i","length","NaN","PitchChart","props","chartRef","current","getContext","myChart","type","datasets","label","borderWidth","backgroundColor","options","scales","x","updateChart","chart","update"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,KAAT,CAAgBC,aAAhB,KAAqC,UAArC,C,2CAEAD,KAAK,CAACE,QAAN,OAAAF,KAAK,oBAAaC,aAAb,EAAL,CAEA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAMC,KAAN,QAAgBD,CAAAA,GAAG,CAACE,EAAJ,CAAOC,IAAP,EAAeH,GAAG,CAACI,EAAJ,CAAOD,IAAtB,CAA6BF,KAA7B,CAAqCI,SAArD,EAAhB,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACN,GAAD,CAAMC,KAAN,QAAgBD,CAAAA,GAAG,CAACE,EAAJ,CAAOK,MAAP,CAAcC,CAAd,CAAkBR,GAAG,CAACI,EAAJ,CAAOG,MAAP,CAAcC,CAAhC,CAAoCP,KAApC,CAA4CI,SAA5D,EAAb,CAEA,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,aAAD,CAAmB,CAElD,GAAIC,CAAAA,IAAI,CAAGD,aAAa,CAAC,KAAD,CAAb,EAAwB,EAAnC,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,IAAI,CAACE,MAAzB,CAAiCD,CAAC,EAAlC,CAAsC,CAClC,GAAID,IAAI,CAACC,CAAD,CAAJ,CAAQ,GAAR,IAAiB,CAArB,CAAwB,CACpBD,IAAI,CAACC,CAAD,CAAJ,CAAQ,GAAR,EAAeE,GAAf,CACH,CACD,GAAIH,IAAI,CAACC,CAAD,CAAJ,CAAQ,GAAR,IAAiB,CAArB,CAAwB,CACpBD,IAAI,CAACC,CAAD,CAAJ,CAAQ,GAAR,EAAeE,GAAf,CACH,CACF,CAEH,MAAOH,CAAAA,IAAP,CACH,CAbM,CAeP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAEC,KAAF,CAAa,CACnC,GAAIC,CAAAA,QAAQ,CAAGtB,MAAM,EAArB,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAIM,CAAAA,GAAG,CAAGiB,QAAQ,CAACC,OAAT,CAAiBC,UAAjB,CAA4B,IAA5B,CAAV,CAEA,GAAIC,CAAAA,OAAO,CAAG,GAAIxB,CAAAA,KAAJ,CAAUI,GAAV,CAAe,CACzBqB,IAAI,CAAE,SADmB,CAEzBV,IAAI,CAAE,CACFW,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,iBADA,CAEPZ,IAAI,CAAEK,KAAK,CAACL,IAFL,CAGPa,WAAW,CAAE,CAHN,CAIPC,eAAe,CAAE,mBAJV,CAAD,CADR,CAFmB,CAUrBC,OAAO,CAAE,CACLC,MAAM,CAAE,CACJnB,CAAC,CAAE,EADC,CAEJoB,CAAC,CAAE,EAFC,CADH,CAVY,CAAf,CAAd,CAiBC,CApBI,CAoBH,EApBG,CAAT,CAsBA,mBACI,eAAQ,EAAE,CAAC,eAAX,CAA2B,GAAG,CAAEX,QAAhC,EADJ,CAGH,CA5BM,CA8BP,MAAO,IAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQnB,IAAR,CAAiB,CACxC,GAAMD,CAAAA,aAAa,CAAGD,mBAAmB,CAACE,IAAD,CAAzC,CACAmB,KAAK,CAACnB,IAAN,CAAWW,QAAX,CAAoBX,IAApB,CAA2BA,IAA3B,CACAmB,KAAK,CAACC,MAAN,GACH,CAJM,CAMP,cAAehB,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\nChart.register(...registerables);\n\nconst skipped = (ctx, value) => ctx.p0.skip || ctx.p1.skip ? value : undefined;\nconst down = (ctx, value) => ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;\n\nexport const getPitchScatterData = (processedData) => {\n    \n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n\nexport const updateChart = (chart, data) => {\n    const processedData = getPitchScatterData(data)\n    chart.data.datasets.data = data\n    chart.update()\n}\n\nexport default PitchChart\n"]},"metadata":{},"sourceType":"module"}