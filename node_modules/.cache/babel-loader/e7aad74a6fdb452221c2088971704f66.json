{"ast":null,"code":"import { getCSRF } from './csrfHelper.js';\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nexport const processAudioData = async data => {\n  let requestData = JSON.stringify(data);\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: reu,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      console.log(\"hello from transform\");\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      console.log(\"hello from response\");\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};\nexport const processAudioData2 = async data => {\n  const response = await axios({\n    method: \"post\",\n    url: \"/api/process/\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/octet-stream\"\n    },\n    transformRequest: [data => {\n      return JSON.stringify(data);\n    }],\n    transformResponse: [data => {\n      return JSON.parse(data);\n    }]\n  });\n  return response;\n};","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js"],"names":["getCSRF","axios","defaults","xsrfCookieName","xsrfHeaderName","processAudioData","data","requestData","JSON","stringify","response","method","url","reu","headers","transformRequest","console","log","transformResponse","parse","processAudioData2"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AAC5C,MAAIC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAlB;AACA,QAAMI,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAE,eAFoB;AAGzBN,IAAAA,IAAI,EAAEO,GAHmB;AAIzBC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJgB;AAKzBC,IAAAA,gBAAgB,EAAE,CAAET,IAAD,IAAU;AACzBU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAOT,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACH,KAHiB,CALO;AASzBY,IAAAA,iBAAiB,EAAE,CAAEZ,IAAD,IAAU;AAC1BU,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,aAAOT,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAP;AACH,KAHkB;AATM,GAAD,CAA5B;AAcA,SAAOI,QAAP;AACH,CAjBM;AAmBP,OAAO,MAAMU,iBAAiB,GAAG,MAAOd,IAAP,IAAgB;AAC7C,QAAMI,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAE,eAFoB;AAGzBN,IAAAA,IAAI,EAAEA,IAHmB;AAIzBQ,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAJgB;AAKzBC,IAAAA,gBAAgB,EAAE,CAAET,IAAD,IAAU;AACzB,aAAOE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACH,KAFiB,CALO;AAQzBY,IAAAA,iBAAiB,EAAE,CAAEZ,IAAD,IAAU;AAE1B,aAAOE,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAP;AACH,KAHkB;AARM,GAAD,CAA5B;AAaA,SAAOI,QAAP;AACH,CAfM","sourcesContent":["import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    let requestData = JSON.stringify(data)\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: reu,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            console.log(\"hello from transform\")\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            console.log(\"hello from response\")\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}\n\nexport const processAudioData2 = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}"]},"metadata":{},"sourceType":"module"}