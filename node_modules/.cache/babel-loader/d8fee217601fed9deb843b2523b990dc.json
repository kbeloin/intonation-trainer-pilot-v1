{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js';\nimport Player from './Player.js';\nimport axios from \"axios\";\nimport SoundChart from './SoundChart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    flexDirection: \"row\",\n    minWidth: '100vw',\n    minHeight: '80vh',\n    display: \"flex-box\",\n    elevation: 3,\n    alignItems: \"center\"\n  },\n  container: {\n    position: 'relative',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  button: {\n    position: 'absolute',\n    bottom: '0',\n    right: '0'\n  },\n  grid: {\n    height: \"50%\",\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"100%\"\n  },\n  chart: {\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"40%\",\n    marginBottom: \"1vh\",\n    minWidth: \"35vw\"\n  }\n}));\n\nconst getCSRF = () => {\n  try {\n    const token = document.cookie.split('; ').find(row => row.startsWith('csrftoken=')).split('=')[1];\n    return token;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst uploadFile = (file, s3Data, url) => {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", url);\n  console.log(s3Data);\n  var postData = new FormData();\n  var fields = s3Data.fields;\n  console.log(fields);\n  Object.entries(s3Data).forEach(([key, value]) => xhr.setRequestHeader(key, value));\n  postData.append('file', file);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      if (xhr.status === 200 || xhr.status === 204) {\n        var response = JSON.parse(xhr.responseText);\n        console.log(response);\n      } else {\n        alert(\"Could not upload file.\");\n      }\n    }\n  };\n\n  console.log(file);\n  xhr.send(postData);\n};\n\nconst getSignedRequest = file => {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"/api/sign_s3\");\n  xhr.setRequestHeader(\"X-CSRFToken\", getCSRF());\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      if (xhr.status === 200) {\n        var response = JSON.parse(xhr.responseText);\n        console.log(response);\n        uploadFile(file, response.data, response.url);\n      } else {\n        alert(\"Could not get signed URL.\");\n      }\n    }\n  };\n\n  xhr.send();\n};\n\nconst processData = data => {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"/api/process/\", true);\n  xhr.setRequestHeader(\"X-CSRFToken\", getCSRF()); //Send the proper header information along with the request\n\n  xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n\n  xhr.onreadystatechange = function () {\n    // Call a function when the state changes.\n    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n      var response = JSON.parse(xhr.responseText);\n      return response;\n    }\n  };\n\n  xhr.send(JSON.stringify(data));\n};\n\nconst ProdTask = props => {\n  _s();\n\n  let [src, setCurrentSrc] = useState();\n  let [staged, setStagedData] = useState();\n  let [processedData, setProcessedData] = useState(null);\n  const classes = useStyles();\n  const childRef = useRef(null);\n\n  const handleChange = () => {\n    let audio = staged;\n    console.log(staged); // document.getElementById(\"recorder\").currentSrc\n\n    setCurrentSrc(staged); // console.log(src)\n  }; // useEffect(() => {\n  //     // Update the document title using the browser API\n  //     src === undefined ? console.log(\"None\") : processData(src)},[src]);\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    src === undefined ? console.log(\"None\") : processData(src);\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(SoundChart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(SoundChart, {\n              data: processedData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Recorder, {\n            forwardedRef: childRef,\n            sets: setStagedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleChange,\n            children: \"Welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ProdTask, \"sUNyue9YdfqavcTlhMPfSZ1+yZo=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProdTask;\nexport default _c2 = withRouter(ProdTask);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProdTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js"],"names":["React","useState","useEffect","useRef","makeStyles","Grid","Paper","Button","Typography","Container","withRouter","NavLink","Recorder","Player","axios","SoundChart","useStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","button","bottom","right","grid","direction","chart","marginBottom","getCSRF","token","document","cookie","split","find","row","startsWith","e","console","log","uploadFile","file","s3Data","url","xhr","XMLHttpRequest","open","postData","FormData","fields","Object","entries","forEach","key","value","setRequestHeader","append","onreadystatechange","readyState","status","response","JSON","parse","responseText","alert","send","getSignedRequest","data","processData","DONE","stringify","ProdTask","props","src","setCurrentSrc","staged","setStagedData","processedData","setProcessedData","classes","childRef","handleChange","audio","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container'\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js'\nimport Player from './Player.js';\nimport axios from \"axios\";\nimport SoundChart from './SoundChart.js';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        \n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst getCSRF = () => {\n    try {\n    const token = document.cookie\n        .split('; ')\n        .find(row => row.startsWith('csrftoken='))\n        .split('=')[1]\n    return token\n    } catch (e) {console.log(e)}\n}\n\nconst uploadFile = (file, s3Data, url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\",url);\n    console.log(s3Data)\n    var postData = new FormData();\n    var fields = s3Data.fields\n    console.log(fields)\n    Object.entries(s3Data).forEach(([key, value]) => \n    xhr.setRequestHeader(key, value));\n\n    postData.append('file', file);\n  \n    xhr.onreadystatechange = function() {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200 || xhr.status === 204){\n            var response = JSON.parse(xhr.responseText);\n            console.log(response)\n        }\n        else{\n          alert(\"Could not upload file.\");\n        }\n     }\n    };\n    console.log(file)\n    xhr.send(postData);\n  }\n\n\nconst getSignedRequest = (file) => {\n    \n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"/api/sign_s3\");\n    xhr.setRequestHeader(\"X-CSRFToken\", getCSRF());\n    xhr.onreadystatechange = function(){\n        if(xhr.readyState === 4){\n        if(xhr.status === 200){\n            var response = JSON.parse(xhr.responseText);\n            console.log(response)\n            uploadFile(file, response.data, response.url);\n        }\n        else{\n            alert(\"Could not get signed URL.\");\n        }\n        }\n    };\n    xhr.send();\n    }\n\nconst processData = (data) => {\n    var xhr = new XMLHttpRequest()\n    \n\n    xhr.open(\"POST\", \"/api/process/\", true);\n    xhr.setRequestHeader(\"X-CSRFToken\", getCSRF());\n    //Send the proper header information along with the request\n    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n\n    \n    xhr.onreadystatechange = function() { // Call a function when the state changes.\n        if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n            var response = JSON.parse(xhr.responseText);\n            return response\n        }\n    }\n    \n    xhr.send(JSON.stringify(data))\n\n}\n\nconst ProdTask = (props) => {\n    let [src, setCurrentSrc] = useState()\n    let [staged, setStagedData] = useState()\n    let [processedData, setProcessedData] = useState(null)\n    const classes = useStyles();\n    const childRef = useRef(null);\n    \n\n    const handleChange = () => {\n        let audio = staged\n        console.log(staged)\n        // document.getElementById(\"recorder\").currentSrc\n        setCurrentSrc(staged)     // console.log(src)\n    }\n    \n    // useEffect(() => {\n    //     // Update the document title using the browser API\n        \n    //     src === undefined ? console.log(\"None\") : processData(src)},[src]);\n    \n    useEffect(() => {\n        // Update the document title using the browser API\n        \n        src === undefined ? console.log(\"None\") : processData(src)},[src]);\n\n    \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            \n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper className={classes.chart}>\n                            <SoundChart />\n                        </Paper>\n                        <Player />\n                    </Grid>\n                    <Grid item>\n                        <Paper className={classes.chart}>\n                            <SoundChart data={processedData}/>\n                        </Paper>\n                        <Recorder forwardedRef={childRef} sets={setStagedData}/>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={handleChange}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            \n        </Paper>\n        </div>\n        );\n    }\nexport default withRouter(ProdTask)\n"]},"metadata":{},"sourceType":"module"}