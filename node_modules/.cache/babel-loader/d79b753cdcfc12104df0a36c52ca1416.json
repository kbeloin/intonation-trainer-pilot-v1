{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getCSRF}from'./csrfHelper.js';import axios from'axios';axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';export var processAudioData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:\"post\",url:\"/api/process/\",data:data,headers:{\"Content-Type\":\"application/octet-stream\"},transformRequest:[function(data){console.log(\"hello from transform\");return JSON.stringify(data);}],transformResponse:[function(data){console.log(\"hello from response\");return JSON.parse(data);}]});case 2:response=_context.sent;console.log(\"Asychronous response\");return _context.abrupt(\"return\",response);case 5:case\"end\":return _context.stop();}}},_callee);}));return function processAudioData(_x){return _ref.apply(this,arguments);};}();export var processAudioData2=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios({method:\"post\",url:\"/api/process/\",data:data,headers:{\"Content-Type\":\"application/octet-stream\"},transformRequest:[function(data){return JSON.stringify(data);}],transformResponse:[function(data){return JSON.parse(data);}]});case 2:response=_context2.sent;return _context2.abrupt(\"return\",response);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function processAudioData2(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js"],"names":["getCSRF","axios","defaults","xsrfCookieName","xsrfHeaderName","processAudioData","data","method","url","headers","transformRequest","console","log","JSON","stringify","transformResponse","parse","response","processAudioData2"],"mappings":"yWAAA,OAASA,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,CAAgC,WAAhC,CACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,CAAgC,aAAhC,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,IAAP,qJACLL,CAAAA,KAAK,CAAC,CACzBM,MAAM,CAAE,MADiB,CAEzBC,GAAG,CAAE,eAFoB,CAGzBF,IAAI,CAAEA,IAHmB,CAIzBG,OAAO,CAAE,CAAC,eAAgB,0BAAjB,CAJgB,CAKzBC,gBAAgB,CAAE,CAAC,SAACJ,IAAD,CAAU,CACzBK,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACA,MAAOC,CAAAA,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAP,CACH,CAHiB,CALO,CASzBS,iBAAiB,CAAE,CAAC,SAACT,IAAD,CAAU,CAC1BK,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,MAAOC,CAAAA,IAAI,CAACG,KAAL,CAAWV,IAAX,CAAP,CACH,CAHkB,CATM,CAAD,CADA,QACtBW,QADsB,eAe5BN,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAf4B,gCAgBrBK,QAhBqB,wDAAH,kBAAhBZ,CAAAA,gBAAgB,4CAAtB,CAmBP,MAAO,IAAMa,CAAAA,iBAAiB,2FAAG,kBAAOZ,IAAP,0JACNL,CAAAA,KAAK,CAAC,CACzBM,MAAM,CAAE,MADiB,CAEzBC,GAAG,CAAE,eAFoB,CAGzBF,IAAI,CAAEA,IAHmB,CAIzBG,OAAO,CAAE,CAAC,eAAgB,0BAAjB,CAJgB,CAKzBC,gBAAgB,CAAE,CAAC,SAACJ,IAAD,CAAU,CACzB,MAAOO,CAAAA,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAP,CACH,CAFiB,CALO,CAQzBS,iBAAiB,CAAE,CAAC,SAACT,IAAD,CAAU,CAE1B,MAAOO,CAAAA,IAAI,CAACG,KAAL,CAAWV,IAAX,CAAP,CACH,CAHkB,CARM,CAAD,CADC,QACvBW,QADuB,iDActBA,QAdsB,0DAAH,kBAAjBC,CAAAA,iBAAiB,8CAAvB","sourcesContent":["import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            console.log(\"hello from transform\")\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            console.log(\"hello from response\")\n            return JSON.parse(data);\n        }]\n    });\n    console.log(\"Asychronous response\")\n    return response\n}\n\nexport const processAudioData2 = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n\n            return JSON.parse(data);\n        }]\n    });\n    return response\n}"]},"metadata":{},"sourceType":"module"}