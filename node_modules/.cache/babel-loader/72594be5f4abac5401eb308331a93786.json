{"ast":null,"code":"var _jsxFileName = \"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js';\nimport Player from './Player.js';\nimport { processAudioData } from '../utils/processAudio.js';\nimport { getPitchScatterData, resetCanvas, newPitchChart, newCanvas } from './SoundChart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    flexDirection: \"row\",\n    minWidth: '100vw',\n    minHeight: '80vh',\n    display: \"flex-box\",\n    elevation: 3,\n    alignItems: \"center\"\n  },\n  container: {\n    position: 'relative',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  button: {\n    position: 'absolute',\n    bottom: '0',\n    right: '0'\n  },\n  grid: {\n    height: \"50%\",\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"100%\"\n  },\n  chart: {\n    justifyContent: \"space-evenly\",\n    spacing: \"0\",\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    minHeight: \"40%\",\n    marginBottom: \"1vh\",\n    minWidth: \"35vw\"\n  }\n}));\n\nconst uploadFile = (file, s3Data, url) => {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", url);\n  console.log(s3Data);\n  var postData = new FormData();\n  var fields = s3Data.fields;\n  console.log(fields);\n  Object.entries(s3Data).forEach(([key, value]) => xhr.setRequestHeader(key, value));\n  postData.append('file', file);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      if (xhr.status === 200 || xhr.status === 204) {\n        var response = JSON.parse(xhr.responseText);\n        console.log(response);\n      } else {\n        alert(\"Could not upload file.\");\n      }\n    }\n  };\n\n  xhr.send(postData);\n};\n\nconst getSignedRequest = file => {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"/api/sign_s3\");\n  xhr.setRequestHeader(\"X-CSRFToken\", getCSRF());\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      if (xhr.status === 200) {\n        var response = JSON.parse(xhr.responseText);\n        console.log(response);\n        uploadFile(file, response.data, response.url);\n      } else {\n        alert(\"Could not get signed URL.\");\n      }\n    }\n  };\n\n  xhr.send();\n};\n\nconst ProdTask = props => {\n  _s();\n\n  let [src, setCurrentSrc] = useState();\n  let [staged, setStagedData] = useState();\n  let [processedData, setProcessedData] = useState(null);\n  let [chartA, setChartA] = useState();\n  let [chartB, setChartB] = useState();\n  const classes = useStyles();\n  const responseDataRef = useRef(null);\n  const questionDataRef = useRef(null);\n\n  const handleChange = () => {\n    setCurrentSrc(staged); // console.log(src)\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser AP\n    src === undefined ? console.log(\"No data recorded\") : data = processAudioData(src);\n    newCanvas = resetCanvas('response-data', 'response-data-canvas');\n    newPitchChart(newCanvas, getPitchScatterData(data));\n    setProcessedData(response);\n  }, [src]);\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log(\"Processed data changed:\", processedData);\n  }, [processedData]);\n  useEffect(() => {\n    setChartA(newPitchChart(questionDataRef.current, []));\n    setChartB(newPitchChart(responseDataRef.current, [])); // Update the document title using the browser AP\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            id: \"response-data-container\",\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"question-data\",\n              ref: questionDataRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            id: \"response-data-container\",\n            className: classes.chart,\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"response-data\",\n              ref: responseDataRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Recorder, {\n            sets: setStagedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleChange,\n            children: \"Welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProdTask, \"maouOKm3s0X0LzNYcAWl1rTJTfA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProdTask;\nexport default _c2 = withRouter(ProdTask);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProdTask\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js"],"names":["React","useState","useEffect","useRef","makeStyles","Grid","Paper","Button","Typography","withRouter","NavLink","Recorder","Player","processAudioData","getPitchScatterData","resetCanvas","newPitchChart","newCanvas","useStyles","theme","content","justifyContent","display","paper","padding","spacing","flexDirection","minWidth","minHeight","elevation","alignItems","container","position","height","button","bottom","right","grid","direction","chart","marginBottom","uploadFile","file","s3Data","url","xhr","XMLHttpRequest","open","console","log","postData","FormData","fields","Object","entries","forEach","key","value","setRequestHeader","append","onreadystatechange","readyState","status","response","JSON","parse","responseText","alert","send","getSignedRequest","getCSRF","data","ProdTask","props","src","setCurrentSrc","staged","setStagedData","processedData","setProcessedData","chartA","setChartA","chartB","setChartB","classes","responseDataRef","questionDataRef","handleChange","undefined","current"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from './Recorder.js'\nimport Player from './Player.js';\nimport { processAudioData } from '../utils/processAudio.js'\nimport { getPitchScatterData, resetCanvas, newPitchChart, newCanvas } from './SoundChart.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\n\nconst uploadFile = (file, s3Data, url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\",url);\n    console.log(s3Data)\n    var postData = new FormData();\n    var fields = s3Data.fields\n    console.log(fields)\n    Object.entries(s3Data).forEach(([key, value]) => \n    xhr.setRequestHeader(key, value));\n\n    postData.append('file', file);\n  \n    xhr.onreadystatechange = function() {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200 || xhr.status === 204){\n            var response = JSON.parse(xhr.responseText);\n            console.log(response)\n        }\n        else{\n          alert(\"Could not upload file.\");\n        }\n     }\n    };\n    xhr.send(postData);\n  }\n\nconst getSignedRequest = (file) => {\n    \n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"/api/sign_s3\");\n    xhr.setRequestHeader(\"X-CSRFToken\", getCSRF());\n    xhr.onreadystatechange = function(){\n        if(xhr.readyState === 4){\n        if(xhr.status === 200){\n            var response = JSON.parse(xhr.responseText);\n            console.log(response)\n            uploadFile(file, response.data, response.url);\n        }\n        else{\n            alert(\"Could not get signed URL.\");\n        }\n        }\n    };\n    xhr.send();\n    }\n\n\n\nconst ProdTask = (props) => {\n    let [src, setCurrentSrc] = useState()\n    let [staged, setStagedData] = useState()\n    let [processedData, setProcessedData] = useState(null)\n\n    let [chartA, setChartA] = useState()\n    let [chartB, setChartB] = useState()\n\n    const classes = useStyles();\n    const responseDataRef = useRef(null);\n    const questionDataRef = useRef(null);\n    \n    const handleChange = () => {\n        setCurrentSrc(staged)     // console.log(src)\n    }\n    \n    \n\n    useEffect(() => {\n        // Update the document title using the browser AP\n        src === undefined ? console.log(\"No data recorded\") : \n\n        data = processAudioData(src)\n        newCanvas = resetCanvas('response-data', 'response-data-canvas')\n        newPitchChart(newCanvas, getPitchScatterData(data))\n        setProcessedData(response)},[src]);\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        console.log(\"Processed data changed:\", processedData)\n    },[processedData]);\n\n    useEffect(() => {\n        setChartA(newPitchChart(questionDataRef.current, []))\n        setChartB(newPitchChart(responseDataRef.current, []))\n        // Update the document title using the browser AP\n    },[]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"response-data-container\" className={classes.chart}>  \n                            <canvas id=\"question-data\" ref={questionDataRef}></canvas>\n                        </Paper>\n                        <Player/>\n                    </Grid>\n                    <Grid item>\n                        <Paper id=\"response-data-container\" className={classes.chart}>\n                            <canvas id=\"response-data\" ref={responseDataRef}></canvas>\n                        </Paper>\n                        <Recorder sets={setStagedData}/>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={handleChange}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\nexport default withRouter(ProdTask)\n"]},"metadata":{},"sourceType":"module"}