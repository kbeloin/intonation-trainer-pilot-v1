[{"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/index.js":"1","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/reportWebVitals.js":"2","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/App.js":"3","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/Modal.js":"4","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Welcome.js":"5","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/useRecorder.js":"6","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js":"7","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/csrfHelper.js":"8","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/Recorder.js":"9","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/Player.js":"10","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/AudioCharts.js":"11","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/responseHelper.js":"12","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js":"13","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/PerceptionTask.js":"14","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/End.js":"15","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/FormDialog.js":"16"},{"size":457,"mtime":1631577898534,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1631571593060,"results":"19","hashOfConfig":"18"},{"size":847,"mtime":1632136889779,"results":"20","hashOfConfig":"18"},{"size":1771,"mtime":1631591309235,"results":"21","hashOfConfig":"22"},{"size":3722,"mtime":1632148115254,"results":"23","hashOfConfig":"18"},{"size":1947,"mtime":1632044784233,"results":"24","hashOfConfig":"18"},{"size":991,"mtime":1632146091925,"results":"25","hashOfConfig":"18"},{"size":266,"mtime":1631861356026,"results":"26","hashOfConfig":"18"},{"size":802,"mtime":1632003226752,"results":"27","hashOfConfig":"18"},{"size":193,"mtime":1632000645752,"results":"28","hashOfConfig":"18"},{"size":891,"mtime":1632147732301,"results":"29","hashOfConfig":"18"},{"size":832,"mtime":1632146191159,"results":"30","hashOfConfig":"18"},{"size":4304,"mtime":1632149433743,"results":"31","hashOfConfig":"18"},{"size":4203,"mtime":1632003109768,"results":"32","hashOfConfig":"18"},{"size":2013,"mtime":1632003119735,"results":"33","hashOfConfig":"18"},{"size":1572,"mtime":1632129035767,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vvmai5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"98rsr3",{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/index.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/reportWebVitals.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/App.js",["75","76"],"import React, { useState, useEffect } from 'react'\nimport Welcome from './components/pages/Welcome'\nimport PerceptionTaskTemplate from './components/pages/PerceptionTask'\nimport ProductionTaskTemplate from './components/pages/ProductionTask'\nimport End from './components/pages/End'\nimport { MemoryRouter } from \"react-router-dom\"\nimport { Route, Switch } from 'react-router-dom'\n\nexport default function App() {\n\n    return (\n      <div className=\"App\">\n        <MemoryRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route path=\"/production-matching\" component={ProductionTaskTemplate} />\n            <Route path=\"/perception-task\" component={PerceptionTaskTemplate} />\n            <Route exact path=\"/done\" component={End} />\n          </Switch>\n        </MemoryRouter>\n      </div>\n    );\n  }\n  ","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/Modal.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/Welcome.js",["77","78","79","80","81","82"],"import React, { useState, useEffect, useRef} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter, NavLink, useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { getResponses } from '../utils/responseHelper';\nimport axios from 'axios';\nimport FormDialog from '../elements/FormDialog';\nimport Fade from '@mui/material/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst Welcome = (props) => {\n  const [currentTask, setCurrentTask] = useState('/')\n  const [newUser, setNewUser] = useState(false)\n  const taskRef = useRef()\n  const history = useHistory()\n\n  const createTrial = (code) => {\naxios.get('/api/get-responses/').then((response) => {\n      console.log(\"Checking if user exists...\")\n      const data = response.data\n      if (data === 'None') {\n        axios({\n          method: \"post\",\n          url: \"/api/create-response-set/\",\n          data: { 'code': code }\n        }).then((res) => console.log(\"Created response set for user.\"))\n      }})\n\n    nextTask()\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialize  \n  }\n\n  const nextTask = () => {\n    getResponses().then((response) => \n      {\n        const data = response.data\n        console.log(data.type);\n        history.push(`/${data.taskData.type}`)\n      // axios.post() // get most recent task\n      });\n  }\n  \n\n\n  \n  // Entry point: \n  const classes = useStyles();\n\n  useEffect(() =>{\n    // const nav = taskRef.current.setAttribute('href', '/production-task')\n    // console.log(nav)\n    // setCurrentTask('/production-task/')\n    // console.log('Loaded')\n    axios.get('/api/get-responses/').then((response) => {\n      const data = response.data\n      if (data === 'None') {\n        setNewUser(true)\n        return\n      }\n      if (!newUser) {\n        history.push(`/${data.taskData.type}`)\n      }\n    })\n    }, \n    [])\n\n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n            <Grid item>\n              <Fade in={newUser}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n                </Fade>\n            </Grid>\n            <Grid item>\n            <Container className={classes.container}>\n              {/* <NavLink className={classes.button} ref={taskRef} style={{ textDecoration: 'none' }} key= ''> */}\n                <FormDialog onSubmit={createTrial}/>\n              {/* </NavLink> */}\n            </Container>\n            </Grid>\n            </Grid>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(Welcome);\n\n","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/useRecorder.js",["83","84"],"import { useEffect, useState } from \"react\";\n\n\n\nvar options = {\n  audioBitsPerSecond: 16000\n}\n\n\nconst ctx = new AudioContext();\nconst reader = new FileReader();\n\nconst useRecorder = () => {\nconst [audioURL, setAudioURL] = useState(\"\");\nconst [isRecording, setIsRecording] = useState(false);\nconst [recorder, setRecorder] = useState(null);\nconst [rawData, setRawData] = useState(null)\n  \n\n  useEffect(() => {\n    // Lazily obtain recorder first time we're recording.\n    if (recorder === null) {\n      if (isRecording) {\n        requestRecorder().then(setRecorder, console.error);\n      }\n      return;\n    }\n\n    // Manage recorder state.\n    if (isRecording) {\n      recorder.start();\n    } else {\n      recorder.stop();\n    }\n\n    // Obtain the audio when ready.\n    const handleData = e => {\n      // const blob = new Blob([e.data]);\n      let ctx = new AudioContext();\n      let reader = new FileReader();\n\n      reader.readAsArrayBuffer(e.data);\n      reader.onloadend = () => {\n        console.log('data loaded')\n        ctx.decodeAudioData(reader.result).then(function(decodedData) {\n          console.log(decodedData)\n          const view = decodedData.getChannelData(0) //\n          setRawData(view); // This might be done by \n          setAudioURL(URL.createObjectURL(e.data))//log of base64data is \"data:audio/ogg; codecs=opus;base64,GkX...\"\n       });  \n      }\n    }; \n    recorder.addEventListener(\"dataavailable\", handleData);\n    return () => recorder.removeEventListener(\"dataavailable\", handleData);\n  }, [recorder, isRecording]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  return [audioURL, isRecording, startRecording, stopRecording, rawData];\n};\n\nasync function requestRecorder() {\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  return new MediaRecorder(stream, options);\n}\nexport default useRecorder;\n\n\n","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/processAudio.js",["85"],"import { getCSRF } from './csrfHelper.js'\nimport axios from 'axios'\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const processAudioData = async (data) => {\n    const response = await axios({\n        method: \"post\",\n        url: \"/api/process/\",\n        data: data,\n        headers: {\"Content-Type\": \"application/octet-stream\"},\n        transformRequest: [(data) => {\n            return JSON.stringify(data);\n        }],\n        transformResponse: [(data) => {\n            return JSON.parse(data);\n        }]\n    });\n    console.log(\"Asychronous response\")\n    return response\n}\n\nexport const getPitchScatterData = (processedData) => {\n    \n    let data = processedData['x_y'] || []\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]['x'] === 0) {\n            data[i]['x'] = NaN;\n        }\n        if (data[i]['y'] === 0) {\n            data[i]['y'] = NaN;\n        }\n      }\n\n    return data\n}\n\nexport default processAudioData","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/csrfHelper.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/Recorder.js",["86"],"\nimport { useEffect } from  'react'\nimport useRecorder from \"../utils/useRecorder\";\nimport { Button, Grid } from '@material-ui/core'\n\nconst Recorder = (props) => {\n  let [audioURL, isRecording, startRecording, stopRecording, rawData] = useRecorder();\n  \n  useEffect(() => {\n    if (rawData) {\n      console.log(\"Raw data ready.\")\n      props.sets(rawData)\n    } else console.log(\"No current audio.\");\n  }, [rawData])\n\n  return (\n    <div className=\"Recorder\" id=\"recorder\" ref={props.forwardedRef}>\n    <Grid container>\n      <audio src={audioURL} controls/>\n      <Button onClick={startRecording} disabled={isRecording}>\n        start\n      </Button>\n      <Button onClick={stopRecording} disabled={!isRecording}>\n        stop\n      </Button>\n      </Grid> \n    </div>\n  );\n}\n\nexport default Recorder;","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/Player.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/AudioCharts.js",["87","88"],"import React, { useEffect, useRef } from 'react'\nimport { Chart, registerables } from 'chart.js'\n\n\nChart.register(...registerables);\n\nexport const PitchChart = ( props ) => {\n    let chartRef = useRef()\n    \n    useEffect(() => {\n        let ctx = chartRef.current.getContext('2d')\n\n        let myChart = new Chart(ctx, {\n            type: 'scatter',\n            data: {\n                datasets: [{\n                    label: 'Pitch Frequency',\n                    data: props.data,\n                    borderWidth: 1,\n                    backgroundColor: 'rgb(255, 99, 132)'\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: { },\n                        x: { }\n                    }\n                }\n            });\n        },[])\n\n    return (\n        <canvas id=\"question-data\" ref={chartRef}></canvas>\n    )\n}\n","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/utils/responseHelper.js",[],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/ProductionTask.js",["89"],"/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/PerceptionTask.js",["90","91","92","93","94","95","96","97","98","99"],"import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress } from '@mui/material';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport Recorder from '../elements/Recorder'\nimport Player from '../elements/Player';\nimport { processAudioData, getPitchScatterData } from '../utils/processAudio.js'\nimport { submitResponse } from '../utils/responseHelper'\nimport { PitchChart } from '../elements/AudioCharts';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n        padding: theme.spacing(2),\n        flexDirection: \"row\",\n        minWidth: '100vw',\n        minHeight: '80vh',\n        display:\"flex-box\",\n        elevation: 3,\n        alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"space-evenly\",\n        spacing:\"0\",\n        alignItems:\"flex-end\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    },\n\n    chart: {\n        display: 'flex',\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"40%\",\n        marginBottom: \"1vh\",\n        minWidth:\"35vw\",\n    }\n}));\n\nconst PerceptionTaskTemplate = (props) => {\n    const classes = useStyles();\n    let [processedData, setProcessedData] = useState({})\n    let [taskData, setTaskData] = useState(true)\n    let [isLoading, toggleLoading] = useState(true)\n\n    let [chartA, setChartA] = useState()\n    let [chartB, setChartB] = useState()\n\n    let responseDataRef = useRef(null);\n    let questionDataRef = useRef(null);\n    \n    let handleAudioChange = (data) => {\n        // let newCanvas = resetCanvas('response-data', 'response-data-container', chartB)\n        console.log(isLoading)\n        processAudioData(data).then((response) => { \n            let pitchData = getPitchScatterData(response.data)\n            // setChartB(newPitchChart(newCanvas, pitchData, chartB)) // Destroys chart / resets element\n            setProcessedData(pitchData)\n            toggleLoading(false)\n         })\n    }\n\n    const nextTask = () => {\n        let response = { 'taskData': taskData, 'responseData': processedData }\n        submitResponse()\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API (next action... taskType determines the element to show)\n        if (processedData === null) {\n            \n            console.log(\"No changes recorded\") \n        } else {\n        console.log(\"Processed data changed:\", processedData)}\n        \n        },[processedData]);\n\n    return (\n        <div className={classes.content}>\n            <Paper className={classes.paper}>\n                <Grid container className={classes.grid}>\n                    <Grid item>\n                        <Paper id=\"question-data-container\" className={classes.chart}>  \n                            <PitchChart data={[]}/>\n                        </Paper>\n                        <Player url={\"https://intonation-trainer.s3.us-east-2.amazonaws.com/test-audio.mp3\"}></Player>\n                    </Grid>\n                        <Grid item>\n                            <Paper id=\"response-data-container\" className={classes.chart} >\n                                {isLoading ? <CircularProgress /> : <PitchChart data={processedData}/>}\n                            </Paper>\n                            <Recorder sets={(data) => {handleAudioChange(data); toggleLoading(true);} }/>\n                        </Grid>\n                    <Grid item>\n                        <Button variant=\"outlined\" onClick={() => {nextTask();}}>Welcome</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(PerceptionTaskTemplate)\n","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/pages/End.js",["100"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter, NavLink} from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n    paper: {\n      padding: theme.spacing(2),\n      flexDirection: \"column\",\n      minWidth: '100vw',\n      minHeight: '80vh',\n      display:\"flex\",\n      elevation: 3,\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    },\n    container: {\n        position: 'relative',\n        height: '100%',\n        justifyContent: \"center\"\n    },\n    button: {\n        position: 'absolute',\n        bottom:'0',\n        right: '0'\n    },\n    grid: {\n        height: \"50%\",\n        justifyContent:\"center\",\n        spacing:\"0\",\n        alignItems:\"center\",\n        direction:\"column\",\n        minHeight:\"100%\"\n    }\n}));\n\n\nconst End = (props) => {\n\n  const CreateTrial = (props) => {\n\n    // When the user selects Enter, experiement begins. \n    // 1. Trial is created\n    // 2. Responses are intialized\n    \n  }\n  \n  // Entry point: \n    const classes = useStyles();\n  \n    return (\n      <div className={classes.content}>\n        <Paper className={classes.paper}>\n            <Grid container className={classes.grid}>\n                <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n                    Welcome\n                </Typography>\n            </Grid>\n            <Container className={classes.container}>\n              <NavLink className={classes.button} to='/production-task' style={{ textDecoration: 'none' }} key= ''>\n                <Button variant=\"outlined\">Enter</Button>\n              </NavLink>\n            </Container>\n        </Paper>\n        </div>\n        );\n    }\n\nexport default withRouter(End);\n\n","/Users/kylebeloin/Desktop/intonation_trainer/intonation_trainer/src/components/elements/FormDialog.js",[],{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"106","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":14},{"ruleId":"101","severity":1,"message":"107","line":7,"column":22,"nodeType":"103","messageId":"104","endLine":7,"endColumn":29},{"ruleId":"101","severity":1,"message":"108","line":53,"column":10,"nodeType":"103","messageId":"104","endLine":53,"endColumn":21},{"ruleId":"101","severity":1,"message":"109","line":53,"column":23,"nodeType":"103","messageId":"104","endLine":53,"endColumn":37},{"ruleId":"101","severity":1,"message":"110","line":55,"column":9,"nodeType":"103","messageId":"104","endLine":55,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":108,"column":5,"nodeType":"113","endLine":108,"endColumn":7,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":10,"column":7,"nodeType":"103","messageId":"104","endLine":10,"endColumn":10},{"ruleId":"101","severity":1,"message":"116","line":11,"column":7,"nodeType":"103","messageId":"104","endLine":11,"endColumn":13},{"ruleId":"101","severity":1,"message":"117","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":17},{"ruleId":"111","severity":1,"message":"118","line":14,"column":6,"nodeType":"113","endLine":14,"endColumn":15,"suggestions":"119"},{"ruleId":"101","severity":1,"message":"120","line":13,"column":13,"nodeType":"103","messageId":"104","endLine":13,"endColumn":20},{"ruleId":"111","severity":1,"message":"121","line":30,"column":11,"nodeType":"113","endLine":30,"endColumn":13,"suggestions":"122"},{"ruleId":"101","severity":1,"message":"123","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":18},{"ruleId":"101","severity":1,"message":"123","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":18},{"ruleId":"101","severity":1,"message":"107","line":8,"column":22,"nodeType":"103","messageId":"104","endLine":8,"endColumn":29},{"ruleId":"101","severity":1,"message":"124","line":62,"column":20,"nodeType":"103","messageId":"104","endLine":62,"endColumn":31},{"ruleId":"101","severity":1,"message":"125","line":65,"column":10,"nodeType":"103","messageId":"104","endLine":65,"endColumn":16},{"ruleId":"101","severity":1,"message":"126","line":65,"column":18,"nodeType":"103","messageId":"104","endLine":65,"endColumn":27},{"ruleId":"101","severity":1,"message":"127","line":66,"column":10,"nodeType":"103","messageId":"104","endLine":66,"endColumn":16},{"ruleId":"101","severity":1,"message":"128","line":66,"column":18,"nodeType":"103","messageId":"104","endLine":66,"endColumn":27},{"ruleId":"101","severity":1,"message":"129","line":68,"column":9,"nodeType":"103","messageId":"104","endLine":68,"endColumn":24},{"ruleId":"101","severity":1,"message":"130","line":69,"column":9,"nodeType":"103","messageId":"104","endLine":69,"endColumn":24},{"ruleId":"101","severity":1,"message":"131","line":83,"column":13,"nodeType":"103","messageId":"104","endLine":83,"endColumn":21},{"ruleId":"101","severity":1,"message":"132","line":48,"column":9,"nodeType":"103","messageId":"104","endLine":48,"endColumn":20},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","'currentTask' is assigned a value but never used.","'setCurrentTask' is assigned a value but never used.","'taskRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'newUser'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'ctx' is assigned a value but never used.","'reader' is assigned a value but never used.","'getCSRF' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],"'myChart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["135"],"'Typography' is defined but never used.","'setTaskData' is assigned a value but never used.","'chartA' is assigned a value but never used.","'setChartA' is assigned a value but never used.","'chartB' is assigned a value but never used.","'setChartB' is assigned a value but never used.","'responseDataRef' is assigned a value but never used.","'questionDataRef' is assigned a value but never used.","'response' is assigned a value but never used.","'CreateTrial' is assigned a value but never used.",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [history, newUser]",{"range":"142","text":"143"},"Update the dependencies array to be: [props, rawData]",{"range":"144","text":"145"},"Update the dependencies array to be: [props.data]",{"range":"146","text":"147"},[2906,2908],"[history, newUser]",[406,415],"[props, rawData]",[805,807],"[props.data]"]